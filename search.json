[{"title":"数字IC设计开发Gvim配置","url":"/posts/c608e3c/","content":" <center>记录自己使用的gvim配置文件，包含基础配置及插件功能配置。</center>\n\n<span id=\"more\"></span>\n\n<p>本人不使用vundle之类的东西进行插件管理，</p>\n<p>仅基于VIM 8 pack特性进行插件管理。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>功能</th>\n<th>git clone链接</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>nerdtree</td>\n<td>文件目录树</td>\n<td><a href=\"https://github.com/preservim/nerdtree.git\">https://github.com/preservim/nerdtree.git</a></td>\n</tr>\n<tr>\n<td>nerdcommenter</td>\n<td>快速注释</td>\n<td><a href=\"https://github.com/preservim/nerdcommenter.git\">https://github.com/preservim/nerdcommenter.git</a></td>\n</tr>\n<tr>\n<td>vim-airline</td>\n<td>状态栏美化</td>\n<td><a href=\"https://github.com/vim-airline/vim-airline.git\">https://github.com/vim-airline/vim-airline.git</a></td>\n</tr>\n<tr>\n<td>vim-snippets</td>\n<td>代码片段库</td>\n<td><a href=\"https://github.com/honza/vim-snippets.git\">https://github.com/honza/vim-snippets.git</a></td>\n</tr>\n<tr>\n<td>vim-snipmate</td>\n<td>代码片段展开</td>\n<td><a href=\"https://github.com/garbas/vim-snipmate.git\">https://github.com/garbas/vim-snipmate.git</a></td>\n</tr>\n<tr>\n<td>vim-addon-mw-utils</td>\n<td>vim-snipmate依赖插件</td>\n<td><a href=\"https://github.com/MarcWeber/vim-addon-mw-utils.git\">https://github.com/MarcWeber/vim-addon-mw-utils.git</a></td>\n</tr>\n<tr>\n<td>tlib_vim</td>\n<td>vim-snipmate依赖插件</td>\n<td><a href=\"https://github.com/tomtom/tlib_vim.git\">https://github.com/tomtom/tlib_vim.git</a></td>\n</tr>\n<tr>\n<td>vim-easy-align</td>\n<td>简单的代码对齐</td>\n<td><a href=\"https://github.com/junegunn/vim-easy-align.git\">https://github.com/junegunn/vim-easy-align.git</a></td>\n</tr>\n<tr>\n<td>neocomplcache</td>\n<td>代码补全</td>\n<td><a href=\"https://github.com/Shougo/neocomplcache.vim.git\">https://github.com/Shougo/neocomplcache.vim.git</a></td>\n</tr>\n<tr>\n<td>auto-pairs</td>\n<td>自动配对括号</td>\n<td><a href=\"https://github.com/jiangmiao/auto-pairs.git\">https://github.com/jiangmiao/auto-pairs.git</a></td>\n</tr>\n<tr>\n<td>ale</td>\n<td>语法检查</td>\n<td><a href=\"https://github.com/dense-analysis/ale.git\">https://github.com/dense-analysis/ale.git</a></td>\n</tr>\n<tr>\n<td>gruvbox</td>\n<td>色彩空间</td>\n<td><a href=\"https://github.com/morhetz/gruvbox.git\">https://github.com/morhetz/gruvbox.git</a></td>\n</tr>\n<tr>\n<td>indentLine</td>\n<td>缩进标识</td>\n<td><a href=\"https://github.com/Yggdroot/indentLine.git\">https://github.com/Yggdroot/indentLine.git</a></td>\n</tr>\n<tr>\n<td>vlog_inst_gen.vim</td>\n<td>Verilog自动例化</td>\n<td><a href=\"https://github.com/vim-scripts/vlog_inst_gen.git\">https://github.com/vim-scripts/vlog_inst_gen.git</a></td>\n</tr>\n<tr>\n<td>ctag</td>\n<td>ctag模块标签</td>\n<td></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> basic configuration </span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">syntax on &quot;</span> syntax highlight</span><br><span class=\"line\">filetype plugin indent on  <span class=\"string\">&quot; plugins and indentation based on file type  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">set hlsearch &quot;</span> search highlight</span><br><span class=\"line\"><span class=\"built_in\">set</span> ignorecase <span class=\"string\">&quot; ignore search case</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">set cuc &quot;</span> current column highlight</span><br><span class=\"line\"><span class=\"built_in\">set</span> cul <span class=\"string\">&quot; current line highlight</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">set nu &quot;</span> show line number</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> fileencoding=utf<span class=\"number\">-8</span> <span class=\"string\">&quot;prevent garbled characters</span></span><br><span class=\"line\"><span class=\"string\">set fenc=utf-8</span></span><br><span class=\"line\"><span class=\"string\">set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936,big－5                    </span></span><br><span class=\"line\"><span class=\"string\">set enc=utf-8</span></span><br><span class=\"line\"><span class=\"string\">source $VIMRUNTIME/delmenu.vim</span></span><br><span class=\"line\"><span class=\"string\">source $VIMRUNTIME/menu.vim</span></span><br><span class=\"line\"><span class=\"string\">let &amp;termencoding=&amp;encoding</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">set guifont=Monospace\\ 13 &quot;</span> <span class=\"built_in\">set</span> font </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> tabstop=<span class=\"number\">4</span> <span class=\"string\">&quot; set tab to 4 spaces</span></span><br><span class=\"line\"><span class=\"string\">set expandtab</span></span><br><span class=\"line\"><span class=\"string\">set shiftwidth=4 &quot;</span><span class=\"built_in\">set</span> <span class=\"keyword\">auto</span>-indent to <span class=\"number\">4</span> spaces</span><br><span class=\"line\"><span class=\"built_in\">set</span> softtabstop=<span class=\"number\">4</span> <span class=\"string\">&quot; set the back key to delete 4 spaces</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">set ruler &quot;</span> <span class=\"built_in\">set</span> show ruler</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> smartindent <span class=\"string\">&quot; set smart auto-indent</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">set showcmd &quot;</span> show command</span><br><span class=\"line\"><span class=\"built_in\">set</span> autochdir  <span class=\"string\">&quot; auto-swith working directory</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">winpos 235 235 &quot;</span> <span class=\"built_in\">set</span> windows position </span><br><span class=\"line\"><span class=\"built_in\">set</span> lines=<span class=\"number\">40</span> columns=<span class=\"number\">108</span> <span class=\"string\">&quot; set windows size </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">set nocompatible &quot;</span> remove vi consistency</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> customize shortcut keys </span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">imap ii &lt;ESC&gt;</span></span><br><span class=\"line\"><span class=\"string\">map ww :w&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">map qq :q&lt;CR&gt; </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">let mapleader = &quot;</span>,<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; plugin: NERDTree</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"built_in\">map</span> &lt;leader&gt;ne :NERDTreeToggle&lt;CR&gt;</span><br><span class=\"line\">let g:NERDTreeWinSize = <span class=\"number\">25</span> <span class=\"string\">&quot; set nerdtree size</span></span><br><span class=\"line\"><span class=\"string\">let NERDTreeIgnore=[&#x27;\\.pyc&#x27;,&#x27;\\~$&#x27;,&#x27;\\.swp&#x27;] &quot;</span> ignore the display of the following files</span><br><span class=\"line\">let NERDTreeShowHidden=<span class=\"number\">1</span> <span class=\"string\">&quot; show hidden files</span></span><br><span class=\"line\"><span class=\"string\">let g:NERDTreeDirArrowExpandable = &#x27;▸&#x27; &quot;</span> modify the <span class=\"keyword\">default</span> arrow symbol</span><br><span class=\"line\">let g:NERDTreeDirArrowCollapsible = <span class=\"string\">&#x27;▾&#x27;</span></span><br><span class=\"line\">autocmd bufenter * <span class=\"keyword\">if</span> (winnr(<span class=\"string\">&quot;$&quot;</span>) == <span class=\"number\">1</span> &amp;&amp; exists(<span class=\"string\">&quot;b:NERDTree&quot;</span>) &amp;&amp; b:NERDTree.isTabTree()) | q | endif</span><br><span class=\"line\"><span class=\"string\">&quot; nerdtree hot key mapping</span></span><br><span class=\"line\"><span class=\"string\">map &lt;F5&gt; :NERDTreeMirror&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">map &lt;F5&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">map &lt;leader&gt;f :NERDTreeFind&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; plugin: airline</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\">let g:airline_theme=<span class=\"string\">&#x27;base16_gruvbox_dark_hard&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> plugin: indentline</span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">let g:indentLine_enable = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:autopep8_disable_show_diff=1</span></span><br><span class=\"line\"><span class=\"string\">let g:indentLine_char_list = [&#x27;|&#x27;, &#x27;¦&#x27;, &#x27;┆&#x27;, &#x27;┊&#x27;]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; plugin: easyalign</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; Start interactive EasyAlign in visual mode (e.g. vipga)</span></span><br><span class=\"line\"><span class=\"string\">xmap ga &lt;Plug&gt;(EasyAlign)</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Start interactive EasyAlign <span class=\"keyword\">for</span> a motion/text object (e.g. gaip)</span><br><span class=\"line\">nmap ga &lt;Plug&gt;(EasyAlign)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> plugin: neocomplcache</span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">let g:neocomplcache_enable_at_startup = 1 &quot;</span> <span class=\"keyword\">auto</span> start neocomplcache  </span><br><span class=\"line\">let g:neocomplcache_enable_auto_select = <span class=\"number\">1</span> <span class=\"string\">&quot; auto select the first item in the list</span></span><br><span class=\"line\"><span class=\"string\">let g:neocomplcache_min_syntax_length = 2 &quot;</span> Set minimum syntax keyword length.</span><br><span class=\"line\">let g:neocomplcache_lock_buffer_name_pattern = <span class=\"string\">&#x27;\\*ku\\*&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; inoremap &lt;expr&gt;&lt;CR&gt;  neocomplcache#smart_close_popup() . &quot;</span>\\&lt;CR&gt;<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">inoremap &lt;expr&gt;&lt;C-Y&gt;  neocomplcache#close_popup()</span></span><br><span class=\"line\"><span class=\"string\">inoremap &lt;expr&gt;&lt;space&gt;  neocomplcache#undo_completion()</span></span><br><span class=\"line\"><span class=\"string\">inoremap &lt;expr&gt;&lt;Enter&gt;  pumvisible() ? &quot;</span>\\&lt;C-Y&gt;<span class=\"string\">&quot; : &quot;</span>\\&lt;Enter&gt;<span class=\"string\">&quot;  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; plugin: gruvbox</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"built_in\">set</span> bg=dark</span><br><span class=\"line\">colorscheme gruvbox</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> plugin: nerdcommender</span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> my key: ,cl /,cc /,cu /,c&lt;space&gt;</span><br><span class=\"line\">let g:NERDSpaceDelims = <span class=\"number\">1</span> <span class=\"string\">&quot; add space after comment</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; plugin: ale</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;keep the sign gutter open</span></span><br><span class=\"line\"><span class=\"string\">let g:ale_sign_column_always = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:ale_sign_error = &#x27;&gt;&gt;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">let g:ale_sign_warning = &#x27;--&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> show errors or warnings in my statusline</span><br><span class=\"line\">let g:airline<span class=\"meta\">#extensions#ale#enabled = 1 </span></span><br><span class=\"line\"><span class=\"string\">&quot; use quickfix list instead of the loclist</span></span><br><span class=\"line\"><span class=\"string\">let g:ale_set_loclist = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ale_set_quickfix = 1</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> only enable these linters</span><br><span class=\"line\">let g:ale_linters = &#123;</span><br><span class=\"line\">\\    <span class=\"string\">&#x27;verilog&#x27;</span>: [<span class=\"string\">&#x27;iverilog&#x27;</span>]</span><br><span class=\"line\">\\&#125;</span><br><span class=\"line\">nmap &lt;silent&gt; &lt;C-k&gt; &lt;Plug&gt;(ale_previous_wrap)</span><br><span class=\"line\">nmap &lt;silent&gt; &lt;C-J&gt; &lt;Plug&gt;(ale_next_wrap)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> plugin: ctags</span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">nmap gi &lt;C-]&gt; &quot;</span> go into instance module or output port </span><br><span class=\"line\">nmap go &lt;C-o&gt; <span class=\"string\">&quot; go out to upper stage </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; plugin: vlogInst</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\">so ~/.vim/pack/<span class=\"keyword\">default</span>/start/vlog_inst_gen/vlog_inst_gen.vim <span class=\"string\">&quot; set path</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> key: (,ig)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> plugin: snipmate</span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">imap &lt;tab&gt; &lt;Plug&gt;snipMateTrigger &quot;</span> tab expand code snippets</span><br><span class=\"line\">imap &lt;tab&gt; &lt;Plug&gt;snipMateNextOrTrigger</span><br><span class=\"line\">imap &lt;C-tab&gt; &lt;Plug&gt;snipMateShow <span class=\"string\">&quot; tab expand code snippets list</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; auto add file header when create new file</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>-----------------------------------------------------------------------------</span><br><span class=\"line\">autocmd BufNewFile *.v,*.sv,*.cpp,*.c,*.h exec <span class=\"string\">&quot;:call AddHeader()&quot;</span></span><br><span class=\"line\">autocmd BufWrite *.v call UpdateLastModifyTime()</span><br><span class=\"line\"></span><br><span class=\"line\">function s:GetUserName() </span><br><span class=\"line\">    let user_name = <span class=\"string\">&quot;Rongye&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> user_name</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function AddHeader() </span><br><span class=\"line\">       let line = getline(<span class=\"number\">1</span>)</span><br><span class=\"line\">      let filename = expand(<span class=\"string\">&quot;%&quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">0</span>,  <span class=\"string\">&quot;// +FHDR----------------------------------------------------------------------------&quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">1</span>,  <span class=\"string\">&quot;//                 Copyright (c) &quot;</span>.strftime(<span class=\"string\">&quot;%Y &quot;</span>) )</span><br><span class=\"line\">       call append(<span class=\"number\">2</span>,  <span class=\"string\">&quot;//                       ALL RIGHTS RESERVED&quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">3</span>,  <span class=\"string\">&quot;// ---------------------------------------------------------------------------------&quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">4</span>,  <span class=\"string\">&quot;// Filename      : &quot;</span>.filename)</span><br><span class=\"line\">       call append(<span class=\"number\">5</span>,  <span class=\"string\">&quot;// Author        : &quot;</span>.s:GetUserName())</span><br><span class=\"line\">       call append(<span class=\"number\">6</span>,  <span class=\"string\">&quot;// Created On    : &quot;</span>.strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M&quot;</span>))</span><br><span class=\"line\">       call append(<span class=\"number\">7</span>,  <span class=\"string\">&quot;// Last Modified : &quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">8</span>,  <span class=\"string\">&quot;// ---------------------------------------------------------------------------------&quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">9</span>,  <span class=\"string\">&quot;// Description   : &quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">10</span>, <span class=\"string\">&quot;//&quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">11</span>, <span class=\"string\">&quot;//&quot;</span>)</span><br><span class=\"line\">       call append(<span class=\"number\">12</span>, <span class=\"string\">&quot;// -FHDR----------------------------------------------------------------------------&quot;</span>)</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"keyword\">auto</span> update file header modifyTime <span class=\"keyword\">if</span> write</span><br><span class=\"line\"><span class=\"string\">&quot;-----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">function UpdateLastModifyTime() </span></span><br><span class=\"line\"><span class=\"string\">       let line = getline(8)</span></span><br><span class=\"line\"><span class=\"string\">       if line =~ &#x27;// Last Modified&#x27;</span></span><br><span class=\"line\"><span class=\"string\">              call setline(8,&quot;</span><span class=\"comment\">// Last Modified : &quot; . strftime(&quot;%Y-%m-%d %H:%M&quot;))</span></span><br><span class=\"line\">       endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n","categories":["开发环境"],"tags":["技术","vim","IC"]},{"title":"test","url":"/posts/d87f7e0c/","content":"","categories":["测试"],"tags":["测试"]}]