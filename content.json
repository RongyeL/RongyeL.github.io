{"meta":{"title":"IC攻城狮的摸鱼小屋","subtitle":"To be a better IC engineer, maybe?","description":"记录自己在IC领域的所学所想。","author":"Rong晔","url":"https://RongyeL.github.io","root":"/"},"pages":[{"title":"categories","date":"2023-10-24T16:31:05.000Z","updated":"2023-10-24T16:34:27.399Z","comments":false,"path":"categories/index.html","permalink":"https://rongyel.github.io/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2023-10-27T16:36:22.000Z","updated":"2023-10-27T16:36:51.685Z","comments":false,"path":"about/index.html","permalink":"https://rongyel.github.io/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-10-24T16:30:57.000Z","updated":"2023-10-24T16:34:06.899Z","comments":false,"path":"tags/index.html","permalink":"https://rongyel.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"是否能以人为中心构筑一个笔记系统？","slug":"IC攻城狮的摸鱼小屋/方法学论/是否能以人为中心构筑一个笔记系统？","date":"2024-11-13T16:12:37.295Z","updated":"2024-11-13T16:20:18.792Z","comments":true,"path":"posts/721ee34d.html","permalink":"https://rongyel.github.io/posts/721ee34d.html","excerpt":"我这个人，是由什么东西组成的呢？吃、穿、用、游戏、动漫、旅游、技术，还有一些胡思乱想、兴趣杂谈。这天然就是一个笔记分类系统了貌似，我记录的东西，就是组成我的每一样事物，有实体的，没有实体的。","text":"我这个人，是由什么东西组成的呢？吃、穿、用、游戏、动漫、旅游、技术，还有一些胡思乱想、兴趣杂谈。这天然就是一个笔记分类系统了貌似，我记录的东西，就是组成我的每一样事物，有实体的，没有实体的。 如何更好的做笔记？记录到底是为了什么？一直在琢磨这自己的笔记系统，总觉得缺少了一条中轴线。因为我不使用双链的方式来构建文章，所以总觉得有时看东西不方便。我是否能以上面的分析，归档我所有的笔记。然后再以我为轴心，制作一个主页，实现各个内容的跳转呢？是否这样我能更好的总览全局，管理人生呢？ 结语参考文献参考资料1 ↩参考资料2 ↩","categories":[{"name":"方法学论","slug":"方法学论","permalink":"https://rongyel.github.io/categories/%E6%96%B9%E6%B3%95%E5%AD%A6%E8%AE%BA/"}],"tags":[{"name":"方法论","slug":"方法论","permalink":"https://rongyel.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"author":"Rongye"},{"title":"三星S24刷港版","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/数码/三星S24刷港版","date":"2024-11-07T14:51:11.947Z","updated":"2024-11-08T16:26:15.918Z","comments":true,"path":"posts/15462f01.html","permalink":"https://rongyel.github.io/posts/15462f01.html","excerpt":"摘要","text":"摘要 文首描述 刷港版直接启动 擦，第一次直接就砖了B站网盘分享的ROM，，，不靠谱 付费买的ROM，这次就成功了，很顺利。下图就成功了。手机自动重启 通关S助手完成数据传输P30是可以在play市场下载到S换机助手的。直接无线链接就可以了。58.93的内容，大约36分钟搞定。 参考文献参考资料1 ↩参考资料2 ↩","categories":[{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/categories/%E6%95%B0%E7%A0%81/"}],"tags":[{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"},{"name":"三星","slug":"三星","permalink":"https://rongyel.github.io/tags/%E4%B8%89%E6%98%9F/"},{"name":"手机","slug":"手机","permalink":"https://rongyel.github.io/tags/%E6%89%8B%E6%9C%BA/"}],"author":"Rongye"},{"title":"为了C.C.的笑颜，这剧场版也值得一看 —— 复活的鲁路修","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/动漫/为了C.C.的笑颜，这剧场版也值得一看 —— 复活的鲁路修","date":"2024-10-27T12:31:22.660Z","updated":"2024-10-27T12:40:11.816Z","comments":true,"path":"posts/7bfaa02b.html","permalink":"https://rongyel.github.io/posts/7bfaa02b.html","excerpt":"太好了，是幸福的结局。","text":"太好了，是幸福的结局。 剧情食之无味剧情真没啥好说的，就是把所有人都拉出来露个脸。搞了个没啥意思的反派，就这样吧。不多说了 L.L.是你诉说永远一起的誓言但结局，是我想看的。 鲁鲁开窍了，追上C.C. 甚至改名，就叫做 L.L.，听到这里C.C.直接就哭了，展露让人欣慰的笑容。 太好了，他们真的在一起，可以永远在一起。是曾经幻想过的完美结局。要幸福啊两位。 作为粉来讲已经没有什么遗憾了。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"动漫","slug":"动漫","permalink":"https://rongyel.github.io/tags/%E5%8A%A8%E6%BC%AB/"}],"author":"Rongye"},{"title":"群晖NAS删除文件但空间没释放","slug":"IC攻城狮的摸鱼小屋/解决方案/群晖NAS删除文件但空间没释放","date":"2024-10-11T17:24:43.025Z","updated":"2024-11-03T06:51:04.842Z","comments":true,"path":"posts/3c47b44b.html","permalink":"https://rongyel.github.io/posts/3c47b44b.html","excerpt":"突然发现NAS的存储空间不够了。奇怪的是删了很多大视频文件也没有用。","text":"突然发现NAS的存储空间不够了。奇怪的是删了很多大视频文件也没有用。 其实就是因为有些东西删了还存在，比如回收站，比如历史版本。 小标题drive这个工具会保存多个历史版本。比如我默认就是8个版本。这意味着什么呢？这意味着，当一个文件夹内的东西只是被删除一次的时候，这个文件夹等于没删……因为这里不过就是2个版本的变更罢了。。。比如删了一部40g的电影。删、没删、两个版本同时存在。这特么还有什么意义。所以不是所有东西都需要做历史版本管理。drive应该更细化使用 版本管理从8改到2，立马就开始释放空间了……真的要被这个东西气死 终于就空间释放出来了，之前一直都是满的状态。 再看这个版本数量，这里估计藏了1、2个T的版本数据…… 参考文献参考资料1 ↩参考资料2 ↩","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"NAS","slug":"NAS","permalink":"https://rongyel.github.io/tags/NAS/"},{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"}],"author":"Rongye"},{"title":"群晖NAS 220+迁移923+笔记","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/数码/群晖NAS 220+迁移923+笔记","date":"2024-10-11T12:58:43.211Z","updated":"2024-11-03T06:55:27.291Z","comments":true,"path":"posts/8c870f28.html","permalink":"https://rongyel.github.io/posts/8c870f28.html","excerpt":"NAS已经用了一年了，很明确使用需求了。感觉220+太卡了，而且两盘位用起来很不爽。二手入了几乎全新的923+，快速迁移一下","text":"NAS已经用了一年了，很明确使用需求了。感觉220+太卡了，而且两盘位用起来很不爽。二手入了几乎全新的923+，快速迁移一下 群晖自带的迁移很失败……最后还是靠文件同步的方式软迁移了。 新NAS磁盘准备简单装上了准备好的16g内存条以及16T的机械硬盘。当前就装了一个盘。选择basic，大磁盘以后不搞raid了，多少有点浪费。然后等迁移完成以后，将原来的两个8T再挪过来做RAID1，高级安全需求的数据定期备份到这里面。空置一个槽，等以后有闲钱了再补个16T的。 Migration Assistant迁移【失败】通过Migration Assistant^1套件完成，只需要在迁移目的地，也就是新NAS上安装即可。 迁移过程种提示，新设备的共享文件夹必须删掉 通过控制面板删除的时候提示，先关掉这个home目录功能什么鬼翻译部分套件不兼容，没关系，EMBY好像不兼容靠，21个小时。今天可以结束了 唉，明天见。 彻底失败。无法迁移，原因不明。该方法放弃 drive同步的方式，来迁移数据……【成功】这个同步比较稳定，在原有NAS完成正常工作的情况下，同步内容。虽然比较慢，最后应该是花了3~4天的时间，全部数据迁移了过来，约6T的内容。 铠侠SSD做存储池买了一条2T的铠侠SSD，群晖官方那个天然支持做存储盘的SSD真的是天价……虽然官方说是不支持的，但其实很好处理。 参考网上的攻略，一步步走非常顺利的就完成了设置^2 重启后，这里就检测到可用池了。之前只能作为缓存的选项 选择重组回复 重新安装Autogabumi在root下执行一个命令就可以完成安装^3 不过这个教程写的不明不白的，其实需要先建config和data文件夹这样才是正常的已经启动好了安装非常顺利，直接就成功了。 矿神套件安装套件中心-设置，添加源即可矿神套件链接 https://imnks.com/1780.html qBitorrent安装这次试试最新的5.0版本。矿神套件可以安装界面好看了一点，像这个时代的界面最关键，把代理设置好。关联autobangumi后，随便收集了一个rss试试，很成功，直接就能用了。爽！！！ 剩余待办NAS照片的备份。然后图书管理。其他的都不需要了。 参考文献如何通过 Migration Assistant（DSM 6.0 及以上版本）在 Synology NAS 之间迁移数据？ - Synology 知识中心 ↩活用群晖nvme硬盘——将nvme硬盘设置成存储池_固态硬盘_什么值得买 ↩快速开始 | AutoBangumi ↩","categories":[{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/categories/%E6%95%B0%E7%A0%81/"}],"tags":[{"name":"NAS","slug":"NAS","permalink":"https://rongyel.github.io/tags/NAS/"},{"name":"群晖","slug":"群晖","permalink":"https://rongyel.github.io/tags/%E7%BE%A4%E6%99%96/"},{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"}],"author":"Rongye"},{"title":"广州长隆野生动物园一日动物看爽","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/摄影/广州长隆野生动物园一日动物看爽","date":"2024-09-07T13:32:09.008Z","updated":"2024-09-07T13:39:02.575Z","comments":true,"path":"posts/357c88c8.html","permalink":"https://rongyel.github.io/posts/357c88c8.html","excerpt":"赌了一手台风过境后，雨过天晴。在长隆野生动物园看了不少动物，很开心","text":"赌了一手台风过境后，雨过天晴。在长隆野生动物园看了不少动物，很开心 动物是真可爱啊，可惜我没看到龟类动物，居然完全没有我还带错镜头了，带了个广角定焦出门，我人傻了。最后靠着XT5的机内裁切勉强完成了拍摄……明年我一定要买个长焦！！ 动物靓照 参考文献参考资料1 ↩参考资料2 ↩","categories":[{"name":"摄影","slug":"摄影","permalink":"https://rongyel.github.io/categories/%E6%91%84%E5%BD%B1/"}],"tags":[],"author":"Rongye"},{"title":"黑神话悟空，走出了坚实的一步","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/游戏/黑神话悟空，走出了坚实的一步","date":"2024-09-01T16:16:27.000Z","updated":"2024-11-03T07:06:19.174Z","comments":true,"path":"posts/9620b963.html","permalink":"https://rongyel.github.io/posts/9620b963.html","excerpt":"没有好高骛远，坚实的，做出了一部充满中国文化色彩的游戏大作。做好了，做成了，开心。","text":"没有好高骛远，坚实的，做出了一部充满中国文化色彩的游戏大作。做好了，做成了，开心。 最近根本没有学习、没有写代码。有空余时间都拿来直面天命了。玩着真的开心：游戏好玩让我开心，中国游戏的这次发展也让我开心。。 保持质疑，保持观望我属于比较，质疑的一派了。自从那年预告片放出后，虽然我觉得很棒，但是还是比较担忧的。不如说直到游戏正式发售以前，我都还在保持观望，没有购买。没有那么关注，没有那么兴奋，没有预购，到了发售那天，看到这个游戏如此的精彩，看视频都觉得好玩，我才在PS5购买了游戏，并忍到周末开始直面天命！ 打击感略轻，但依旧爽快猴子的棍子打击感确实是有一点点弱。重攻击倒是感觉很沉，不过硬直很大，非常态按键。轻攻击前四下，造成的硬直真不大。不是特别弱的小怪，都没啥反应的，所以给人带来一种轻飘飘的感觉。不过这个游戏的战斗爽点是从别的地方带来的。一是非常丰富的战斗资源。黑猴子里除了基本的棍法以外，还有几大资源。定身法这样的法术、铜头铁臂这样的身法、广智救我这样的变身、以及大头磕地这样的妖术、定风珠这类法宝。说实话有点丰富了，有时候都忘了用。 我个人玩的流派是，战反流。最喜欢用的就是劈棍切手技识破流+铜头铁臂反伤流，加定身法辅助。这种玩法非常讲究和boss的交互，所以对boss越熟悉战斗越爽。所以我对于boss战的爽点不是说一次通之类的，而是再多次挑战以后，能够以熟练的防反一招一式带来胜利。 剧情有趣，引入入胜刚刚打完第三回，黄眉老怪。这一章进一步加深了黑神话的“黑” 这一章里的很多神影图里，讲述的都是些令人难受的事。尤其是出现了黄眉的故事。在这些故事里，黄眉就是讲究一个随心所欲流无法无天流。人、妖，无论犯了什么事，都是可以解释，都可以谅解。遵从自己的本心，本性，即可极乐。所以，人可以杀人、杀生、犯戒，妖更是什么都能做。黄眉门下的小雷音寺，完全就是妖魔窝点，聚了一群不修佛，不修性的混蛋玩意。 比如，第二回末尾出现的小动画。书生一念救狐妖，又因南柯一梦而杀之。这个故事其实落实在了第三回，在一具披着狐狸皮的尸体处，狐妖魂会拜托你，去小雷音寺的偏殿找不空，他就是当年那个书生。等你变成狐狸的模样找到不空，他讲的可真不是人话。什么“我日日夜夜为你诵经，你居然还要杀我”，明明自己已经人模鬼样了，还敢问“你究竟是人还是妖？”。从画面上看，完全就是在说自己。 除了不空，还有不净、不白、不能，这明显对标友商啊哈哈哈。友商就是金蝉子，即唐僧。黄眉是他的师兄。从西游正剧里来看，黄眉想要代替他去取经，所以这里四个徒弟名字都是对标悟空啥的，简直逗。虽然这四个徒弟都是些人渣败类，但黄眉反而喜欢。 这游戏在这些设定上真的是下了功夫的，很棒，很赞。 在第三回结束时的动画，也是很黑很黑。讲的就是黄眉下凡装妖仙？最后被人的贪念所杀，肉体骨头均化为了财宝被人类分之。画面极度黑暗，人性极度丑恶，嘴脸极度不堪，看的人毛骨悚然。最后是金蝉子下来找他，只剩一具残躯。黄眉对金蝉子说，这一回，我又赢了。金蝉子回复却很有趣：惑乱人心，倒果为因。 所以黄眉老怪总是说些貌似很有道理的话，但一定要辨证着理解，细思后，就是屁话。他也有自己的主题曲，叫做《屁》，这就很有意思了。 中华文化，完美展现【待补充】 场景风格令人震撼【待补充】 结语我真不客气的说，今年年度最佳就是黑神话悟空。文化加成真的不是盖的，西游记的另类解读，加上出色而丰富的战斗系统，真的让我游戏体验远超其他。画面做的好，美术做的好，战斗有特色，剧情有深度。凭什么它不能是年度最佳？当然，不能急。黑神话悟空做好的国产大作的第一步，就好像流浪地球做好了国产电影大片的第一步一样。更重要的是看他下一步怎么走。、 很期待 参考文献参考资料1 ↩参考资料2 ↩","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"游戏","slug":"游戏","permalink":"https://rongyel.github.io/tags/%E6%B8%B8%E6%88%8F/"}],"author":"Rongye"},{"title":"HISOC开发进度","slug":"IC攻城狮的摸鱼小屋/HISOC/HISOC开发进度","date":"2024-08-18T14:46:30.751Z","updated":"2024-08-20T15:43:20.090Z","comments":true,"path":"posts/55e29e16.html","permalink":"https://rongyel.github.io/posts/55e29e16.html","excerpt":"SOC那么多模块，感觉网上根本找不到多少RTL代码，都是些基本概念的介绍，没啥意思。不如自己写着玩。","text":"SOC那么多模块，感觉网上根本找不到多少RTL代码，都是些基本概念的介绍，没啥意思。不如自己写着玩。 每天进展一点点 。写写代码，也是一种游戏。 CPU-RVSEED 单周期设计 全指令测试PASS ✅2024-07-20 五级流水线设计 IFU ✅2024-08-11 IDU ✅2024-08-13 EXU ✅2024-08-18 MEM 寄存器写回数据冒险：Forwarding WB INST_MEM总线访问 AXI RD接口访问 ✅2024-07-26 Buff吸收延迟 ✅2024-08-01 DATA_MEM总线访问 AXI RD接口访问 AXI WR接口访问 总线-AXI AXI MST、SLV RD接口 基本控制逻辑 ✅2024-07-24 多OST ✅2024-08-02 同ID保序 AXI MST、SLV WR接口 多OST 同ID保序 AXI INTERCONNECT 总线-APB总线-AHB总线-CHI credit机制 基础模块-CBB （Common Building Blocks） RW寄存器 基本功能 ✅2024-08-04 读写同拍处理 ✅2024-08-18 同步FIFO 基本功能 ✅2024-08-02 异步FIFO 基本功能 开发环境-EDA VERDI+VCS ✅2024-07-22 EXCEL表单管理数据结构，脚本生成宏定义文件 ✅2024-07-25 EXCEL表单管理寄存器堆，脚本生成regs RTL ✅2024-08-09","categories":[{"name":"HISOC","slug":"HISOC","permalink":"https://rongyel.github.io/categories/HISOC/"}],"tags":[{"name":"数字IC","slug":"数字IC","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E5%AD%97IC/"},{"name":"HISOC","slug":"HISOC","permalink":"https://rongyel.github.io/tags/HISOC/"}],"author":"Rongye"},{"title":"鱼龟混养实验日记","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/宠物/鱼龟混养实验日记","date":"2024-08-16T16:32:37.540Z","updated":"2024-11-03T06:58:30.567Z","comments":true,"path":"posts/d3739db2.html","permalink":"https://rongyel.github.io/posts/d3739db2.html","excerpt":"作为一个没有养过鱼的人，在养了鳄龟以后还想混养鱼……做了很多尝试","text":"作为一个没有养过鱼的人，在养了鳄龟以后还想混养鱼……做了很多尝试 目前看来，混养是有一定效果的。龟龟与鱼的相处存在一种无法解释的平衡。有些鱼，它不吃，或者试过一次以后不会吃。有些鱼必吃。 20240817今天又进了一波鱼。一只很大的招财猫，8cm左右。然后12只老鼠鱼，什么颜色都有。 龟龟不知道为什么，对白色的老鼠鱼特别感兴趣，每次看到反应都很大，很想吃。然后也给他吃上了…………小鱼真的不行，小鱼对于龟龟来讲就是能吃的玩意，跟泥鳅是一回事。老鼠鱼一晚上好像就要被吃完了…………唉。 幸运的是，不知道为什么这次招财猫可以逃过一劫。招财猫被咬了一次，我立马抓住龟龟让它放开了嘴。招财猫也没有受伤的样子。这之后，龟龟对这只招财猫就视而不见了？很神奇，是终于觉得这个不能吃了吗？ 20240901混养基本是算失败了一半？首先，上述的招财猫，在存活了两个星期以后，被吃掉了。。。。。是整个被吃掉了。没有看到过程，某天下班回家就只剩一点残骸了。然后呢，这里我还尝试放了很多鱼，比如雷龙鱼。雷龙嘛，有点像泥鳅，龟龟一直都是当食物对待的，有捕食的倾向。但是雷龙自己很灵活，动作很快，所以经常能够跑掉。但我也看到过一次完整的，一整条8cm左右的雷龙，被龟龟吞下去了。然后有些雷龙应该也是被抓到吃掉了，不过我没看到，只能从数量上判断应该是无了唉。然后雷龙这鱼自己有点问题，非常能跳缸，而我又因为放了棵水杨梅，顶起来，不能放顶盖。所以有三条雷龙都是自己跳死了，也是下班回来捡尸，很无奈。不过现在还剩下一条情绪稳定的大雷龙，红帝王，它很聪明，躲得很好，没有被龟龟咬过。现在状态也很不错，从不跳缸。希望它能长期活下去。然后还有一条没那么稳定的小雷龙，认不出是什么品种了…… 20240908从现在的情况来看，混养已经处于稳定阶段了。龟龟依旧是霸主，一动一静影响着鱼儿。鱼呢最近都没有死的，黄曼龙4条，蓝曼龙2条，招财丽丽2条，黄金马甲球1条，清道夫1条。小雷龙2条，大雷龙1条。说实话，这雷龙是哪个品类我都认不出来了……因为现在都不发色，都是褐色的，感觉是因为和龟龟呆一起产生的保护色？跟龟的颜色一样了 20241103 实验宣告结束又过去了两个月，现在的缸已经非常稳定了，我也不准备再做修改。当前剩余的鱼有：黄曼龙2条，蓝曼龙2条，招财丽丽1条。嗯。就这样。可能补几条黄金马甲球吧。 雷龙我彻底放弃了，9成的是因为跳缸死的，没意思。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"宠物","slug":"宠物","permalink":"https://rongyel.github.io/tags/%E5%AE%A0%E7%89%A9/"}],"author":"Rongye"},{"title":"好看可爱又能吃的老八，谁不喜欢呢？——《败犬女主太多了！》","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/动漫/好看可爱又能吃的老八，谁不喜欢呢？——《败犬女主太多了！》","date":"2024-08-12T15:40:08.685Z","updated":"2024-09-17T03:14:16.500Z","comments":true,"path":"posts/b4a0abff.html","permalink":"https://rongyel.github.io/posts/b4a0abff.html","excerpt":"老八真可爱","text":"老八真可爱 2024年的夏季番，多部优秀的校园番同时出现。 [[不时用俄语小声说真心话的邻桌艾莉同学]][[败犬女主太多了！]] 这两部番同时登上舞台，均表现出优越的制作水平和妹子的刻画能力，成为了我每周必看新番。 而其中，[[败犬女主太多了！]]这番里的女主（我认为她就是），八奈见杏菜，人称老八，她实在是太青春太可爱了，值得我专门写篇文来记录她的可爱！ 伟大的A-1 Pictures献上了逆天的制作力想必有不少人跟我一样，看第一集的时候被这段制作给震撼到了。盛夏的蓝天白云，可爱的少女站在天台护栏边 她湛蓝的长发随风飘动，不知是在看向何人 抬首间，看到她宝石般的眼眸 她意识到你的到来，回首，挥挥手 几句交谈，不经意间悲伤涌上心头，已是泪满流 无法抑制的情感，无法抑制的泪。一段恋情的结束，也可能是另一端恋情的开端 蓝天，白云，盛夏，天台上的男女高中生。 活力的笑容是治愈人心得良药欠男主钱然后给他做饭，这种契约简直就是过一辈子的 俏皮可爱就是不太聪明 世界上只有青梅竹马和狐狸精，至理名言出现 为了安慰好伙伴，不惜搭上自己的胃，海吃湖喝，然后继续欠男主钱 看你这得意的样子，真是太让人喜欢了 能吃还有好身材的谁不爱呢？这腿 这战袍 这笑容 这小肚腩 这一拳，定终身 不失小心机的动作撩人心弦爱了爱了，上大分 这笑容说真的，守护一辈子 陪伴是最长情的告白本番最长的陪伴，毫无疑问就是老八啊希望最后能修成正果 参考文献参考资料1 ↩参考资料2 ↩","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"动漫","slug":"动漫","permalink":"https://rongyel.github.io/tags/%E5%8A%A8%E6%BC%AB/"}],"author":"Rongye"},{"title":"npm：packages are looking for funding解决","slug":"IC攻城狮的摸鱼小屋/解决方案/npm：packages are looking for funding解决","date":"2024-08-10T12:42:23.147Z","updated":"2024-08-11T07:07:06.419Z","comments":true,"path":"posts/9ab5378b.html","permalink":"https://rongyel.github.io/posts/9ab5378b.html","excerpt":"通过ncu快速更新","text":"通过ncu快速更新 安装并更新npm install -g npm-check-updates首先安装ncu，即npm-check-updates[2] 使用命令ncu检查当前的npm版本 使用命令ncu -u进行更新 再执行npm install完成安装 参考文献NodeJS 从安装到卸载再到重装 - hccodec - 博客园 ↩npm-check-updates - npm ↩","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"HEXO","slug":"HEXO","permalink":"https://rongyel.github.io/tags/HEXO/"}],"author":"Rongye"},{"title":"python 脚本使用openpyxl报错","slug":"IC攻城狮的摸鱼小屋/解决方案/python 脚本使用openpyxl报错","date":"2024-07-28T08:43:44.900Z","updated":"2024-08-05T16:15:31.582Z","comments":true,"path":"posts/3c47b44b.html","link":"","permalink":"https://rongyel.github.io/posts/3c47b44b.html","excerpt":"使用python处理excel文件报错","text":"使用python处理excel文件报错 最近写HISOC项目的时候，准备用python简单的根据excel表格生成宏定义代码，来管理数据结构。但是遇到一点问题。 已经安装openpyxl还报错 在已经安装pip openpyxl的情况下，脚本import的时候依旧会报错 原因在于我执行脚本的时候使用的是python3，所以安装的时候要用pip3命令来安装openpyxl才对。","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"数字IC","slug":"数字IC","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E5%AD%97IC/"},{"name":"Python","slug":"Python","permalink":"https://rongyel.github.io/tags/Python/"}],"author":"Rongye"},{"title":"怎么在filelist文件中添加include文件路径","slug":"IC攻城狮的摸鱼小屋/技术笔记/Verilog/怎么在filelist文件中添加include文件路径","date":"2024-07-21T15:02:03.889Z","updated":"2024-08-05T16:36:09.421Z","comments":true,"path":"posts/ef002491.html","link":"","permalink":"https://rongyel.github.io/posts/ef002491.html","excerpt":"明明filelist里有被include文件，为什么编译的时候吃不上？","text":"明明filelist里有被include文件，为什么编译的时候吃不上？ 注意一下verilog filelist文件的添加语法 参考文献 [vcs]file list 寫法_vcs filelist怎么写-CSDN博客 添加的时候不能空格！！ 使用的声明语句为+incdir+注意前后有两个+号，且后面跟的路径不能有空格。 结语 简单的语法，大家不要搞错哦","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Verilog","slug":"Verilog","permalink":"https://rongyel.github.io/tags/Verilog/"}],"author":"Rongye"},{"title":"VCS+VERDI使用手册","slug":"IC攻城狮的摸鱼小屋/技术笔记/EDA/VCS+VERDI使用手册","date":"2024-07-20T08:57:04.293Z","updated":"2024-08-12T16:15:05.501Z","comments":true,"path":"posts/3c47b44b.html","permalink":"https://rongyel.github.io/posts/3c47b44b.html","excerpt":"简单记录使用过程中遇到的问题及解决方案","text":"简单记录使用过程中遇到的问题及解决方案 基本编译和仿真工具，VCS+VERDI 问题汇总 编译时提示缺少系统函数$fsdbDumpvars[1] 需要增加下面的Verdi编译文件： &nbsp;-P ${VERDI_HOME}/share/PLI/VCS/LINUX64/novas.tab ${VERDI_HOME}/share/PLI/VCS/LINUX64/pli.a 参考文献 关于fsdbDumpvarsfsdbDumpfile Undefined的问题解决办法_undefined system task call to ‘$fsdbdumpvars’.-CSDN博客 1 ↩","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://rongyel.github.io/tags/%E5%B7%A5%E5%85%B7/"}],"author":"Rongye"},{"title":"虚拟内存的意义","slug":"IC攻城狮的摸鱼小屋/技术笔记/ARM/虚拟内存的意义","date":"2024-07-14T11:38:11.860Z","updated":"2024-07-14T11:46:28.790Z","comments":true,"path":"posts/ada5d828.html","link":"","permalink":"https://rongyel.github.io/posts/ada5d828.html","excerpt":"为什么要建立“虚拟“内存来欺骗软件？","text":"为什么要建立“虚拟“内存来欺骗软件？ 有时候在想，现代存储空间越来越大，是不是全部都用物理内存就行了？ 基本概念 虚拟地址（VA，Virtual Address）：处理器上运行的操作系统、应用程序所能看到的地址空间。虚拟地址并不真实存在于计算机中。 物理地址（PA，Physical Address）：实际存储地址空间，如 DDR、Flash、SRAM 等实际存储数据的地方。 在处理器运行的过程中，需要将虚拟地址空间与物理地址空间进行转换，并对内存访问进行保护，即内存管理的主要工作。 虚拟地址通过映射转换为物理地址。虚拟地址和物理地址之间的映射存储在转换表（有时称为页表）。 “虚拟”的主要意义 地址连续性程序都可以在连续的虚拟内存空间中运行，而实际的物理内存空间可以是不连续的。 地址扩展性有了虚拟内存，程序在概念上可以使用比物理上可用的更多的内存。例如，即使物理内存只有4GB，虚拟地址宽度也可以超过32位。可以使用整个硬盘扩展存储空间。 安全隔离由于内存隔离，虚拟内存还增加了安全性。在地址转换期间可访问性被检查。如果程序试图写入一个仅赋予只读权限的内存地址，则写入访问将被阻止，并发出错误信号。如果程序试图访问不属于它的内存地址，访问也将被阻止。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"内存管理","slug":"内存管理","permalink":"https://rongyel.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"}],"author":"Rongye"},{"title":"架着高达的酸臭恋爱剧，高达SEED FREEDOM","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/动漫/架着高达的酸臭恋爱剧，高达SEED FREEDOM","date":"2024-07-13T14:28:11.142Z","updated":"2024-08-18T16:07:52.240Z","comments":true,"path":"posts/dfc69232.html","permalink":"https://rongyel.github.io/posts/dfc69232.html","excerpt":"被基拉和拉克丝的爱给……………………无语到了。","text":"被基拉和拉克丝的爱给……………………无语到了。 这电影吧，我苦笑着看完的。肯定是要算作不好看的，但是呢，有种，emm，看小品的感觉。如果这样想的话还是能看的…… 嘴上说着什么世界、未来，其实一个个都是恋爱脑。 一群反派，上来都是一副吊样，看不起所有人，自己才是救世主。其实就是一群高级人造人，没有自己的脑子，听那个妈妈的话。 最开始就冒出个人来，要跟拉克丝神交……让我想起了高达00，但说实话剧情上高达00甩这部剧一万条街。 前期基拉就跟傻子一样，反派就在那开挂，又是技术更好的机体，又是读心又是操控情绪的……超能力高达也不是这样玩的。催眠基拉去突破过境，然后控制对面的核弹发射，最后再一幅受害者的样子发射镇魂曲天基武器。好像很厉害的计谋，实际完全经不住推敲……剧情反正就这么开展下去了，拉克丝被带走了。 经过阿斯兰的给基拉的大脑修正拳，剧情顺利转变成了，拯救拉克丝…………他们逼逼的别的为了人类世界的未来啥的我权当放屁了，真的没什么含量。就当是拯救拉克丝来看，反而能看的下去。 我的武器，就是拉克丝的爱啊！这次高达剧场版的战斗简直太逗了，说实话逗得还挺有意思的。 对面敌人不是会读心吗？那飞鸟爆种以后脑袋空空，对面就读不到东西了哈哈哈。对面不是会催眠，激发心中的黑暗的？飞鸟心中更黑暗所以无效……说实话这台词我根本无法理解…… 阿斯兰更是人才，对面读心，他就在心里想跟奥黛丽的瑟瑟情节，把对面小处男给看害羞了。。。然后让老婆远程操控，这样就能赢了…………已经有点无语了。 最后是基拉，对面脑瘫黄毛已经嫉妒的不行了，因为拉克丝始终拒绝他，说什么我爱的只有基拉，巴拉巴拉的……开战的时候就嘲讽基拉，没想到给基拉来了一句： 还有最后那个拉克丝和主角机体对接那块儿，拉克斯站机体旁边那一下，我真没绷住 所有反派，包括拉克丝，这种调停者（突然冒出来的设定），的妈妈，就是这个老萝莉。嘴脸丑陋的让人嫌弃，没有任何魅力。塑造这样的角色出来感觉有点恶心到观众了。 “不是因为需要才爱着，而是因为爱着对方才需要他” 这可能是全局最好的台词了，但这不就恰恰说明了这特么就是个爱情喜剧吗？？？？政治、高达什么的删掉我觉得都能拍……丑死了。 多少是有点搞笑了这电影，不过嘛，图一乐，看个基拉和拉克丝的happy ending，也算有一点点价值。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"动漫","slug":"动漫","permalink":"https://rongyel.github.io/tags/%E5%8A%A8%E6%BC%AB/"},{"name":"电影","slug":"电影","permalink":"https://rongyel.github.io/tags/%E7%94%B5%E5%BD%B1/"},{"name":"高达","slug":"高达","permalink":"https://rongyel.github.io/tags/%E9%AB%98%E8%BE%BE/"}],"author":"Rongye"},{"title":"如何自动切换Obsidian Vim模式的中英文模式","slug":"IC攻城狮的摸鱼小屋/解决方案/如何自动切换Obsidian Vim模式的中英文模式","date":"2024-07-07T07:09:16.420Z","updated":"2024-07-14T11:24:14.853Z","comments":true,"path":"posts/6042261.html","link":"","permalink":"https://rongyel.github.io/posts/6042261.html","excerpt":"Obsidian的Vim模式使用，在中文输入下的体验有一个非常割裂的地方。","text":"[!NOTE]Obsidian的Vim模式使用，在中文输入下的体验有一个非常割裂的地方。 当我在vim insert模式下编辑文本以后，回到normal模式下时，没有切换为英文输入。此时如果键入命令的话，会不断的弹出拼音输入窗口，而且命令也会误触发。。本文简单的实现了，在按下ESC回到normal模式的时候，切换为英文输入。 参考文献 Ahk之自动切换中英文输入法思路与运用说明 - AutoHotkey CommunityPKMer_Obsidian 插件：Vim Input Method Switch AutoHotKey不完美实现 在查阅资料的时候其实就发现，都提到了可以使用ahk工具来实现这样的效果。甚至还有一个简单的插件，貌似可以实现切换的效果，不过这个插件我实际使用无效。搞不明白。相反，我直接去研究AHK，很简单的。首先官网下载：AutoHotKey下载后安装，然后编写一个极简脚本如下： 1234567#IfWinActive ahk_exe Obsidian.exeEsc:: sendinput,{Esc} sendinput,{Shift}return#If 可以看到，这个ahk脚本中首先限定了在Obsidian.exe程序下使用。然后，热键”Esc”触发ahk，触发两个动作 输入Esc 输入Shift 实现的效果就是，在“中文输入”下，按下Esc的时候会自动再按下Shift，切换为英文模式。但是，没有其他任何限定条件，实际上无论你原本是什么输入模式，按下Esc都会切换模式。。。。 结语 实际效果还是不太好，只能比如有时候insert模式下输入的就是英文，然后按ESC后回到normal模式，反而切成了中文。。。。最后放弃了没有在obsidian使用vim模式。","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"Obsidian","slug":"Obsidian","permalink":"https://rongyel.github.io/tags/Obsidian/"},{"name":"GVim","slug":"GVim","permalink":"https://rongyel.github.io/tags/GVim/"}],"author":"Rongye"},{"title":"如何去掉快捷方式图标左下角的箭头","slug":"IC攻城狮的摸鱼小屋/解决方案/如何去掉快捷方式图标左下角的箭头","date":"2024-07-06T15:53:43.463Z","updated":"2024-07-07T07:33:43.519Z","comments":true,"path":"posts/bf695b9.html","link":"","permalink":"https://rongyel.github.io/posts/bf695b9.html","excerpt":"应用程序在桌面的快捷方式左下角总会有一个小箭头影响美观，很烦","text":"[!NOTE] 应用程序在桌面的快捷方式左下角总会有一个小箭头影响美观，很烦 处理步骤​ 1.同时按下win键 和 R键，此时会弹出一个运行窗口 ​ 2.然后在文本框里面输入regedit，单击确定，此时会打开注册表窗口 3.找到路径HKEY_CLASSES_ROOTlnkfile【左边的项按首字母顺序排序，你可以根据这个去找容易找到】 ​ 4.然后删除右侧IsShortCut项目 5.注销或重新启动计算机，你会发现左下角的小箭头就没了 ​ 经验内容仅供参考，如果您需解决具体问题(尤其法律、医学等领域)，建议您详细咨询相关领域专业人士。","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"WINDOWS","slug":"WINDOWS","permalink":"https://rongyel.github.io/tags/WINDOWS/"}],"author":"Rongye"},{"title":"瞎搞导致无法用IP访问群晖NAS界面的处理方案","slug":"IC攻城狮的摸鱼小屋/解决方案/瞎搞导致无法用IP访问NAS界面的处理方案","date":"2024-07-06T15:53:43.288Z","updated":"2024-08-05T16:37:07.502Z","comments":true,"path":"posts/41143f4e.html","link":"","permalink":"https://rongyel.github.io/posts/41143f4e.html","excerpt":"瞎搞导致无法用IP访问群晖NAS界面的处理方案","text":"[!NOTE] 瞎搞导致无法自己用IP访问NAS界面的基本处理方案 简单来讲就是直接复位，重新分配IP 参考文献 如何重置我的 Synology NAS？(適用於 DSM 6.2.4 或以上版本) - Synology 知識中心 处理流程 使用这个工具，找到NAS后直接双击重新进行网络设置联机状态会是失败。 需要复位网络 模式1的软复位就可以啦，然后重新用assistant搜索，再连接就完全没问题了","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"NAS","slug":"NAS","permalink":"https://rongyel.github.io/tags/NAS/"},{"name":"群晖","slug":"群晖","permalink":"https://rongyel.github.io/tags/%E7%BE%A4%E6%99%96/"}],"author":"Rongye"},{"title":"龟龟第一次越狱成功","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/宠物/龟龟第一次越狱成功","date":"2024-07-06T15:53:42.342Z","updated":"2024-08-11T07:47:53.353Z","comments":true,"path":"posts/30a8c611.html","permalink":"https://rongyel.github.io/posts/30a8c611.html","excerpt":"龟娃子越闹说明身体越好，是好事","text":"龟娃子越闹说明身体越好，是好事 我真的服了今天给他换了30缸，换了过滤。它又很活跃，拼命游拼命爬。本来看它都失败了两次，安静下来了。没想到，突然发现厕所里有个黑黑的东西，仔细一看是鳄鳄。他居然成功了，太佩服它了","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"宠物","slug":"宠物","permalink":"https://rongyel.github.io/tags/%E5%AE%A0%E7%89%A9/"}],"author":"Rongye"},{"title":"龟龟到我家","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/宠物/龟龟到我家","date":"2024-07-06T15:53:42.307Z","updated":"2024-07-14T03:53:45.836Z","comments":true,"path":"posts/411eadfe.html","link":"","permalink":"https://rongyel.github.io/posts/411eadfe.html","excerpt":"这一天，一只龟龟送到了我家。","text":"这一天，一只龟龟送到了我家。 小鳄龟，买这个品种就是看重它的皮实和凶悍。 看着是真凶，壳上头上都是带着刺的。 第一天，至少我确认它是活着的。我本来还很担心的，因为深圳突然降温了。第二天更冷了，我下班赶回家，看到它还活着，缩成一坨，真不错。把房间的暖风空调打开，温度稍微暖和一点，它就会动了。我看它还是有点精神的，喂了几粒龟食。好像都吃掉了。 给它买了加热棒，很有效果，感觉一下就变得有活力了。现在看到我已经有互动了，只要盯着它看，它也会盯着你看。如果你把手隔着玻璃伸在他面前……它就一定会咬过去，我去，猛撞一下玻璃真的性情凶悍","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"宠物","slug":"宠物","permalink":"https://rongyel.github.io/tags/%E5%AE%A0%E7%89%A9/"}],"author":"Rongye"},{"title":"猫狗日常系列，完成一张图","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/手绘/猫狗日常系列，完成一张图","date":"2024-07-06T15:53:42.280Z","updated":"2024-07-14T03:19:50.305Z","comments":true,"path":"posts/2bb92458.html","link":"","permalink":"https://rongyel.github.io/posts/2bb92458.html","excerpt":"构造角色是最难的","text":"构造角色是最难的 想把自己和白白的神韵体现成简笔画出来，真的很难。 只能每天熬夜偷偷画……太不容易了，不过有一点意思了～感觉这张还是表达了那种神韵哈哈哈‘ 稍微加点底色，更暖了一点","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"手绘","slug":"手绘","permalink":"https://rongyel.github.io/tags/%E6%89%8B%E7%BB%98/"}],"author":"Rongye"},{"title":"华为智能眼镜2佩戴初体验","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/数码/华为智能眼镜2佩戴初体验","date":"2024-07-06T15:53:42.242Z","updated":"2024-07-13T17:10:04.719Z","comments":true,"path":"posts/7528f006.html","link":"","permalink":"https://rongyel.github.io/posts/7528f006.html","excerpt":"戴了一天上班，体验不错","text":"戴了一天上班，体验不错 佩戴体验镜片度数没搞错，观感和以前一样 有一点点夹头，右边头戴久了还是有一点不适，可能戴多几天眼镜就撑开了，问题不大 重量我感觉一下就适应了，不比我原本的重多少。 工位环境下，音量开最小我就能清楚听歌了，很不错。这个别人是完全听不到的嘿嘿。 不用频繁摘耳机了，当开会的时候带那个头戴式的耳机，可以同时戴着眼镜哈哈😄边开会边听歌","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"},{"name":"华为","slug":"华为","permalink":"https://rongyel.github.io/tags/%E5%8D%8E%E4%B8%BA/"}],"author":"Rongye"},{"title":"XF35f1.4初战告捷","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/摄影/XF35f1.4初战告捷","date":"2024-07-06T15:53:42.146Z","updated":"2024-07-13T17:10:04.717Z","comments":true,"path":"posts/7fb0a816.html","link":"","permalink":"https://rongyel.github.io/posts/7fb0a816.html","excerpt":"大光圈带来的虚化还是很明显的，在环境复杂的时候可以聚焦人物，拍人像更突出，也很好看。","text":"大光圈带来的虚化还是很明显的，在环境复杂的时候可以聚焦人物，拍人像更突出，也很好看。 今天上午专门花了100打车来回去公司拿相机……还好没有浪费，新的镜头很好的展现了它的实力。 在我长期调研后，选择了XF35f1.4，在双十一入手。最重要的原因，还是它轻便。 实力强劲，今天去海上世界给老婆拍了不少照片，妹子表示很满意啊，我个人也很满意。大光圈带来的虚化还是很明显的，在环境复杂的时候可以聚焦人物，拍人像更突出，也很好看。 下面看看样张经典负片 经典正片-再调色经典正片 建筑 食物 海景 嗯！不错，非常不错。虽然今天我的调色也很重要，但镜头的光圈效果让我在暗光下拍的更舒服，也很重要。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://rongyel.github.io/tags/%E6%91%84%E5%BD%B1/"}],"author":"Rongye"},{"title":"AUTOBAGUMI安装记录","slug":"IC攻城狮的摸鱼小屋/解决方案/AUTOBAGUMI安装记录","date":"2024-07-06T15:53:41.986Z","updated":"2024-07-14T03:22:50.431Z","comments":true,"path":"posts/49a50291.html","link":"","permalink":"https://rongyel.github.io/posts/49a50291.html","excerpt":"AutoBangumi：自动追番，解放双手","text":"丢人的群晖docker套件首先要抛弃掉群晖自带的docker……被所有人嫌弃的玩意。 这里推荐使用的是Docker Compose，群晖上也可以使用。 控制面板里开启shh功能 使用putty连接 使用sudo -i进入root 根据教程原来，群晖也能用 Docker Compose！ - 初之音像我这种完全不懂的人，最好就直接复制文中的代码粘贴到ssh中运行。 如下步骤安装 国内网络肯定直接是下不动的，需要用下面这个命令安装（叹气 顺利安装看到如下结果 开始进行安装接着回到AutoBangumi：自动追番，解放双手 - 初之音 注意，本文不是教程，只记录了自己遇到的关键问题。请按照教程顺序进行安装。 按照教程提示，提前建立ab、qb两个文件夹 接着创建&nbsp;docker-compose.yml&nbsp;文件，用vim将教程中的yml内容粘贴进去【！！此处需要注意，两篇教程里给的是不一样的yml内容，这里导致我重装了一次。如果是截图中的，说明就是错误的，以autobangumi安装的教程为准】 设置好权限 这里可以注意一下，教程里将autobangumi和ab两个文件夹混着讲了， 实际上只需要一个文件，且该文件夹下要是放了docker-compose的那个 如果看到像我这样的，说明我的文件夹路径就是没有分配好。 调整成这个结构，再次运行命令 遇到这个错误，就认为给它新建一下文件夹即可。mkdir Downloads顺利运行后，打开群晖套件的docker，也可以看到现在有两个容器正在运行了，真的很方便 Docker Com­pose 常用的命令有这些（&nbsp;xx&nbsp;指&nbsp;container_name）： 前台启动（退出终端即停止）：docker compose up 后台启动：docker compose up -d 拉取容器：docker compose pull 拉取（更新）指定容器：docker compose pull xx 停止&nbsp;up&nbsp;命令所启动的容器，并移除网络：docker compose down 停止指定容器：docker compose stop xx 查看日志：docker compose logs xx 遗憾的是，好像没有顺利运行，最后这个DNS的问题可能需要解决一下。 [Auto_Bangumi](http://192.168.3.79:7892/#/login)登录一下webui默认名就好了，没有连接公网提示需要更新，教程有写更新步骤 看到上图说明顺利更新中好，更新完后重启就顺利进去啦~设置内容，关注一个点是这个下载路径，我需要思考一下 等能顺利使用起来后，我再考虑修改吧。现在这个路径不符合我的需求 最终还是失败了……感觉依旧是网络环境的问题。， 不过qb可以倒是可以读到我的番了，很神奇。 研究如何反代理RSS蜜柑计划RSS无法访问的解决办法 使用这个方法。蜜柑计划RSS无法访问的解决办法首先需要再准备一个域名，去阿里云买一个便宜的就好。阿里云域名如何转入Cloudflare？附cloudflare域名转入详细图文教程 - boke123百科注册60天后才能转移……转移需要5天时间……好吧算了算了。 这个流程是完全正确的，就不重复了，我这里直接再cloudflare注册了个域名，两年12美金也还行。 备份一下这里提到的gits代码 虽然这些都搞完以后，从网站上看是成功反代了，在前面直接加网站+mikan的rss。但是，qb和ab都还是没有正常的访问……唉关掉vpn发现，这个反代的网站好像也是被墙掉的……难受啊关掉以后就打不开了 自己试了一下，明明关了vpn也是可以解析的^https://rongyel.work/https://mikanani.me/RSS/MyBangumi?token=r5tjoC9XgCaukeKqLbBHeA%3d%3d难受啊，为什么qb还是不行、 唉，想要放弃了，阿里买的域名转出要等60天，我估计那个时候mikan都已经修复好了。 靠，我用了原本安装的qb，反代是成功的啊绝了现在就是新安装的mikan和qb不成功，不知道是什么东西设置导致的问题。我怀疑是dns 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158/* * https://github.com/netnr/workers * * 2019-10-12 - 2022-05-05 * netnr * * https://github.com/Rongronggg9/rsstt-img-relay * * 2021-09-13 - 2022-05-29 * modified by Rongronggg9 * * 2023-4-21 * modified by papersman */export default { async fetch(request, _env) { return await handleRequest(request); }}/** * Configurations */const yourDomain = 'your.workers.dev';const config = { // 是否丢弃请求中的 Referer，在目标网站应用防盗链时有用 dropReferer: true,};/** * Respond to the request * @param {Request} request */async function handleRequest(request) { //请求头部、返回对象 let reqHeaders = new Headers(request.headers), outBody, outStatus = 200, outStatusText = 'OK', outCt = null, outHeaders = new Headers({ \"Access-Control-Allow-Origin\": \"*\", \"Access-Control-Allow-Methods\": \"GET, POST, PUT, PATCH, DELETE, OPTIONS\", \"Access-Control-Allow-Headers\": reqHeaders.get('Access-Control-Allow-Headers') || \"Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, Token, x-access-token\" }); try { //取域名第一个斜杠后的所有信息为代理链接 let url = request.url.substr(8); url = decodeURIComponent(url.substr(url.indexOf('/') + 1)); //需要忽略的代理 if (request.method == \"OPTIONS\" || url.length &lt; 3 || url.indexOf('.') == -1 || url == \"favicon.ico\" || url == \"robots.txt\") { //输出提示 const invalid = !(request.method == \"OPTIONS\" || url.length === 0) outBody = JSON.stringify({ code: invalid ? 400 : 0, usage: 'https://'+yourDomain+'/https://mikanani.me/...', source: '将 your.workers.dev 换成自己的workers的地址.使用的时候, RSS地址位置填入 '+'https://'+yourDomain+'/https://mikanani.me/RSS/...' }); outCt = \"application/json\"; outStatus = invalid ? 400 : 200; } else { url = fixUrl(url); //构建 fetch 参数 let fp = { method: request.method, headers: {} } // 发起 fetch let fr = (await fetch(url, fp)); outCt = fr.headers.get('content-type'); //保留头部其它信息 const dropHeaders = ['content-length', 'content-type', 'host']; if (config.dropReferer) dropHeaders.push('referer'); let he = reqHeaders.entries(); for (let h of he) { const key = h[0], value = h[1]; if (!dropHeaders.includes(key)) { fp.headers[key] = value; } } if (config.dropReferer &amp;&amp; url.includes('.sinaimg.cn/')) fp.headers['referer'] = 'https://weibo.com/'; // 当访问mikanani.me/RSS的时候，将返回的xml中的mikanani.me替换 if (url.includes('mikanani.me/RSS')) { const response = await fetch(url, fp); const text = await response.text(); outBody = text.replace(/mikanani.me\\/Download\\//g, yourDomain+'/https://mikanani.me/Download/'); outCt = response.headers.get('content-type'); outStatus = response.status; outStatusText = response.statusText; } else if (url.includes('acg.rip/.xml')) { //当访问acg.rip/.xml的时候，将返回的xml中的acg.rip/t/替换 const response = await fetch(url, fp); const text = await response.text(); outBody = text.replace(/acg.rip\\/t\\//g, yourDomain+'/https://acg.rip/t/'); outCt = response.headers.get('content-type'); outStatus = response.status; outStatusText = response.statusText; } else if (url.includes('bangumi.moe/rss')) { //当访问bangumi.moe/rss的时候，将返回的xml中的bangumi.moe/download替换 const response = await fetch(url, fp); const text = await response.text(); outBody = text.replace(/bangumi.moe\\/download\\//g, yourDomain+'/https://bangumi.moe/download/'); outCt = response.headers.get('content-type'); outStatus = response.status; outStatusText = response.statusText; } else { outBody = fr.body; outStatus = fr.status; outStatusText = fr.statusText; }; if ([\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(request.method) &gt;= 0) { const ct = (reqHeaders.get('content-type') || \"\").toLowerCase(); fp.headers['content-type'] = ct if (ct.includes('application/json')) { fp.body = JSON.stringify(await request.json()); } else if (ct.includes('application/text') || ct.includes('text/html')) { fp.body = await request.text(); } else if (ct.includes('form')) { fp.body = await request.formData(); } else { fp.body = await request.blob(); } }; } } catch (err) { outBody = err.stack; outCt = \"text/plain;charset=UTF-8\"; outStatus = 500; outStatusText = \"Internal Server Error\"; } //设置类型 if (outCt &amp;&amp; outCt != \"\") { outHeaders.set(\"content-type\", outCt); } let response = new Response(outBody, { status: outStatus, statusText: outStatusText, headers: outHeaders }) return response;}/** * Fix URL * @param {string} url */function fixUrl(url) { if (url.startsWith('http://') || url.startsWith('https://')) { return url; } else { return 'https://' + url; }} 柳暗花明又一村…………反代理方案失败了，但在我大量搜索下，看到了一个东西……是我想要的，如何在nas，ab，qb内连我的软路由服务shadow…… 这个东西……终于，把这个打开以后，这个地方配置代理， autobangumi的配置代理这样就可以抓取到RSS了，更新了……不过下载好像还存在一些问题。rss抓出来了，但是下载没有速度 用教程里同时下载的docker qb无法正常下载，没有找到解决方案，。我重新安装了套件的qb用一样的配置……现在可以正常下载了……太感动了……折腾了一天。讲autobangumi的下载器端口修改成这个套件版本的。 最后讲docker的qb设置为不启动。且autobangumi重启 还是不行……不知道为什么autobangumi不自动更新rss了……重启以后又可以了2333，太难了。qb自动开启了下载55555555太难了真的太难了","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"NAS","slug":"NAS","permalink":"https://rongyel.github.io/tags/NAS/"},{"name":"动漫","slug":"动漫","permalink":"https://rongyel.github.io/tags/%E5%8A%A8%E6%BC%AB/"}]},{"title":"2023 端午羊毛毡粽子","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/手工/2023 端午羊毛毡粽子","date":"2024-07-06T15:53:41.981Z","updated":"2024-07-13T17:14:01.036Z","comments":true,"path":"posts/7f646230.html","link":"","permalink":"https://rongyel.github.io/posts/7f646230.html","excerpt":"被自己做手工的实力吓到","text":"被自己做手工的实力吓到 作品如图","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"手工","slug":"手工","permalink":"https://rongyel.github.io/tags/%E6%89%8B%E5%B7%A5/"}],"author":"Rongye"},{"title":"心心念念FUJI X-T5","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/摄影/心心念念FUJI X-T5","date":"2024-07-06T15:53:41.503Z","updated":"2024-07-13T17:10:04.723Z","comments":true,"path":"posts/547fc1d9.html","link":"","permalink":"https://rongyel.github.io/posts/547fc1d9.html","excerpt":"本来想着是买xs-20的，但没想到20还没出，X-T5先出了","text":"本来想着是买xs-20的，但没想到20还没出，X-T5先出了 现在有钱咯，可以花得起这个极致消费了…… 咬咬牙，直接买了x-t5 1680套机， 等了小半个月，终于拿到手了！！ ​​ 为了第一时间上手这台相机，甚至不加班直接回家哈哈哈 太好看了富士的相机，黑色，沉稳扎实的手感，真的符合我的美学 v​ 把以前X100F的小红点快门按键装上，一下子灵魂就有了 ​​ 拿着可更换镜头的相机，一下子显得更专业了哈哈哈哈。 ​​ 真的开心！ 今后一定要多多拿X-T5，拍出更多好看的柳依嘿嘿， 这次一步到位，几年内都不会再更换啦。 期待出去旅游发挥它的实力","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://rongyel.github.io/tags/%E6%91%84%E5%BD%B1/"}],"author":"Rongye"},{"title":"幻13上手体验，真帅啊","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/数码/幻13上手体验，真帅啊","date":"2024-07-06T15:53:41.148Z","updated":"2024-07-13T17:10:04.714Z","comments":true,"path":"posts/917f5ddd.html","link":"","permalink":"https://rongyel.github.io/posts/917f5ddd.html","excerpt":"幻13可以说是集结了我所有对笔记本的需求了","text":"幻13可以说是集结了我所有对笔记本的需求了 也是经过长期的摸索得到的答案。 轻便为第一生产力幻13本体只有1.3kg，算是最轻的那种笔记本了。具备一定的性能，之前用战x还是不太行，只有核显无法满足我剪辑视频以及修图的要求，幻13有RX3050ti，基本是够用的了。有触屏，这个东西完全就是一种体验，有的时候，能按屏幕真的很爽。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"}],"author":"Rongye"},{"title":"第一台ITX装机体验","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/数码/第一台ITX装机体验","date":"2024-07-06T15:53:41.081Z","updated":"2024-07-13T15:18:31.572Z","comments":true,"path":"posts/1b94a8e1.html","link":"","permalink":"https://rongyel.github.io/posts/1b94a8e1.html","excerpt":"历尽千辛万苦，滴血认主，我的骨伽qbx总算是勉勉强强地装好啦。","text":"历尽千辛万苦，滴血认主，我的骨伽qbx总算是勉勉强强地装好啦。 纵使我前期做了那么久的准备，一来还是遇到许多问题。 ​ 首先是atx电源根本用不了，魔龙太大了。 还好我提前准备好了sfx电源和转接板，所以问题不大。 然后是风扇，本来我准备装满风扇，结果发现， 不行，机顶的有一个位置跟电源插头冲突，底部两个根本装不了因为微星魔龙rtx2080真的太大了顶住了。 前面的一开始以为装不了，但最后还是成功装好了。 再来是硬盘，可以接四个sata，但只给了两根线，没办法，只好下单等明天装。 最后还是显卡本身，太恐怖了，一开始我都要绝望了。 魔龙根本放不进去，因为会顶住机箱，主板都插不上去。这个时候我都快放弃了，卖显卡的心都有了。但突然又想明白了，是显卡的挡板顶住了，那个东西是可以卸下来的。好家伙，卸下来还是差了点，入口会卡住。但因为我想明白可以拆了，然后立马发现有个装甲可以拆掉，这样就顺利放进去了。主板插这张卡，真的就极限，可谓天衣无缝了。 但由于显卡挡板被我拆了，导致显卡缺少支撑，只有金手指插着，这有点危险。现在我是在下面垫了两块东西，但还是不够报保险，明天我看看能不能解决这个问题吧。 ​ 电脑一次点亮，装系统，现在已经是可以正常使用啦。开了2077试一下，温度稳定在70到80℃的样子，还行吧。不敢开太久，明天测测模拟器和狒狒，但估计没啥压力。 ​ 现在已经三点了，太难了，电脑确实装好了，我才敢睡。 显卡没有报废算我命大，总之第一次装机加装itx还是比较成功的，明天理线收尾吧。 正式宣告成功！ 赛博朋克2077稳定在70-80之间， 硬盘什么的都正常使用。 ​​","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"}],"author":"Rongye"},{"title":"记录一些对工作的理解","slug":"IC攻城狮的摸鱼小屋/方法学论/记录一些对工作的理解","date":"2024-07-06T15:53:35.640Z","updated":"2024-08-10T12:35:37.699Z","comments":true,"path":"posts/a52603f1.html","permalink":"https://rongyel.github.io/posts/a52603f1.html","excerpt":"工作两年了，记录一点点小心得。","text":"工作两年了，记录一点点小心得。 一点小心得1.工作肯定是做不完的，不仅做不完，还会不停突然的冒出来。此时要做的就是排好优先级，然后集中注意力一个个完成即可。 2.就算是老员工，也有很多不懂的东西。所以遇到问题，也需要自己沉下心来研究。只有这样才能获得成长，光靠问只能快速应付交付工作。 3.时间不够的时候，还算是以交付为主要目的。 4.做事情一定要先分析，抓重点。重点做好了，边角料差一点也不会有问题。","categories":[{"name":"方法学论","slug":"方法学论","permalink":"https://rongyel.github.io/categories/%E6%96%B9%E6%B3%95%E5%AD%A6%E8%AE%BA/"}],"tags":[{"name":"方法论","slug":"方法论","permalink":"https://rongyel.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"author":"Rongye"},{"title":"Hexo直接发布Obsidian路径下的文章","slug":"IC攻城狮的摸鱼小屋/解决方案/Hexo如何直接发布Obsidian路径下的文章","date":"2024-07-06T15:53:35.155Z","updated":"2024-07-03T14:18:14.271Z","comments":true,"path":"posts/da16531b.html","link":"","permalink":"https://rongyel.github.io/posts/da16531b.html","excerpt":"Obsidian撰写文章，还要复制到Hexo的_post路径下，才能部署，这个动作太麻烦了。","text":"Obsidian撰写文章，还要复制到Hexo的_post路径下，才能部署，这个动作太麻烦了。 参考文献 Win10 mklink 命令怎么用，mklink 命令使用教程-逍遥峡谷想写就写，灵思无疆：用自动化部署让写作更得心应手 - 少数派 建立软链接即可实现 通过mklink的windows命令，可以将obsidian下的文章路径，链接到hexo的_post下，这样再执行hexo d，就可以直接发布文章了。 1mklink /d /j [链接到的路径] [被链接的路径] 建立连接以后，看着像是快捷方式，但不能用快捷方式的方式来链接。必须用mklink的命令来完成。 进一步的，直接在Obsidian执行Hexo部署命令需要使用到插件shell command。然后将工作路径设置在Hexo仓下，命令只需要hexo g -d即可。 将该命令设置到command列表上，这个需要commander插件来实现。 今后点一下就可以执行命令完成Hexo的部署啦","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"HEXO","slug":"HEXO","permalink":"https://rongyel.github.io/tags/HEXO/"},{"name":"Obsidian","slug":"Obsidian","permalink":"https://rongyel.github.io/tags/Obsidian/"}],"author":"Rongye"},{"title":"Hexo Icarus主题文章栏如何调宽","slug":"IC攻城狮的摸鱼小屋/解决方案/Hexo Icarus主题文章栏如何调宽","date":"2024-07-06T15:53:35.135Z","updated":"2024-07-14T03:24:00.176Z","comments":true,"path":"posts/39ae3fe6.html","link":"","permalink":"https://rongyel.github.io/posts/39ae3fe6.html","excerpt":"Hexo Icarus主题文章栏设置为2栏以后，太窄了，显示内容较少，想提高一下页面利用率。","text":"Hexo Icarus主题文章栏设置为2栏以后，太窄了，显示内容较少，想提高一下页面利用率。 这里需要修改Icarus主题目录下的几个文件。 layout/layout.jsx layout/common/widgets.jsx include/style/responsive.styl 参考文献 Icarus主题美化_icarus插入代码-CSDN博客Icarus主题魔改 - Winky’s Blog Icarus主题的一些常用配置 - zmm’blog icarus个性化配置 - Hongjie’s blog 修改要点 修改这一个地方就可以了 调整前 调整后有明显的效果，但是左侧空的太多了。不对称的感觉。 修改要点2 关键是这里，把这个2 * 给删掉。这样修改以后，2栏模式和3栏模式，都可以对齐了。 再调整后","categories":[{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://rongyel.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"HEXO","slug":"HEXO","permalink":"https://rongyel.github.io/tags/HEXO/"}],"author":"Rongye"},{"title":"我的知识笔记流水思维殿堂","slug":"IC攻城狮的摸鱼小屋/方法学论/我的知识笔记流水思维殿堂","date":"2024-07-06T15:53:35.103Z","updated":"2024-07-07T14:18:50.151Z","comments":true,"path":"posts/56a2756d.html","link":"","permalink":"https://rongyel.github.io/posts/56a2756d.html","excerpt":"Readwise+Obsidian+Hexo，技术与生活的思维殿堂。","text":"关于折腾笔记系统的意义首先是好玩。花费一些时间，去折腾一些软件、技术、工具啥的，对我来说是一种能够感受到乐趣的事情。 就跟玩游戏一样，去研究这些工具，使用的时候把各种插件配置好，去搞一些小手段，最终实现自己的笔记系统。这种乐趣，如果你也能够体会的话，可能就会像我一样经常折腾到半夜一两点=。=嗯，就跟玩游戏一样，真的很有趣。 再来的话，确实是有很多个人诉求吧。以前曾经使用过，语雀、notion啥的来作为自己的知识系统，但很遗憾，这些东西都有一个非常大的问题让我很讨厌。就是数据不在本地。 这个真的非常令人讨厌，比如notion。。国内的网络环境想要直连notion，其实是很麻烦的。但是notion这玩意居然不联网就完全不给使用。有时候网络环境比较差的时候，我自己的内容我都看不到。这让我真的很烦。同时notion这种all in one的东西，虽然最开始折腾的时候会有新鲜感感觉很牛逼很有用。但实际工作和生活过程中我就会发现，其实笔记才是我唯一的诉求。而一本无法随时随地查阅的笔记，对我来说毫无意义，因此notion是第一个被我放弃掉的。 相比起notion，语雀这种国内软件就没有太多连接的问题。但是，他们更恶劣我只能说。非常的，恶劣。他们干了一件事情，那就是极度限制你的离开。你写在上面的文章，笔记，照片。在你想要离开的时候，层层加码。不仅不能正常导出成markdown格式，导出效果还非常的差。图片在语雀自己的图床上，笔记一旦离开了语雀甚至无法显示。我的数据，被绑架了。这就是国内很多笔记软件干的事情。比如语雀、印象笔记、思源笔记等。希望你们好自为之。 明确诉求后的选择经过一些折腾后，我是更加明确自己的诉求，那就是笔记。知识、档案、随手记、文献摘要。只要能满足我这几个需求就可以了。 这些数据一定要是在我的本地，能够轻松备份，多端浏览。markdown这种最适合做笔记的语言格式自然是我的首选，上手难度很低，基本的功能语法会写就可以了。 markdown的笔记工具其实有很多，我重点使用过的就是typora和obsidian。 typora很可惜，被我放弃掉了。因为它更多的只能算作一种markdown的撰写工具，不能作为知识沉淀的空间。因为它太简单了，太纯粹了。纯粹到我无法舒适的去管理我的笔记，它的文件管理页表可以说是，一塌糊涂，毫无层次。而且不支持多页签，即便有各种大佬搞了多页签的效果，但实际体验真的可以说是比较糟糕。 obsidian就有未来一点，毕竟有丰富的插件库。当然我还是使用的比较克制的。对于obsidian，我不会忘记，就是要做一个笔记系统。我并不需要一个all in one的玩意，这个在notion的时候就很清晰了。插件的安装也比较简单，就是稍微美化一下界面、图床上传、dataview支持等等。在不改变markdown的本质的同时，丰富一点点功能就行。文章的结构和数据不能超过markdown本身支持的范畴，文章要能直接同步到博客。大概实现这些就可以了。obisidan 在经过一番整理以后也比较好看，界面简洁内容集中。能够兼顾内容的开发和一些待办的提醒。目前使用起来是比较流程了。 Readwise，信息摄入撰写中 Obsidian，数据沉积闪念胶囊我认为闪念胶囊没有必要有任何格式，随便写入就好。当进行归档的时候，无价值的直接删除，有意义的当场扩充，可以转化为日记，游记，浅见，档案等。 当前笔记分类还是过于繁杂了，今天精简一下。 Hexo，知识呈献撰写中","categories":[{"name":"方法学论","slug":"方法学论","permalink":"https://rongyel.github.io/categories/%E6%96%B9%E6%B3%95%E5%AD%A6%E8%AE%BA/"}],"tags":[{"name":"方法论","slug":"方法论","permalink":"https://rongyel.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"author":"Rongye"},{"title":"如何正确给文章打标签和归类","slug":"IC攻城狮的摸鱼小屋/方法学论/如何正确给文章打标签和归类","date":"2024-07-06T15:53:35.086Z","updated":"2024-07-14T03:20:43.313Z","comments":true,"path":"posts/78320dbb.html","link":"","permalink":"https://rongyel.github.io/posts/78320dbb.html","excerpt":"写文章时的tag和categories到底应该怎么打，没想到成为了困扰我的一大问题，至今推翻重来了好几次。","text":"参考文献 如何给文章打标签更合理 - 书备的博客 | Shubei Blog个人博客的分类划分 系统基本架构的搭建，每次微调，都是灾难 所有Markdown文件我都需要手动修改一遍元数据，这就是一场灾难。当然，学会如何使用脚本完成文本替换就是另外一个效率提升的问题了。 最终方案tags，必须统一普通的笔记和发布的博客。比如，游戏相关的，就有”游戏“这个tag。不要把游戏放到categories上。 结语","categories":[{"name":"方法学论","slug":"方法学论","permalink":"https://rongyel.github.io/categories/%E6%96%B9%E6%B3%95%E5%AD%A6%E8%AE%BA/"}],"tags":[{"name":"方法论","slug":"方法论","permalink":"https://rongyel.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"author":"Rongye"},{"title":"数字IC设计开发Gvim配置","slug":"IC攻城狮的摸鱼小屋/技术笔记/EDA/数字IC设计开发Gvim配置","date":"2024-07-06T15:53:35.059Z","updated":"2024-07-14T03:21:29.378Z","comments":true,"path":"posts/f60848c2.html","link":"","permalink":"https://rongyel.github.io/posts/f60848c2.html","excerpt":"记录自己使用的gvim配置文件，包含基础配置及插件功能配置。支持代码补全、代码片段、语法检查、自动例化等IC攻城狮必备coding功能。","text":"插件傻瓜包安装说明推荐使用git clone获取：GitHub - RongyeL/ryGvim: my gvim config and plugin将ryGvim目录下的.vim文件夹和.vimrc文件，移到用户根目录下，即可使用。 如果不会使用git，也可以直接在GitHub先下载zip，然后再拖到虚拟机中使用。windows也是可以用的，但是配置文件不一样，好像是_vimrc这样的文件，所以需要做一些调整。 仅支持Gvim 8.0以上版本，基于VIM 8 pack特性进行插件管理。不再需要gvim支持python环境。 以下插件，ale需要补充安装iverilog才能进行语法检查。ctags也需要另外安装如果是Ubuntu，跟我一样的版本。使用同样的阿里源。应该可以直接使用sudo apt install ctags 完成安装。 名称 功能 git clone链接 nerdtree 文件目录树 https://github.com/preservim/nerdtree.git nerdcommenter 快速注释 https://github.com/preservim/nerdcommenter.git vim-airline 状态栏美化 https://github.com/vim-airline/vim-airline.git vim-snippets 代码片段库 https://github.com/honza/vim-snippets.git vim-snipmate 代码片段展开 https://github.com/garbas/vim-snipmate.git vim-addon-mw-utils vim-snipmate依赖插件 https://github.com/MarcWeber/vim-addon-mw-utils.git tlib_vim vim-snipmate依赖插件 https://github.com/tomtom/tlib_vim.git vim-easy-align 代码对齐 https://github.com/junegunn/vim-easy-align.git neocomplcache 代码补全 https://github.com/Shougo/neocomplcache.vim.git auto-pairs 自动配对括号 https://github.com/jiangmiao/auto-pairs.git ale 语法检查 https://github.com/dense-analysis/ale.git gruvbox 色彩空间 https://github.com/morhetz/gruvbox.git indentLine 缩进标识 https://github.com/Yggdroot/indentLine.git vlog_inst_gen Verilog自动例化 https://github.com/vim-scripts/vlog_inst_gen.git ctags ctags模块标签 使用sudo apt install ctags 命令直接安装 官网：Exuberant Ctags 各插件使用说明nerdtree文件目录树配置信息 常用命令按F5展开/关闭目录树光标移动到需打开的文件，o：打开到当前窗口t：打开并新建标签页到当前窗口， nerdcommenter快速注释配置信息 常用命令,cc：注释,cu：取消注释,c&lt;空格&gt;：最常使用的操作，可以自动判断是注释还是取消注释,cA：注意是大写A，也就是shift+a，在行末添加注释 vim-airline状态栏美化就是下面的状态栏美化，没有做任何调整。 vim-snippets代码片段库在该路径下找到verilog的代码片段仓库，添加自己的代码块。如图，这里简单加了一个shixu的snippet。 vim-snipmate代码片段展开相关配置 常用命令如上，在vim-snippets代码片段库中添加了一个shixu的代码在输入shixu后，按tab即可展开该代码片段。 vim-easy-align代码对齐相关配置 常用命令比较简单的对齐插件，一般依据“空格”、“逗号，”“等号=”来完成代码对齐选中对齐的代码后，输入ga+“对齐依据”建议不要全选代码对齐，效果不好。小范围对齐即可。如下，先根据“=”进行对齐，再根据“，”进行对齐。自己再手动调整一下就好。 neocomplcache代码补全相关配置 常用命令此处的代码补全和上面的代码片段不是一个含义。这里的补全，会根据缓存信息，判断你需要输入的内容是什么。除了代码外，路径之类的也是可以补全的。输入部分内容，会自动展开补全列表，ctrl+n下移，回车确定补全。 auto-pairs自动配对括号输入括号时自动成对出现。 ale语法检查相关配置注意，需要补充安装iverilog才能使用Ubuntu下可以直接用命令安装，centos可能需要下载源文件安装。除了iverilog，还有其他语法工具可以使用，详见插件github。 gruvbox色彩空间自己调整过的色彩方案，如果想自己搞可以看看我之前的视频。没啥用的小技巧 - Gvim自定义色彩方案_哔哩哔哩_bilibili建议不要花太多时间，看的顺眼就行。 indentLine缩进标识比较容易判断缩进情况，以4个空格为一个缩进单位。 vlog_inst_genVerilog自动例化相关配置 常用命令,ig，生成当前文件的例化文件，会自动存储到剪贴板中。按esc退出冒出的信息，在需要例化的地方粘贴代码 ctags模块标签相关配置该功能其实不是一个插件，需自行安装ctags，Ubuntu下可以命令直接安装sudo apt install ctags 常用命令gi：进入光标所在未知的模块端口go：退出到上一级模块 .vimrc配置文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189\"-----------------------------------------------------------------------------\" basic configuration \"-----------------------------------------------------------------------------syntax on \" syntax highlightfiletype plugin indent on \" plugins and indentation based on file type set hlsearch \" search highlightset ignorecase \" ignore search caseset cuc \" current column highlightset cul \" current line highlightset nu \" show line numberset fileencoding=utf-8 \"prevent garbled charactersset fenc=utf-8set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936,big－5 set enc=utf-8source $VIMRUNTIME/delmenu.vimsource $VIMRUNTIME/menu.vimlet &amp;termencoding=&amp;encodingset guifont=Monospace\\ 12 \" set font set tabstop=4 \" set tab to 4 spacesset expandtabset shiftwidth=4 \"set auto-indent to 4 spacesset softtabstop=4 \" set the back key to delete 4 spacesset ruler \" set show rulerset smartindent \" set smart auto-indentset showcmd \" show commandset autochdir \" auto-swith working directorywinpos 235 235 \" set windows position set lines=40 columns=108 \" set windows size set nocompatible \" remove vi consistency\"-----------------------------------------------------------------------------\" customize shortcut keys \"-----------------------------------------------------------------------------imap ii &lt;ESC&gt;nmap ww :w&lt;CR&gt;nmap qq :q&lt;CR&gt; nmap fd * let mapleader = \",\"\"-----------------------------------------------------------------------------\" plugin: NERDTree\"-----------------------------------------------------------------------------map &lt;leader&gt;ne :NERDTreeToggle&lt;CR&gt;let g:NERDTreeWinSize = 25 \" set nerdtree sizelet NERDTreeIgnore=['\\.pyc','\\~$','\\.swp'] \" ignore the display of the following fileslet NERDTreeShowHidden=1 \" show hidden fileslet g:NERDTreeDirArrowExpandable = '▸' \" modify the default arrow symbollet g:NERDTreeDirArrowCollapsible = '▾'autocmd bufenter * if (winnr(\"$\") == 1 &amp;&amp; exists(\"b:NERDTree\") &amp;&amp; b:NERDTree.isTabTree()) | q | endif\" nerdtree hot key mappingmap &lt;F5&gt; :NERDTreeMirror&lt;CR&gt;map &lt;F5&gt; :NERDTreeToggle&lt;CR&gt;map &lt;leader&gt;f :NERDTreeFind&lt;CR&gt;\"-----------------------------------------------------------------------------\" plugin: airline\"-----------------------------------------------------------------------------let g:airline_theme='base16_gruvbox_dark_hard'\"-----------------------------------------------------------------------------\" plugin: indentline\"-----------------------------------------------------------------------------let g:indentLine_enable = 1let g:autopep8_disable_show_diff=1let g:indentLine_char_list = ['|', '¦', '┆', '┊']\"-----------------------------------------------------------------------------\" plugin: easyalign\"-----------------------------------------------------------------------------\" Start interactive EasyAlign in visual mode (e.g. vipga)xmap ga &lt;Plug&gt;(EasyAlign)\" Start interactive EasyAlign for a motion/text object (e.g. gaip)nmap ga &lt;Plug&gt;(EasyAlign)\"-----------------------------------------------------------------------------\" plugin: neocomplcache\"-----------------------------------------------------------------------------let g:neocomplcache_enable_at_startup = 1 \" auto start neocomplcache let g:neocomplcache_enable_auto_select = 1 \" auto select the first item in the listlet g:neocomplcache_min_syntax_length = 2 \" Set minimum syntax keyword length.let g:neocomplcache_lock_buffer_name_pattern = '\\*ku\\*'\" inoremap &lt;expr&gt;&lt;CR&gt; neocomplcache#smart_close_popup() . \"\\&lt;CR&gt;\"inoremap &lt;expr&gt;&lt;C-Y&gt; neocomplcache#close_popup()inoremap &lt;expr&gt;&lt;space&gt; neocomplcache#undo_completion()inoremap &lt;expr&gt;&lt;Enter&gt; pumvisible() ? \"\\&lt;C-Y&gt;\" : \"\\&lt;Enter&gt;\" \"-----------------------------------------------------------------------------\" plugin: gruvbox\"-----------------------------------------------------------------------------set bg=darkcolorscheme gruvbox\"-----------------------------------------------------------------------------\" plugin: nerdcommender\"-----------------------------------------------------------------------------\" my key: ,cl /,cc /,cu /,c&lt;space&gt;let g:NERDSpaceDelims = 1 \" add space after comment\"-----------------------------------------------------------------------------\" plugin: ale\"-----------------------------------------------------------------------------\"keep the sign gutter openlet g:ale_sign_column_always = 1let g:ale_sign_error = '&gt;&gt;'let g:ale_sign_warning = '--'\" show errors or warnings in my statuslinelet g:airline#extensions#ale#enabled = 1 \" use quickfix list instead of the loclistlet g:ale_set_loclist = 0let g:ale_set_quickfix = 1\" only enable these linterslet g:ale_linters = {\\ 'verilog': ['iverilog']\\}nmap &lt;silent&gt; &lt;C-k&gt; &lt;Plug&gt;(ale_previous_wrap)nmap &lt;silent&gt; &lt;C-J&gt; &lt;Plug&gt;(ale_next_wrap)\"-----------------------------------------------------------------------------\" plugin: ctags\"-----------------------------------------------------------------------------nmap gi &lt;C-]&gt; \" go into instance module or output port nmap go &lt;C-o&gt; \" go out to upper stage \"-----------------------------------------------------------------------------\" plugin: vlogInst\"-----------------------------------------------------------------------------so ~/.vim/pack/default/start/vlog_inst_gen/vlog_inst_gen.vim \" set path\" key: (,ig)\"-----------------------------------------------------------------------------\" plugin: snipmate\"-----------------------------------------------------------------------------imap &lt;tab&gt; &lt;Plug&gt;snipMateTrigger \" tab expand code snippetsimap &lt;tab&gt; &lt;Plug&gt;snipMateNextOrTriggerimap &lt;C-tab&gt; &lt;Plug&gt;snipMateShow \" tab expand code snippets list\"-----------------------------------------------------------------------------\" auto add file header when create new file\"-----------------------------------------------------------------------------autocmd BufNewFile *.v,*.sv,*.cpp,*.c,*.h exec \":call AddHeader()\"autocmd BufWrite *.v call UpdateLastModifyTime()function s:GetUserName() let user_name = \"Rongye\" return user_nameendfunction function AddHeader() let line = getline(1) let filename = expand(\"%\") call append(0, \"// +FHDR----------------------------------------------------------------------------\") call append(1, \"// Copyright (c) \".strftime(\"%Y \") ) call append(2, \"// ALL RIGHTS RESERVED\") call append(3, \"// ---------------------------------------------------------------------------------\") call append(4, \"// Filename : \".filename) call append(5, \"// Author : \".s:GetUserName()) call append(6, \"// Created On : \".strftime(\"%Y-%m-%d %H:%M\")) call append(7, \"// Last Modified : \") call append(8, \"// ---------------------------------------------------------------------------------\") call append(9, \"// Description : \") call append(10, \"//\") call append(11, \"//\") call append(12, \"// -FHDR----------------------------------------------------------------------------\")endfunction \"-----------------------------------------------------------------------------\" auto update file header modifyTime if write\"-----------------------------------------------------------------------------function UpdateLastModifyTime() let line = getline(8) if line =~ '// Last Modified' call setline(8,\"// Last Modified : \" . strftime(\"%Y-%m-%d %H:%M\")) endifendfunction ‍","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"数字IC","slug":"数字IC","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E5%AD%97IC/"},{"name":"GVim","slug":"GVim","permalink":"https://rongyel.github.io/tags/GVim/"}],"author":"Rongye"},{"title":"从零开始EDA环境搭建","slug":"IC攻城狮的摸鱼小屋/技术笔记/EDA/从零开始EDA环境搭建","date":"2024-07-06T15:53:35.031Z","updated":"2024-07-14T03:21:20.775Z","comments":true,"path":"posts/f07a99ab.html","link":"","permalink":"https://rongyel.github.io/posts/f07a99ab.html","excerpt":"搭建一个能够运行tinyriscv项目的EDA环境。","text":"Ubuntu18.04 系统安装http://mirrors.aliyun.com/ubuntu-releases/18.04/ 阿里云镜像下载 VMware配置安装后，启动后为英文。 在更改语言前，先换源。 换源https://zhuanlan.zhihu.com/p/61228593 桌面右键打开terminal 首先备份源列表sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup 打开sources.list文件sudo gedit /etc/apt/sources.list 阿里源 deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse刷新列表sudo apt-get updatesudo apt-get upgradesudo apt-get install build-essential 换源以后就可以去下载语言了。 选择下载语言，找到Chinese 更改以后重启。 重启以后提示更改文件夹名称，最好不做修改保持英文。 系统不自带python2，补充安装 sudo apt install python 系统自带python3.6.9，应该够用，就不装先了。 下面开始准备gvim gvim基本安装系统自带的vi会出现乱码问题，先卸载 sudo apt-get remove vim-common 重新安装，直接装vim-gtk3 sudo apt install vim-gtk3 基本可以使用了，接下来开始搞插件。 安装git sudo apt install git 接着首先安装vundle插件管理器 参考https://www.cnblogs.com/feiyuhuo/p/10274236.html 1、先新建目录 mkdir ~/.vim/bundle/Vundle.vim 2、git 克隆 Vundle 工程到本地 git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim 出现这个无法访问的提示…… 那只能将https修改为git 已经准备好的.vimrc文件整个复制进去。【此时目录下应该没有，自己新建一个并命名为.vimrc，然后把下面的内容复制进去即可】 启动gvim，此时会报错无所谓，因为插件还没安装。 回车两下进入正常显示后，输入冒号:PluginInstall安装插件 暂时是只安装三个插件。其他先注释掉了，以后再装。 完成以后重启gvim现在已经是比较好看的了。 在~/.vim目录内，新建colors和syntax文件夹 语法文件和色彩方案搭配效果如下 看verilog代码才会有效果。 那么至此最基本的准备就完成了。 先拍摄一个快照保存一下 tinyriscv环境搭建那么目前是没有多余配置的， 接下来先把tinyriscv的环境准备好。 作者的gitee库 https://gitee.com/liangkangnan/tinyriscv/ 在Downloads文件夹下下载iverilog git clone https://github.com/steveicarus/iverilog.git cd iverilog 切换到v11分支(必须用V11或以上的版本) git checkout v11-branch 安装依赖 sudo apt-get install autoconf gperf flex bison build-essential 编译、安装iverilog和vvp sh autoconf.sh ./configure sudo make&amp;make install 然后准备python3软链接 先删除原来的软链接，这个是连到python2的 sudo rm /usr/bin/python 然后建立新的软链接 sudo ln -s /usr/bin/python3.6 /usr/bin/python 那么现在直接如数python会看到打开的是3.6.9了。exit（）退出，接着搞别的。 安装gtkwave sudo apt-get install gtkwave 下载gun工具链，百度网盘下载(链接：https://pan.baidu.com/s/10uLZYf_cgtH94kZI_N6JhQ 提取码：uk0w) 然后直接拖拽进去。 右键可以直接解压 接着克隆tinyriscv项目工程 在Downloads目录下克隆 git clone https://gitee.com/liangkangnan/tinyriscv.git 主目录下新建个Project文件夹，将刚克隆的复制过来，之前的作为原始备份。 之前下载的工具链复制到tinyriscv工程下的tools目录中 修改tinyriscv/tests/example目录下的common.mk文件 把名称修改过来，保持和工具链名称前缀一致。 :wq保存并退出 下面开始进行测试 sim目录下启用终端 1python .\\sim_new_nowave.py ..\\tests\\isa\\generated\\rv32ui-p-add.bin inst.data 指令执行会报错，说没有这个文件或目录。 把右下划线全部替换为左下划 1python ./sim_new_nowave.py ../tests/isa/generated/rv32ui-p-add.bin inst.data 顺利运行得到结果。 找到当前目录下的tinyriscv_soc_tb.vcd文件双击启动gtkwave查看 基本使用没有问题。 测试所有指令集 1python ./test_all_isa.py 测试新指令集 进入到sim/compliance_test目录，执行以下命令： cd compliance_test python ./compliance_test.py ../../tests/riscv-compliance/build_generated/rv32i/I-ADD-01.elf.bin inst.data 得到PASS表明通过。 接下来测试c文件编译 进入到tests\\example\\simple目录，执行以下命令编译： make 在该目录下回生成.bin文件 编译成功之后，进入到sim目录，执行以下命令开始测试： python ./sim_new_nowave.py ../tests/example/simple/simple.bin inst.data 通过，那么至此基本仿真已经没有问题了。 下面测试FPGA移植。 FPGA移植准备移植需要准备vivado集成开发环境和FPGA，CMSIS-DAP调试器。 我这里安装的是vivado2017.4和Digilent 的 ARTY A7 35T开发板 安装vivado需要准备安装包和许可文件，请自行准备。 此处不能拖拽进虚拟机，需要利用共享文件夹的方式。 在虚拟机设置中，将USB兼容性先修改为USB 3.1 切换到“选项” 启用共享文件夹，不需要关机。 之后在根目录/mnt/hgfs/就可以找到自己的共享文件夹了。 进入安装包文件夹， 赋予安装权限 chmod +x xsetup 执行命令 ./xsetup 启动安装引导 安装过程和windows下没有区别。 安装路径要在/home下，不然空间不足。此处建立了一个EDA_Tools目录供后续各种工具安装。 安装末尾载入许可文件。 在vivado/2017.4目录下找到settings64.sh配置文件。 编辑主目录配置文件 vim ~/.bashrc 在末尾添加路径 source /home/eda/EDA_Tools/Vivado/2017.4/settings64.sh 然后重新加载环境配置 source ~/.bashrc 至此应该就可以启动vivado了。 vivado &amp; 启动vivado 顺利启动以后先关闭，处理一些剩余内容。 先把xilinx的信息中心卸载掉。 找到这个软件，打开。 直接卸载就行。 接着补充安装驱动，否则后续可能无法烧写板子。 /home/eda/EDA_Tools/Vivado/2017.4/data/xicom/cable_drivers/lin64/install_script/install_drivers 在这个路径下，打开终端。 安装驱动。 sudo ./install_drivers 那么vivado也准备完毕以后，开始移植tinyriscv到FPGA上 FPGA移植工作新建工程 我的板子ARTY A7 35T 器件属性选择xc7a35ticsg324-1l 添加源文件 将tinyriscv下整个RTL添加复制进来 将tinyriscv下fpga/constrs下的.xdc约束文件添加进来。 打开约束文件，根据自己的开发板进行修改。此处为我自己的约束。 重点关注时钟，我是100M的时钟，等会还要用PLL分频。 GPIO0,1。我分配给了一个LED和一个SW拨码开关。 JTAG和UART使用调试器CMSIS-DAP的相应接口。 都根据自己开发板的原理图来。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125# 时钟约束50MHz(100MHz)set_property -dict { PACKAGE_PIN E3 IOSTANDARD LVCMOS33 } [get_ports {sys_clk}];create_clock -add -name sys_clk_pin -period 10.00 [get_ports {sys_clk}];# 时钟引脚 E3set_property IOSTANDARD LVCMOS33 [get_ports sys_clk]set_property PACKAGE_PIN E3 [get_ports sys_clk]# 复位引脚 CK_RST/ C2set_property IOSTANDARD LVCMOS33 [get_ports rst]set_property PACKAGE_PIN C2 [get_ports rst]# 程序执行完毕指示引脚 LED3/ T10set_property IOSTANDARD LVCMOS33 [get_ports over]set_property PACKAGE_PIN T10 [get_ports over]# 程序执行成功指示引脚 LED2/ T9set_property IOSTANDARD LVCMOS33 [get_ports succ]set_property PACKAGE_PIN T9 [get_ports succ]# CPU停住指示引脚 LED1/ J5set_property IOSTANDARD LVCMOS33 [get_ports halted_ind]set_property PACKAGE_PIN J5 [get_ports halted_ind]# 串口下载使能引脚 SW3/ A10set_property IOSTANDARD LVCMOS33 [get_ports uart_debug_pin]set_property PACKAGE_PIN A10 [get_ports uart_debug_pin]# 串口发送引脚 / D4set_property IOSTANDARD LVCMOS33 [get_ports uart_tx_pin]set_property PACKAGE_PIN D4 [get_ports uart_tx_pin]# 串口接收引脚 / D3set_property IOSTANDARD LVCMOS33 [get_ports uart_rx_pin]set_property PACKAGE_PIN D3 [get_ports uart_rx_pin]# GPIO0引脚 LED0/ H5set_property IOSTANDARD LVCMOS33 [get_ports {gpio[0]}]set_property PACKAGE_PIN H5 [get_ports {gpio[0]}]# GPIO1引脚 SW0/ A8set_property IOSTANDARD LVCMOS33 [get_ports {gpio[1]}]set_property PACKAGE_PIN A8 [get_ports {gpio[1]}]# JTAG TCK引脚 JD9/ H2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TCK]set_property PACKAGE_PIN H2 [get_ports jtag_TCK]#create_clock -name jtag_clk_pin -period 300 [get_ports {jtag_TCK}];#屏蔽 外部时钟输入分配到普通的IO口set_property CLOCK_DEDICATED_ROUTE FALSE [get_nets jtag_TCK]# JTAG TMS引脚 JD10/ G2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TMS]set_property PACKAGE_PIN G2 [get_ports jtag_TMS]# JTAG TDI引脚 JD7/ E2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TDI]set_property PACKAGE_PIN E2 [get_ports jtag_TDI]# JTAG TDO引脚 JD8/ D2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TDO]set_property PACKAGE_PIN D2 [get_ports jtag_TDO]# SPI MISO引脚 CK_MISO/ G1set_property IOSTANDARD LVCMOS33 [get_ports spi_miso]set_property PACKAGE_PIN G1 [get_ports spi_miso]# SPI MOSI引脚 CK_MOSI/ H1set_property IOSTANDARD LVCMOS33 [get_ports spi_mosi]set_property PACKAGE_PIN H1 [get_ports spi_mosi]# SPI SS引脚 CK_SS/ C1set_property IOSTANDARD LVCMOS33 [get_ports spi_ss]set_property PACKAGE_PIN C1 [get_ports spi_ss]# SPI CLK引脚 CK_SCK/ F1set_property IOSTANDARD LVCMOS33 [get_ports spi_clk]set_property PACKAGE_PIN F1 [get_ports spi_clk]set_property BITSTREAM.CONFIG.SPI_BUSWIDTH 4 [current_design]set_property CONFIG_MODE SPIx4 [current_design]set_property BITSTREAM.CONFIG.CONFIGRATE 50 [current_design] 接下来添加锁相环PLL， 配置IP输出50M时钟 打开顶层文件，修改端口clk为sys_clk 往下，在第一个always块前例化PLL 记得补充声明clk， 至此完成所有FPGA工程配置，生成比特流文件 顺利生成比特流文件，连接开发板直接烧写。 烧写时可能需要重新定位一下，自己生成的bit文件。 板子上的LED亮起，说明顺利烧写进去了， 接下来进行JTAG调试。 FPGA运行调试调试需要使用到CMSIS-DAP，连好线，做好管脚约束才能使用。 同时还需要上位机，作者提供的只有exe也就是windows下的软件。 *注意，Linux下的openocd安装非常麻烦，我遇到了很多问题，虽然现在顺利安装并使用了。 不介意的话后续工作可以直接在windows上进行，把一些文件直接拖到windows下使用即可。 在Ubuntu下直接安装上位机openocd sudo apt install openocd 在tools/openocd目录下，我们需要使用到这个.cfg配置文件。 openocd -f tinyriscv.cfg 提示不行，这是因为默认安装的openocd不支持CMSIS-DAP， 所以我们还需要源码安装自己配置 sudo apt remove openocd先卸载掉原本安装的 进行源码安装，参考 https://blog.csdn.net/daoshengtianxia/article/details/115038674 在Downloads目录下克隆 git clone git://github.com/ntfreak/openocd cd openocd/ 安装依赖 然后执行 ./bootstrap 缺少了什么但又不清楚，补充安装了一大堆东西。 sudo apt install debhelper findutils autotools-dev autoconf automake libtool pkg-config libltdl-dev 重新执行 ./bootstrap 缺少libusb-1.x，补充安装 sudo apt install libusb-1.0 再次configure 这次应该是顺利配置了 再补充下面这个 ./configure –enable-cmsis-dap –enable-jlink –enable-stlink –enable-ti-icdi 提示需要hidapi， sudo apt-get install libhidapi-dev 其实是要补充安装这个libhidapi的库，然后再配置。注意一定要给权限。 sudo ./configure –enable-cmsis-dap 配置成功一定要看到这个地方是yes的 最后编译安装 sudo make&amp;make install 完成安装以后，回到tinyriscv/tools/openocd目录下 openocd -f tinyriscv.cfg 现在可以启用这个软件了，当然目前连接还是失败的，需要再做一些配置。 此外，首先需要对.cfg文件中的一些内容做修改。 根据上一张图，有提示说use”adapter speed”not’adapeter_khz’ 意思就是用前面那个不要用后面那个表述， 打开.cfg就可以看到对应的内容了，改过来就行。 然后还需要准备权限，参考https://www.bbsmax.com/A/A2dm9B87de/ 用lsusb 确认自己的调试器信息 Bus 003 Device 008: ID 0d28:0204 NXP LPC1768 需要增加一个rules文件，参考https://blog.csdn.net/zhengyangliu123/article/details/78232241 进入前面克隆的openocd/contrib 目录 使用指令将 60-openocd.rules 文件复制入 /etc/udev/rules.d/ 目录下 sudo cp 60-openocd.rules /etc/udev/rules.d/ 然后，对文件做一些修改【此处存疑，可能不改也能用】 sudo gvim /etc/udev/rules.d/60-openocd.rules 最下面的地方，改成跟我下图一样的。 注意idVendor和idProduct要保持和上面看到的0d28:0204设备信息一致。 保存以后重启电脑 回到之前的tinyriscv中的openocd文件夹，使用终端执行 openocd -f tinyriscv.cfg 终于看到这个了，不容易啊 *注意，这里存在未知问题。每次重启系统以后，最开始使用openocd会报错。需执行3次，才会识别并启用…… 原因不明，但每次都这样。只要启动成功，不关机就不会有这个问题。 新开一个终端，看作者后续的操作。windows和linux在路径上有些不同 然后打开另一个CMD窗口，执行以下命令来连接openocd，注意电脑要启用telnet host服务。 telnet localhost 4444 然后在这个CMD窗口下使用load_image命令将固件下载到FPGA，这里以freertos.bin文件为例，如下所示： load_image D:/gitee/open/tinyriscv/tests/example/FreeRTOS/Demo/tinyriscv_GCC/freertos.bin 0x0 bin 0x0 0x1000000 使用verify_image命令来校验是否下载成功，如下所示： verify_image D:/gitee/open/tinyriscv/tests/example/FreeRTOS/Demo/tinyriscv_GCC/freertos.bin 0x0 如果下载出错的话会有提示的，没有提示则说明下载成功。 最后执行以下命令让程序跑起来： resume 0 注意：每次下载程序前记得先执行halt命令停住CPU。； 这里使用gpio进行验证 在/home/eda/Project/tinyriscv/tests/example/gpio路径下使用make编译生成bin文件 在telnet窗口下使用下面命令烧写程序 load_image /home/eda/Project/tinyriscv/tests/example/gpio/gpio.bin 0x0 bin 0x0 0x1000000 verify_image /home/eda/Project/tinyriscv/tests/example/gpio/gpio.bin 0x0 bin 0x0 如果看到这个，说明程序烧写成功了 resume 0 此时开发板已经可以正常使用，LED灯会随对应的那个开关亮灭。 下面测试一下串口， 先去把串口发送uart_tx的程序编译一下 安装串口调试工具cutecom sudo apt-get install cutecom 直接打开工具 选这个ACM OPEN以后会看到，连接的就是这个CMSIS-DAP调试器 load_image /home/eda/Project/tinyriscv/tests/example/uart_tx/uart_tx.bin 0x0 bin 0x0 0x1000000 烧写进去并且resume以后，可以看到串口助手窗口打印了hello world。 至此，整个tinyriscv的linux开发环境搭建完成，可以运行整个项目的所有内容。 其他补充输入su命令获取root权限时， 出现了 authentication failure 的问题，即身份验证失败。 需要进行下面操作： $ sudo passwd root Enter new UNIX password: //此时输入你的密码 Retype new UNIX password: //再次输入，相同密码。 passwd: password updated successfully 此时再用su命令，就可以获取到root权限了。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"数字IC","slug":"数字IC","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E5%AD%97IC/"},{"name":"Linux","slug":"Linux","permalink":"https://rongyel.github.io/tags/Linux/"}],"author":"Rongye"},{"title":"CHI l-credit的使用关注点","slug":"IC攻城狮的摸鱼小屋/技术笔记/CHI/CHI l-credit的使用关注点","date":"2024-07-06T15:53:35.011Z","updated":"2024-07-14T03:21:59.364Z","comments":true,"path":"posts/418ca596.html","link":"","permalink":"https://rongyel.github.io/posts/418ca596.html","excerpt":"CHI协议的LINK层credit握手机制是个很有意思的东西，实际使用的时候有些需要关注的地方。","text":"握手差异CHI和AXI的一个很大不同，就在于握手机制。 AXI协议中使用的是valid-ready握手的方式， CHI协议中则设计了一套credit机制进行握手。 credit握手credit由rx发出，tx接收。tx每拥有一个credit，就可以向rx发送一笔数据，即一次flitv。rx每收到一个flitv，就再发出一个credit给tx。每个通道（REQ/SNP/RSP/DATA）都有独立的credit。 credit和valid-ready的一个最大区别，就在于：valid-ready握手是必须握完一个事务才能握下一个，credit握手则是，我可以一次性给你发很多个credit，你慢慢发事务。 给credit的含义就是，你可以发，而我必须接收，所以rx内的buffer深度必须大于等于credit数量，不然就会丢包。 接口流水两个节点之间，假定路径上有4拍延迟，那么需要4个credit，就可以保证流水。 如果flitv或者credit因为走线加拍，那么credit数量就需要对应增加。 当然，在4拍路径下，给6个credit，有2个credit的裕量，这肯定也是可以的，不会有功能问题，但存在面积代价。 由于多了2个credit，RX的buffer或者FIFO就必须对应增加2深。当数据位宽较大时，FIFO深度多了2深就算是比较明显的浪费了。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"CHI","slug":"CHI","permalink":"https://rongyel.github.io/tags/CHI/"}],"author":"Rongye"},{"title":"CHI flitpend是干嘛的","slug":"IC攻城狮的摸鱼小屋/技术笔记/CHI/CHI flitpend是干嘛的","date":"2024-07-06T15:53:34.956Z","updated":"2024-07-14T03:21:57.016Z","comments":true,"path":"posts/b6eda8db.html","link":"","permalink":"https://rongyel.github.io/posts/b6eda8db.html","excerpt":"定位一个挂死问题，追波形追了一个下午，最后发现是这个FLITPEND导致的……","text":"参考文献ARM官方手册：AMBA 5 CHI Architecture Specification&nbsp;CHI协议链路层 - 知乎 FLITPEND协议描述CHI协议链路层的一个信号 之前看协议的时候有点忽略了这个东西 这个PEND信号是什么含义，可能字面上不太好理解。 它其实就是个时钟门控信号 FLITPEND信号预测接下来会有一笔有效的flit传输。 可以用来开启时钟 正常来讲，FLITPEND需要比FLITV快一个时钟， 也就是在FLITPEND有效的下一拍发来数据， 所以该信号就是一笔预测信号，帮助SLV开启时钟的。 问题记录这次定位问题就是在这个地方， 使用了pend，但是发过来的pend不准。 本来FLITPEND需要比FLITV早一拍到， 但可能由于multicycle的原因，导致慢了一点点， FLITPEND没有在早一拍的时钟上升沿到达， FLITPEND和FLITV同拍了， 这会导致时钟门控打开的晚了， 从时序图可以看到， FLITV和FLIT才是应该同拍的信号， 时钟门控打开的晚了， 导致在某个模块中，同拍输入FLITV和FLIT， 在下一个时钟变成了错拍的情况： FLITV过了一拍，FLIT过了一拍才输出。 FLITV和FLIT错拍了， 后续所有采集都会采错，就，导致系统挂死了。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"CHI","slug":"CHI","permalink":"https://rongyel.github.io/tags/CHI/"},{"name":"AMBA","slug":"AMBA","permalink":"https://rongyel.github.io/tags/AMBA/"}],"author":"Rongye"},{"title":"EASY_AXI：一个简单的例程，掌握AXI基本事务流程","slug":"IC攻城狮的摸鱼小屋/技术笔记/AXI/EASY_AXI：一个简单的例程，掌握AXI基本事务流程","date":"2024-07-06T15:53:34.923Z","updated":"2024-07-14T03:22:07.172Z","comments":true,"path":"posts/35eaf17c.html","link":"","permalink":"https://rongyel.github.io/posts/35eaf17c.html","excerpt":"一个简单的例程，掌握AXI基本事务流程。","text":"相关文件 文件名 说明 easy_axi.v 顶层文件 easy_axi_tb.v 测试文件testbench m_axi.v axi master，事务发起者 s_axi.v axi slave，事务接收者 easy_axi.gtkw gtkwave波形配置 Makefile 执行脚本 GitHub - RongyeL/easy_axi: Learn the basics of AXI against the code and protocol 操作步骤 确保开发环境，安装iverilog和gtkwave。 终端下输入命令make 运行后会自动打开gtkwave file-&gt;read save file，选择.gtkw文件，加载已调整好的波形配置。 可以直接看到当前设计案例的波形结果 代码说明easy_axi_tb.v按顺序执行所配置的事务。当前无法在上一个事务结束前执行下一个事务，因此需要设置时间间隔。必须先进行写事务，否则读出来的结果为x，因此slave的存储空间未进行初始化。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"AXI","slug":"AXI","permalink":"https://rongyel.github.io/tags/AXI/"},{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"}],"author":"Rongye"},{"title":"AXI协议学习笔记","slug":"IC攻城狮的摸鱼小屋/技术笔记/AXI/AXI协议学习笔记","date":"2024-07-06T15:53:34.897Z","updated":"2024-08-12T16:15:11.118Z","comments":true,"path":"posts/fe51682c.html","permalink":"https://rongyel.github.io/posts/fe51682c.html","excerpt":"AXI总线是当前最常用的总线协议，身为IC工程师，对AXI的掌握可以说是必须的。","text":"ARM官方手册：AMBA AXI and ACE Protocol Specification 全景图 什么是AXI AXI（Advance eXtensible interface）是一种总线协议，该协议是ARM公司提出的AMBA(Advanced Micocontroller Bus Architecture)协议中重要部分，是一种面向高性能、高带宽、低延迟的片内总线。当前，SoC中绝大多数对性能有需求的模块都会使用到AXI。 为什么要选择AXI AXI的性能只是一个方面的原因，另外一个重要因素其实是市场环境。 所拥有的IPs总线协议 所涉及的处理器总线协议。 总线的应用率，市场占有率。 总线的性能。 兼容性。 AXI总线协议是当前市场上能满足上述因素的一个强大协议，所以身为IC工程师，对AXI的掌握可以说是必须的。 AXI和AHB的区别 参考文献：AMBA AHB协议和AXI协议有什么区别？ - 极术社区 - 连接开发者与智能计算生态 AXI的架构 传输通道AXI具有五个数据通道，各通道之间是并行的，相当于独立的五条总线。每条通道都具有固定的方向。 读操作包括AR读地址（命令）和R读数据通道，写操作包括AW写地址（命令）、W写数据、B写响应通道。 AR/AW不仅仅包含地址信息，还包含控制，所以应该视为命令通道。 读数据通道传输数据和读应答，读应答指示每拍数据的状况。写数据通道和写应答通道分离，写应答指示每burst数据的状况。 由于AXI各通道都是单向传输的，且各通道之间相位分离，没有复杂的时序握手关系。这种特性使得各通道可以随意插入任意级数寄存器（stage），即打拍，来保证时序收敛。 写响应通道独立的原因核心原因：写响应数据流向和写数据数据流向是相反的。 互联结构 AXI协议严格来讲是一个点对点的主从接口协议，当多个外设需要互联时，需要加入一个AXI Interconnect模块，也就是AXI互联矩阵，作用是提供一个或多个AXI主设备连接到一个或多个AXI从设备时得一种交换机制。 AXI端口信息 GLOBE全局信号 Signal Source Description ACLK 系统时钟 系统时钟信号，上升沿触发 ARESETn 系统复位 系统复位信号，低有效 AXI写/读地址通道（命令通道） Signal Source Description AxID Master 传输地址ID，用于标识；相同ID需进行保序 AxADDR Master 传输地址，该地址给出了突发事务中第一次传输的地址 AxLEN Master 突发传输长度；实际长度=AxLEN+1 AxSIZE Master 传输数据的size，单位为byte。 0-&gt;1bytes; 1-&gt;2byte; 2-&gt;4bytes; 3-&gt;8bytes; 4-&gt;16bytes; 5-&gt;32bytes;6-&gt;64bytes;7-&gt;128bytes AxBURST Master Burst传输的模式： FIXED固定模式（00）；INCR增量模式（01）；WRAP卷绕模式（10） AxLOCK Master AXI4不支持锁定传输，支持Exclusive独占传输 AxPROT Master 保护类型，指示传输事务为PROT[0]: 1特权，0 非特权 AXI写/读数据通道AXI写响应通道AXI低功耗信号略 基本读写事务 握手机制在握手机制中，通信双份分别扮演发送方和接收方，两者的操作并不相同。通常会设计AXI Master 和 SLV两种端口。 发送方置高VALID信号表示发送方已经将数据、地址或控制信息就绪，并保持于信息总线上。接收方置高READY信号表示接收方已经做好接收的准备。 READY可以早于或晚于VALID，也可以依赖VALID；VALID可以早于或晚于READY，但不可以依赖READY，防止死锁。 所谓双向流控机制，指的时发送方通过置起VALID信号控制发送的时机与速度，接收方也可以通过READY信号的置起与否控制接收的速度。发送方拥有传输的主动权，但接收方在不具备接收能力时，也能够置低信号停止传输，反压发送方。 协议规定，在这种情况下，VALID信号一旦置起就不能置低，直到完成握手，至少传输一周期数据。 置起VALID信号必须是完全主动与独立的过程，否则就可能出现死锁。 死锁待更新 规避死锁的方式待更新 事务握手间的依赖关系待更新 事务的结构 AXI是基于Burst传输的协议，传输的属性及首地址都通过地址通道发送。 Burst传输长度FIXEDWRAPINCR Burst传输大小待更新 Burst地址计算待更新 Burst不能跨4K边界待更新 AXI不支持提前终止Burst待更新 写有效机制待更新 窄带传输待更新 字节不变性待更新 地址非对齐待更新 读写应答机制待更新 保序机制 Outstanding超前传输超前传输（Outstanding transaction）特性是AXI总线能够实现高性能传输的原因之一。 AxID保序待更新 Interconnect ID扩展待更新 AXI4保序模型待更新 事务属性 属性域段AxCACHE 不可修改事务待更新 Read/Write allocated待更新 memory类型待更新 访问权限待更新 Atomic Accesses 原子访问 原子性待更新 Exclusive access排他性访问待更新 为什么AXI4取消了Lock待更新 AXI4新增信号 QoS待更新 Multiple region interface待更新 User-defined待更新","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"AXI","slug":"AXI","permalink":"https://rongyel.github.io/tags/AXI/"},{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"}],"author":"Rongye"},{"title":"当前ARM只有64KB粒度页表支持52bit","slug":"IC攻城狮的摸鱼小屋/技术笔记/ARM/当前ARM只有64KB粒度页表支持52bit","date":"2024-07-06T15:53:34.865Z","updated":"2024-07-14T03:22:10.086Z","comments":true,"path":"posts/115c5add.html","link":"","permalink":"https://rongyel.github.io/posts/115c5add.html","excerpt":"ARMv8.2架构支持到52bit了，但仅有64KB粒度的页表才支持ARMv9架构则4k和16k翻译粒度也支持52bit，这里简单理解一下。","text":"ARMv8.2架构支持到52bit了，但仅有64KB粒度的页表才支持ARMv9架构则4k和16k翻译粒度也支持52bit，这里简单理解一下。 参考文献技术|理解 ARM64 内核中对 52 位虚拟地址的支持Linux内存管理：虚拟地址空间 - 知乎ARM-translation table walk_赵不胖的博客-CSDN博客为什么64位机指针只用48个位？ - 知乎 为什么64位的架构，并没有支持64位的地址空间？实现如此巨大的地址宽度只会增加系统的复杂度和地址转换的成本，带不来任何好处。AMD因此决定，在对这一架构的首次实现中，只有虚拟地址的最低48位才会在地址转换（页表查询）时被使用。 一个表示虚拟内存地址的64位指针只有低48位有效并带符号扩展到64位——换句话说，其高16位必须是全1或全0，而且必须与低48位的最高位（第47位）一致，否则通过该地址访问内存会产生#GP异常（general-protection exception） 不考虑大页的情况下，每一级4K大小的页表可以保存512项（每项8字节，64位，4096/8=512），对于一个48位地址来说，低4K地址（12位）是页内偏移，之后每多一级页表，地址范围增加9位，所以可以得到下面的规律：一级页表：9+12=21位地址，最大地址2MB二级页表：9+9+12=30位地址，最大地址1GB三级页表：9+9+9+12=39位地址，最大地址512GB四级页表：9+9+9+9+12=48位地址，最大地址256TB五级页表：9+9+9+9+9+12=57位地址，最大地址128PB六级页表：9+9+9+9+9+9+12=66位地址，超过64位，最大地址128EB 为啥是 9 bit 一级？4KB/8B = 0.5K = 9 bit ARMv8.2 架构的 LVA 和 LPA 拓展ARMv8.2 架构提供两种重要的拓展：大虚拟寻址（LVA）和大物理寻址（LPA）。 当使用 64 KB 转换粒度时，ARMv8.2-LVA 为每个翻译表基地址寄存器提供了一个更大的 52 位虚拟地址空间。 当使用 64 KB 转换粒度时，中间物理地址（IPA）和物理地址空间拓展为 52 位。 如果使用 64 KB 转换粒度来实现对 52 位物理地址的支持，那么一级块将会覆盖 4TB 的地址空间。 需要注意的是这些特性仅在 AArch64 架构中支持。 伴随着 ARMv8.2 拓展增加了对 LVA 地址的支持（仅当以页大小为 64 KB 运行时可用），在第一级转换中，描述符的数量会增加。 ARMv9 架构的 LVA2 和 LPA2 拓展这里需要看最新的ARM架构手册，可以看到，现在进一步增加对4K和16K翻译粒度的52bit地址空间支持。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"内存管理","slug":"内存管理","permalink":"https://rongyel.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"}],"author":"Rongye"},{"title":"对Stage1页表属性attrindex理解","slug":"IC攻城狮的摸鱼小屋/技术笔记/ARM/对Stage1页表属性attrindex理解","date":"2024-07-06T15:53:34.840Z","updated":"2024-07-14T03:22:13.797Z","comments":true,"path":"posts/d429f5fd.html","link":"","permalink":"https://rongyel.github.io/posts/d429f5fd.html","excerpt":"stage1的页表最低位属性用的是AttrIndex，而在stage2的页表属性用的是MemAttr。这样设计的原因可能是为了减少无效化操作。","text":"在看ARM VMSAv8的时候，注意到一个有意思的地方。最后获取到page或者block的时候，属性域段中，stage1的页表最低位属性用的是AttrIndex，而在stage2的页表属性用的是MemAttr 这两者主要是什么区别呢，也不是很难理解，像下面这个，4bit的MenAttr直接就表示memory类型，高2bit用来区分Device和normal memory的类型。低2bit用来具体细分是什么device或normal memory类型。 这里就不展开讲了。 重点是上面的stage1 页表，attrindex的使用，它并不是单独就能表示属性的这个index索引，指的是对MAIR（Memory Attribute Indirection Register）这个寄存器内部进行索引。MAIR根据不同异常级别有好几个，但其实内部都是一样的，从图上就可以看出，一个64bit的MAIR寄存器中有8个Attr，每8bit为一个Attr。至于这8bit是如何进一步表示属性的，这里也不展开说了，具体可以看架构手册D13.2.97 通过stage1 page中的attrindex属性域段，加上MAIR寄存器中配置的Attr，才能够表示一个地址空间的属性。这样可以理解，但重点在于为什么要这样做。 减少无效化操作，就是这种设计的核心意义。 如果想要改变属性，就需要改页表的话，修改页表后必须发出无效化命令到各个tlb中进行无效化，而进行无效化的代价其实是很大的。那为了减少无效化操作，就尽可能不要修改页表， 这里使用attrindex，索引寄存器中配置的属性信息，这意味着如果想要修改属性，仅仅需要修改寄存器值就好了，软件修改寄存器的代价那就比较小了。 至于为什么只有stage1 的页表是这样设计的，还没想太明白。可能终究这样也是需要付出寄存器的代价的，而stage2翻译（虚拟化，IPA-&gt;PA）的需求比较小，所以就直接把MemAttr放到页表的属性域段中吧。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"内存管理","slug":"内存管理","permalink":"https://rongyel.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"}],"author":"Rongye"},{"title":"对ARM access flag和dirty state机制理解","slug":"IC攻城狮的摸鱼小屋/技术笔记/ARM/对ARM access flag和dirty state机制理解","date":"2024-07-06T15:53:34.809Z","updated":"2024-07-14T03:22:11.821Z","comments":true,"path":"posts/a6a87a63.html","link":"","permalink":"https://rongyel.github.io/posts/a6a87a63.html","excerpt":"ARM的access flag和dirty state机制用于进行页表的维护，经过一段时间的思考，现在总算是理清楚了。","text":"参考文献官方ARM 架构手册：Arm Architecture Reference Manual for A-profile architectureH.a版本从D5.4.7小结开始 The Access flagARM的access flag和dirty state机制用于进行页表的维护，其中的Access flag其实挺好理解的，就是最后的Page中有个AF域段，如果是0，在被访问以后就更新为1。但dirty state我一直理解都不太好，Page中只有一个DBM（Dirty Bit Modifier）域段，这个域段的是怎样用的，一直没看明白。 经过一段时间的思考，现在总算是理清楚了。Access flag指示内存页是否被访问过。AF域段被设置为0后，首次被访问时会被修改为1。 The dirty statedirty state指示是否修改了内存页或内存段。dirty state可以由硬件管理，如 D5-4863 页HTTU所述dirty state信息使用访问权限位 AP[2] 和 S2AP[1] 以及 DBM 位进行编码。 Page的域段这里补充一下AF、AP、S2AP、DBM这几个域段的概念。在page的属性域段中， AF就是access flag AP是访问权限 S2AP和AP是一样的只是S2AP是stage2翻译的时候获得页的域段。stage2翻译就是IPA-&gt;PA的翻译阶段，这里不过多展开描述。 DBM Dirty修改位这个东西看起来很抽象，后面再展开表述它的使用 软件管理Access flagArmv8.0 要求软件管理访问标志。这意味着，每当尝试将访问标志的值为 0 的转换表描述符条目读入 TLB 时，都会生成访问标志错误。访问标志机制期望，当发生访问标志错误时，软件会在导致故障的转换表条目中将访问标志重置为 1。这可以防止下次访问内存位置时发生故障。访问标志设置为 0 的条目永远不会保留在 TLB 中，这意味着软件在设置标志后不必从 TLB 刷新条目。 这里稍微表述了一下，ARM V8.0是只支持通过软件来管理access flag的。当访问到AF为0的页时，就会产生一个fault错误告诉软件，软件去修改Page的AF为1，然后再次访问就正常了。显然，这里上报fault，软件再去改写AF，其实是要耗费软件的精力的。这就很麻烦。 硬件管理Access flag 和Dirty state从ARM V8.1开始，支持硬件管理了，也就是HTTU(Hardware Translation Table Update)。 简单来说，就是硬件可以直接去修改AF域段，这里的硬件指的应该是MMU/SMMU，在PTW获取最后一级Page的时候，如果发现AF是0，那就直接自己完成读写原子操作，将page的AF改为1，而无需上报Fault给软件。 而Dirty state的维护就体现的比较拐弯抹角了。它是同时使用DBM、AP/S2AP这一组域段来表示是否为Dirty的。 首先，软件会把页的访问权限设置为“不可写”。这里的“不可写”其实区分为“真的不可写”和“为了判断dirty state，暂时不可写”两种情况。这两种情况体现在DBM这个域段上：如果为0，那就是“真的不可写”如果为1，那就是“为了判断dirty state，暂时不可写” 如果DBM为0，那硬件在想要修改AF的时候，会发生权限错误，然后上报fault给软件。如果DBM为1，那硬件就知道，其实这个是可以写的，直接就将权限AP/S2AP修改为可写的状态。而权限从不可写变为可写这件事情，就表明该页是Dirty的了。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"页表","slug":"页表","permalink":"https://rongyel.github.io/tags/%E9%A1%B5%E8%A1%A8/"}],"author":"Rongye"},{"title":"什么叫RAS中断","slug":"IC攻城狮的摸鱼小屋/技术笔记/ARM/什么叫RAS中断","date":"2024-07-06T15:53:34.782Z","updated":"2024-07-14T03:22:18.773Z","comments":true,"path":"posts/4b0c4420.html","link":"","permalink":"https://rongyel.github.io/posts/4b0c4420.html","excerpt":"ras中断是什么，听的很多但也不太清楚什么中断才能叫做ras中断。","text":"参考文献RAS简介 - 知乎4.11. Reliability, Availability, and Serviceability (RAS) Extensions — Trusted Firmware-A documentation RAS全称为 Reliability, Availability，Serviceability。 Reliability（可靠性）指的是系统必须尽可能的可靠，不会意外的崩溃，重启甚至导致系统物理损坏，这意味着一个具有可靠性的系统必须能够对于某些小的错误能够做到自修复，对于无法自修复的错误也尽可能进行隔离，保障系统其余部分正常运转。 Availability（可用性）指的是系统必须能够确保尽可能长时间工作而不下线，即使系统出现一些小的问题也不会影响整个系统的正常运行，在某些情况下甚至可以进行 Hot Plug 的操作，替换有问题的组件，从而严格的确保系统的宕机时间在一定范围内。 Serviceability （可服务性）指的是系统能够提供便利的诊断功能，如系统日志，动态检测等手段方便管理人员进行系统诊断和维护操作，从而及早的发现错误并且修复错误。 RAS中断搜不到太多相关的资料，不过基于上述基本内容可以大致理解。ras中断就是，让系统比较可靠，的中断信号。常见的ras中断有： 这些中断是保证系统稳定运行的必要中断，保证系统不会出现重大错误的中断，大致就这么理解吧。 具体，应该由实现方案决定。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"中断","slug":"中断","permalink":"https://rongyel.github.io/tags/%E4%B8%AD%E6%96%AD/"}],"author":"Rongye"},{"title":"MMU-TLB基础知识","slug":"IC攻城狮的摸鱼小屋/技术笔记/ARM/MMU-TLB基础知识","date":"2024-07-06T15:53:34.759Z","updated":"2024-07-14T03:22:25.993Z","comments":true,"path":"posts/e0051e00.html","link":"","permalink":"https://rongyel.github.io/posts/e0051e00.html","excerpt":"SMMU（System Memory Management Unit，系统内存管理单元）可以认为是 MMU 的衍生，在开始 SMMU 的协议学习之前，先掌握 MMU 的相关基础知识。","text":"参考文献最好的学习资料就是协议书，本文基于 ARM 官方的文档开展 MMU 的基础知识学习。MMU 学习：learn_the_architecture_-_aarch64_memory_management_101811_0102_00_en.pdfArm® 架构参考手册：DDI0487H_a_a-profile_architecture_reference_manual.pdf ‍ 基本概念虚拟地址（VA，Virtual Address）：处理器上运行的操作系统、应用程序所能看到的地址空间。虚拟地址并不真实存在于计算机中。 物理地址（PA，Physical Address）：实际存储地址空间，如 DDR、Flash、SRAM 等实际存储数据的地方。 在处理器运行的过程中，需要将虚拟地址空间与物理地址空间进行转换，并对内存访问进行保护，即内存管理的主要工作。 虚拟地址通过映射转换为物理地址。虚拟地址和物理地址之间的映射存储在转换表（有时称为页表）。 使用虚拟地址的好处 使用虚拟地址的一个好处是，操作系统可以将零碎的物理地址空间拼接成连续的虚拟空间，供应用程序使用。连续的空间对于应用的运行而言当然是有好处的。 虚拟地址也有利于软件开发人员，他们在编写应用程序时不会也不需要知道系统的确切内存地址，由操作系统和硬件共同执行地址转换。 在实践中，每个应用程序都可以使用自己的一组虚拟地址，这些地址将映射到物理系统中的不同位置。当操作系统在不同的应用程序之间切换时，它会重新编程映射。 MMU 内存管理单元内存管理单元 Memory Management Unit (MMU) ， 负责将软件使用的虚拟地址转换为内存系统中使用的物理地址。 主要组成包含以下内容： table walk unit 单元，它包含从内存中读取转换表的逻辑。 Translation Lookaside Buffers (TLBs) ，用于缓存最近使用的转换内容。 软件发出的所有内存地址都是虚拟的。这些内存地址被传递到 MMU，MMU 会检查 TLB 中是否有最近使用的缓存转换。如果 MMU 找不到最近缓存的转换，则 table walk unit 将从内存中读取相应的 Table entry 表条目，如下所示： Table entry 表条目转换表的工作原理是将虚拟地址空间划分为大小相等的块，并在表中为每个块提供一个 Table entry 表条目。 表中的条目 entry 0 提供 page 0 的映射，entry 1 提供 page 1 的映射，依此类推。每个条目都包含相应物理内存块的地址以及访问物理地址时要使用的属性。 Table lookup 表查找进行转换时，将进行表查找。当转换发生时，软件发出的虚拟地址被一分为二，如下图所示： 该图所展示的是一个单级表查找示例。 下方软件的虚拟地址分为两截： upper-order bits 高位 bits 会告知，这是哪一个条目。基于该信息可以在 Translation Table 转换表中找到对应的 PA base 物理基地址以及内存属性。 lower-order bits 低位保有块偏移量信息，该信息并且不会因地址转换而发生任何改变。 最后将转换表中获得的物理基地址以及最开始就知晓的块偏移量相结合，得到最后的一个物理地址。 除了上述的单级查表之外，还有多级查表的形式（通常为 2 级）。第一个表（level 1 ）将虚拟地址空间划分为大块。此表中的每个条目都可以指向大小相等的物理内存块，也可以指向另一个将该块细分为更小块的表。我们将这种类型的表称为“多级表”。在这里，我们可以看到一个具有三个级别的多级表的示例： 在 Armv8-A 架构中，最大级别数为 4，级别编号为 0 到 3。这种多级方法允许描述较大的块和较小的块。大块和小块的特征如下： 与小块相比，大块需要转换的读取级别更少。此外，大块在 TLB 中缓存的效率更高。 小块使软件能够对内存分配进行精细控制。但是，小块在 TLB 中缓存的效率较低，因为小块需要多次读取关卡才能转换。 为了管理这种权衡，操作系统必须在使用大块映射的效率与使用小块映射的灵活性之间取得平衡，以获得最佳性能。 TLBTLB就是一个cache，俗称快表。 简单来讲，上面说了 MMU 会通过查表的方式将虚拟地址 VA 转化为物理地址 PA。但查表是要花时间的。一般来讲这个表是放在内存里，读内存是有比较大的代价的。 对于 CPU，通过给他添加 cache 来加快访问数据的速度。 Cache 存在的意义：根据局部性原理，对于当前访问的存储位置，接下来，它很可能会被多次访问（时间局部性），它的相邻位置也可能会被访问（空间局部性）。由于访问内存的速度远大于访问寄存器，所以在二者之间设置 cache，来暂存一部分指令或数据。 那么对于 MMU，TLB 就是它的 cache，用来加快查表的速度。 MMU 首先查询 TLB，发现有（hit），直接得到物理地址，在内存根据物理地址取数据。如果 TLB 没有这个虚拟地址（miss），那么就只能费力的通过页表来查找了。这个流程跟 cache 其实是一模一样的，当然，因为它本质就是一个 cache。 Address spaces 地址空间空间结构AArch64 中有几个独立的虚拟地址空间。下图显示了以下虚拟地址空间： 下图显示了三个虚拟地址空间： NS(Non-secure，不安全的) EL0 和 EL1。 NS.EL2。 EL3. EL，Exception levels 异常级别。 ELn 中，随着 n 的增加，软件的执行权限也相应的增加；EL0 被称为无特权执行；EL2 提供了对虚拟化的支持EL3 提供了安全状态切换功能（安全状态与非安装状态之间的切换） 由于存在多个虚拟地址空间，因此指定地址所在的地址空间非常重要。例如，NS。EL2：0x8000 是指非安全 EL2 虚拟地址空间中的地址 0x8000。 该图还显示，来自 NS.EL0 和 NS.EL1 的虚拟地址经过两组表（图中的 stage1 和 stage2）。这些表支持虚拟化，并允许 hypervisor 来管理虚拟机 （VM） 看到的物理地址空间。 在虚拟化中，我们将由操作系统控制的一组翻译称为第 1 阶段。阶段 1 表将虚拟地址转换为中间物理地址 （IPA）。在第 1 阶段，操作系统认为 IPA 是物理地址空间。但是，虚拟机管理程序控制第二组翻译，我们称之为阶段 2。第二组转换将 IPA 转换为物理地址。下图显示了两组翻译的工作原理： 官方文档这里的表述可能有点绕，补充一点个人理解： 之前我们讨论的是，操作系统或者应用程序的虚拟地址 VA 转换为物理地址 PA 对吧。 那么，如果此时还存在一个虚拟机（虚拟机可以理解为一种应用程序，该应用程序模拟了一台计算机），那么虚拟机这么一台计算机，是不是也会拥有一个“虚拟机的物理地址”，这就是中间物理地址 IPA。在虚拟机运行的应用程序，将“虚拟机的虚拟地址”转化为“虚拟机的物理地址”，这个“虚拟机的物理地址”，还需要再转化为“实体机的物理地址”，即 VA-&gt;IPA-&gt;PA 整个流程的意思。 空间大小 EL0/EL1 虚拟地址空间有两个区域：内核空间和应用程序空间。这两个区域显示在关系图的左侧，内核空间位于顶部，应用程序空间（标记为“用户空间”）位于地址空间的底部。内核空间和用户空间具有单独的转换表，这意味着它们的映射可以保持独立。 独立很重要，独立表明这两个东西不会相互影响。简单来说，当应用程序出现重大错误的时候，不会影响内核系统的运行，系统不会受到太大的影响。 空间标识符现代操作系统的应用程序似乎都从同一地址区域运行，这就是我们所描述的用户空间。在实践中，不同的应用程序需要不同的映射。这意味着，例如，VA 0x8000 的转换取决于当前正在运行的应用程序。 理想情况下，我们希望不同应用程序在TLB 中共存，在 Armv8-A 中，通过地址空间标识符 （ASID）来进行管理。 对于 EL0/EL1 虚拟地址空间，可以使用转换表条目的属性字段中的 nG 位将转换标记为全局 （G） 或非全局 （nG）。例如，内核映射是全局转换，而应用程序映射是非全局转换。全局翻译适用于当前正在运行的任何应用程序。非全局翻译仅适用于特定应用程序。 非全局映射在 TLB 中用 ASID 进行标记。在 TLB 查找中，会将 TLB 条目中的 ASID 与当前选定的 ASID 进行比较。如果它们不匹配，则不使用 TLB 条目。下图显示了内核空间中没有 ASID 标记的全局映射和用户空间中具有 ASID 标记的非全局映射： 小结本文仅仅是简要介绍了 MMU 和 TLB，对 MMU 的意义、组成有一定的了解就好。接下来再阅读 ARM 的架构书，补充一些 MMU 具体的内容。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"MMU","slug":"MMU","permalink":"https://rongyel.github.io/tags/MMU/"},{"name":"内存管理","slug":"内存管理","permalink":"https://rongyel.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"}],"author":"Rongye"},{"title":"ARM memory属性的理解","slug":"IC攻城狮的摸鱼小屋/技术笔记/ARM/ARM MEMORY属性","date":"2024-07-06T15:53:34.734Z","updated":"2024-07-14T03:22:22.410Z","comments":true,"path":"posts/2957f6bf.html","link":"","permalink":"https://rongyel.github.io/posts/2957f6bf.html","excerpt":"在看ARM的各种技术手册中，会多次看到对于memory属性的描述，诸如Cacheable、Allocate、Device nRnE等等。本文主要以CHI中的MemAttr、SnpAttr域段，展开对memory属性的学习。","text":"参考文献ARM各种Memory类型理解 - 知乎Cache知识整理-Read-Allocate/Write-Allocate_IC小牛牛的博客-CSDN博客_write allocateWrite-back，Write-through及write allocate_wenxiaohua_supper的博客-CSDN博客CHI到底是干嘛的 保证cache一致性 2.3 snoop_数字芯片设计与验证－－关易寿的博客-CSDN博客_cache一致性的 chi协议 CHI中对属性的描述memattr和snpattr，在CHI的协议层通道域段中，是有单独表述的。 MemAttr根据链接，可以看到memattr(memory attributes)，涵盖的是EWA(early write acknowledgement)，Device，cacheable和allocate这几个属性的信息。 EWA EWA主要是针对写事务响应的来源进行了指示，这部分内容主要与保序机制相关。 写事务完成与否，是需要给出反馈的，这里的early，涵盖的意思就是写完成响应能不能提前返回。什么叫提前返回呢，这里涉及到CHI总线的结构，当某个请求节点发出写事务，会经过中间节点，然后再发给实际进行写的节点，比如一个ddr memory。 那么，如果写完成响应，是在写数据实实在在的到达了ddr memory以后才发出，这就属于标准的完成响应。如果，在写事务从中间节点发出了， 不管有没有真的写到ddr memory，都算写事务完成了，然后中间节点直接返回了一个写完成响应，那么这就叫做提前返回。 EWA指示的就是，本次事务能不能提前返回写完成响应。 Device device属性是和normal memory相对应的概念。 Device，就是设备。表面这段memory空间是一个设备在使用的。这里简单理解就是，它不是一个单纯的存数据的memory空间。很多Device memory空间，里面放的是对这个设备进行控制的信息，比如是否使能这个设备。所以对于这种Device属性，会有很多特殊的要求，比如保序要求会更高。 normal memory就是我们普通概念的内存，如DDR。 Cacheable 顾名思义，就是可缓存性。 如果一个事务访问的memory空间是可缓存的，这代表该段内存的数据在cache中也有，本次事务可以先去看看cache里面数据是否有效，如果能直接从cache中把数据读走，那就最好了。因此访问cache的速度是远快于访问内存的。 Allocate关于allocate，需要展开说说Read-Allocate/Write-Allocate它指示的是在访问cache以后发生的行为。 假定现在进行读事务，访问cache miss了，如果是Read through，即直接从内存中读取数据；如果是Read allocate，则需要先把数据读取到Cache中，再从Cache中读数据。 如果是写事务，则不太一样，需要分为hit和miss的情况，hit的时候看的是Write through还是Write back。miss的时候看是否Write allocate。 假定现在进行写事务，访问cache hit了，如果是Write through，就把数据同时写到Cache和内存中；如果是Write back，则先只把数据写到Cache中，等到释放这个cache的时候，才把修改后的内容刷新到内存中。 写事务访问cache miss了，如果是Write allocate，就先把要写的数据载入到Cache中，等到释放这个cache的时候，才把修改后的内容刷新到内存中。 一般，Write Allocate与Write Back一起使用，No Write Allocate与Write Through一起使用。 SnpAttr这个属性域段就比较简单，与snoop行为相关这个东西倒是在CHI中才有，CHI协议全称是Coherent Hub Interface。重点就在这个coherent一致性上，该协议用来确保Cache的一致性。而Snoop就是CHI实现一致性维护的机制，这里就不展开说明了。 这个域段就是用来描述本次事务是否会进行snoop。 汇总这个表中还讲了下order，这里的保序是CHI中使用的，就不进一步展开了。看这个表，前面的多种属性描述，最终会汇总为一个Memory type属性。 AXI相关属性描述AxCACHE在AXI总线协议中，主要是在AxCACHE这个域段中对事务的memory属性进行了定义。这边会简单一点，因为没有一致性维护的工作。保序机制也不是通过这个属性域段实现的。可以看到，这边最后也是汇总描述为memory type，可以对比看一下上面那个表，它是非常接近的， 所以说，ARM整个架构中，对于memory属性的描述是有一套非常丰富的机制的，如果要将各种协议融汇贯通使用起来，对memory 属性的深入理解应该是必不可少的。 ARM架构手册相关描述关于memory属性最全面的描述，那当然还是在ARM架构手册中在B2.7这一个章节中，对所有的memory 属性表述都进行了说明内容实在是太多了，本文讲不完，以后再针对性的进行学习。","categories":[{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"MMU","slug":"MMU","permalink":"https://rongyel.github.io/tags/MMU/"}],"author":"Rongye"},{"title":"折腾HEXO的快乐","slug":"IC攻城狮的摸鱼小屋/工具套件/折腾HEXO的快乐","date":"2024-07-06T15:53:34.696Z","updated":"2024-07-07T14:17:07.678Z","comments":true,"path":"posts/92a0ec66.html","link":"","permalink":"https://rongyel.github.io/posts/92a0ec66.html","excerpt":"说实话，折腾这些笔记系统，博客系统，感觉像打游戏一样快乐。时隔多月再次捡起HEXO博客，重新搭建一番，并记录自己的搭建心得。","text":"解决一些HEXO环境错误 为了文章封面，换一个icarus主题这个主题没法直接用，看这个error 提示了用npm install后面一堆东西rongyel.top/atom.xml 这种错误是说需要给一个字符内容，在这个position后面，不能只是空格这样就正确了 换了新主题以后，会发现发布以后不能正常显示，只有纯文字。此时需要shift+f5强制刷新浏览器缓存，就可以看到界面啦 abbrlink处理SEO优化：Hexo-abbrlink插件生成永久固定链接 - 知乎固化链接，不会随文章名称修改而发生变化。 图片名称不显示由于粘贴图片到obsidian的时候，会将图片名称自动的链接显示，这种描述方式会在部署到hexo的时候，在icarus主题下是会将名称显示出来的。因为不会特意去重命名每一个图片，有些只是截图而已，所以名称很难看。该问题没有很好的解决办法，只能手动删除相关图片链接名称。 网站背景图片参考Hexo-icarus主题黑夜模式以及背景 - 也无风雨也无晴 因为最上面有一道白色的menu，不修改的话，背景最好是浅色的，这样比较和谐。 原创和本地预览不一致本地看页面是正常的，上传以后不正常了。布局不正常。搭建hexo，为什么预览和发布的不一样？ - 知乎很奇怪，写为具体的文件名就可以了 HEXO和Obsidian的配合如果将hexo整个环境丢到ob笔记目录下，会导致文件过多，加载变慢。 而且hexo文件的层次也很不适合，所以只将ob需要发布的文件夹软连接到_post目录下就好了。 首先在E盘新建一个文件夹 example，并在example文件夹内新建一个txt文件example.txt。然后在Windows10搜索框中输入cmd，选择以管理员模式打开。在命令行中输入mklink /d D:\\link E:\\example即可在D盘下生成一个指向E盘文件夹example的软连接link文件夹。 此时在hexo环境下进行部署的时候，是可以正确读取到ob路径下的笔记并生成网页的。 OP置顶功能hexo实现文章置顶功能 - 简书将node_modules/hexo-generator-index/lib/generator.js修改如下 1234567891011121314151617181920212223242526272829303132333435'use strict';const pagination = require('hexo-pagination');module.exports = function(locals) { const config = this.config; const posts = locals.posts.sort(config.index_generator.order_by); // posts.data.sort((a, b) =&gt; (b.sticky || 0) - (a.sticky || 0)); posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排}); const paginationDir = config.pagination_dir || 'page'; const path = config.index_generator.path || ''; return pagination(path, posts, { perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: { __index: true } });}; HEXO icarus主题的其他调整Hexo博客icarus主题定制篇-CSDN博客调整页面宽度，并且将主页和文章页面的布局调整。这个post本来是没有的，复制icarus的再做修改，有效。 备份主题_config.icarus.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429# Version of the configuration fileversion: 5.1.0# Icarus theme variant, can be \"default\" or \"cyberpunk\"variant: default# Path or URL to the website's logologo: /img/favicon.png# Page metadata configurationshead: # URL or path to the website's icon favicon: /img/favicon1.png # Web application manifests configuration # https://developer.mozilla.org/en-US/docs/Web/Manifest manifest: # Name of the web application (default to the site title) name: # The displayed name of the web application # when there is not enough space to display full name short_name: # The start URL of the web application start_url: https://RongyeL.github.io # The default theme color for the application theme_color: # A placeholder background color for the application page to display # before its stylesheet is loaded background_color: # The preferred display mode for the website display: standalone # Image files that can serve as application icons for different contexts icons: - # The path to the image file src: '' # A string containing space-separated image dimensions sizes: '' # A hint as to the media type of the image type: # Open Graph metadata # https://hexo.io/docs/helpers.html#open-graph open_graph: # Page title (og:title) (optional) # You should leave this blank for most of the time title: # Page type (og:type) (optional) # You should leave this blank for most of the time type: blog # Page URL (og:url) (optional) # You should leave this blank for most of the time url: # Page cover (og:image) (optional) # You should leave this blank for most of the time image: # Site name (og:site_name) (optional) # You should leave this blank for most of the time site_name: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page description (og:description) (optional) # You should leave this blank for most of the time description: # Twitter card type (twitter:card) twitter_card: # Twitter ID (twitter:creator) twitter_id: # Twitter Site (twitter:site) twitter_site: # Google+ profile link (deprecated) google_plus: # Facebook admin ID fb_admins: # Facebook App ID fb_app_id: # Structured data of the page # https://developers.google.com/search/docs/guides/intro-structured-data structured_data: # Page title (optional) # You should leave this blank for most of the time title: # Page description (optional) # You should leave this blank for most of the time description: # Page URL (optional) # You should leave this blank for most of the time url: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page publisher (optional) # You should leave this blank for most of the time publisher: # Page publisher logo (optional) # You should leave this blank for most of the time publisher_logo: # Page images (optional) # You should leave this blank for most of the time image: # Additional HTML meta tags in an array meta: # Meta tag specified in &lt;attribute&gt;=&lt;value&gt; style # E.g., name=theme-color;content=#123456 =&gt; &lt;meta name=\"theme-color\" content=\"#123456\"&gt; - '' # URL or path to the website's RSS atom.xml rss: # Page top navigation bar configurationsnavbar: # Navigation menu items menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # Links to be shown on the right of the navigation bar # links: # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Page footer configurationsfooter: # Copyright text copyright: © 2023 # Links to be shown on the right of the footer section links: # Creative Commons: # icon: fab fa-creative-commons # url: https://creativecommons.org/ # Attribution 4.0 International: # icon: fab fa-creative-commons-by # url: https://creativecommons.org/licenses/by/4.0/ # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Article related configurationsarticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # Show copy code button clipboard: true # Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\" fold: unfolded # Whether to show estimated article reading time readtime: true # Whether to show updated time. For \"auto\", shows article update time only when page.updated is set and it is different from page.date update_time: true # Article licensing block licenses: Creative Commons: icon: fab fa-creative-commons url: https://creativecommons.org/ Attribution: icon: fab fa-creative-commons-by url: https://creativecommons.org/licenses/by/4.0/ Noncommercial: icon: fab fa-creative-commons-nc url: https://creativecommons.org/licenses/by-nc/4.0/# Search plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search/search: type: insight # Whether to include pages in the search results index_pages: true# Comment plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment/# comment:# type: disqus# # Disqus shortname# shortname: ''# Donate plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Donation/# donates:# # \"Afdian.net\" donate button configurations# -# type: afdian# # URL to the \"Afdian.net\" personal page# url: ''# # Alipay donate button configurations# -# type: alipay# # Alipay qrcode image URL# qrcode: ''# # \"Buy me a coffee\" donate button configurations# -# type: buymeacoffee# # URL to the \"Buy me a coffee\" page# url: ''# # Patreon donate button configurations# -# type: patreon# # URL to the Patreon page# url: ''# # Paypal donate button configurations# -# type: paypal# # Paypal business ID or email address# business: ''# # Currency code# currency_code: USD# # Wechat donate button configurations# -# type: wechat# # Wechat qrcode image URL# qrcode: ''# Share plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share/# share:# type: sharethis# # URL to the ShareThis share plugin script# install_url: ''# Sidebar configurations.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # Left sidebar configurations left: # Whether the sidebar sticks to the top when page scrolls sticky: true # Right sidebar configurations right: # Whether the sidebar sticks to the top when page scrolls sticky: true# Sidebar widget configurations# http://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: # Table of contents widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: toc # Whether to show the index of each heading index: false # Whether to collapse sub-headings when they are out-of-view collapsed: true # Maximum level of headings to show (1-6) depth: 3 # Profile widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: profile # Author name author: Rong晔 # Author title author_title: 坚持摸鱼的IC攻城狮 # Author's current location location: Shenzhen, China # URL or path to the avatar image avatar: /img/avatar.jpg # Whether show the rounded avatar image avatar_rounded: false # Email address for the Gravatar gravatar: # URL or path for the follow button follow_link: https://space.bilibili.com/3280670 # Links to be shown on the bottom of the profile widget social_links: Github: icon: fab fa-github url: https://github.com/RongyeL # Facebook: # icon: fab fa-facebook # url: https://facebook.com # Twitter: # icon: fab fa-twitter # url: https://twitter.com # Dribbble: # icon: fab fa-dribbble # url: https://dribbble.com RSS: icon: fas fa-rss url: /atom.xml # Recommendation links widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: links # Names and URLs of the sites links: Hexo: https://hexo.io Bulma: https://bulma.io # Categories widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: categories # Tags widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: tags # How to order tags. For example 'name' to order by name in ascending order, and '-length' to order by number of posts in each tags in descending order order_by: name # Amount of tags to show. Will show all if not set. amount: # Whether to show tags count, i.e. number of posts in the tag. show_count: true # Recent posts widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: recent_posts # Archives widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: archives # Google FeedBurner email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: subscribe_email # Hint text under the email input description: # Feedburner ID feedburner_id: '' # Google AdSense unit configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: adsense # AdSense client ID client_id: '' # AdSense AD unit ID slot_id: '' # Follow.it email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: followit # Hint text under the email input description: # Subscription form action URL action_url: '' # Feed claiming verification code verification_code: ''# Plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/plugins: # Enable page startup animations animejs: true # Show the \"back to top\" button back_to_top: true # Baidu Analytics plugin settings # https://tongji.baidu.com baidu_analytics: # Baidu Analytics tracking ID tracking_id: # Bing Webmaster Tools plugin settings # https://www.bing.com/toolbox/webmaster/ bing_webmaster: # Bing Webmaster Tools tracking ID in the &lt;meta&gt; tag tracking_id: # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: true # CNZZ statistics # https://www.umeng.com/web cnzz: # CNZZ tracker id id: # CNZZ website id web_id: # Alerting users about the use of cookies # https://www.osano.com/cookieconsent/ cookie_consent: # The compliance type. Can be \"info\", \"opt-in\", or \"opt-out\" type: info # Theme of the popup. Can be \"block\", \"edgeless\", or \"classic\" theme: edgeless # Whether the popup should stay static regardless of the page scrolls static: false # Where on the screen the consent popup should display position: bottom-left # URL to your site's cookie policy policyLink: https://www.cookiesandyou.com/ # Enable the lightGallery and Justified Gallery plugins gallery: true # Google Analytics plugin settings # https://analytics.google.com google_analytics: # Google Analytics tracking ID tracking_id: # Hotjar user feedback plugin # https://www.hotjar.com/ hotjar: # Hotjar site id site_id: # Enable the KaTeX math typesetting support # https://katex.org/ katex: false # Enable the MathJax math typesetting support # https://www.mathjax.org/ mathjax: false # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated_browser: false # Show a progress bar at top of the page on page loading progressbar: true # Statcounter statistics # https://statcounter.com/ statcounter: # Statcounter project id project: # Statcounter project security code security: # Twitter conversion tracking plugin settings # https://business.twitter.com/en/help/campaign-measurement-and-analytics/conversion-tracking-for-websites.html twitter_conversion_tracking: # Twitter Pixel ID pixel_id: # CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL template of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL template of the webfont CDN provider fontcdn: google # Name or URL of the fontawesome icon font CDN provider iconcdn: fontawesome 备份主题_config.post.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426# Version of the configuration fileversion: 5.1.0# Icarus theme variant, can be \"default\" or \"cyberpunk\"variant: default# Path or URL to the website's logologo: /img/favicon.png# Page metadata configurationshead: # URL or path to the website's icon favicon: /img/favicon1.png # Web application manifests configuration # https://developer.mozilla.org/en-US/docs/Web/Manifest manifest: # Name of the web application (default to the site title) name: # The displayed name of the web application # when there is not enough space to display full name short_name: # The start URL of the web application start_url: https://RongyeL.github.io # The default theme color for the application theme_color: # A placeholder background color for the application page to display # before its stylesheet is loaded background_color: # The preferred display mode for the website display: standalone # Image files that can serve as application icons for different contexts icons: - # The path to the image file src: '' # A string containing space-separated image dimensions sizes: '' # A hint as to the media type of the image type: # Open Graph metadata # https://hexo.io/docs/helpers.html#open-graph open_graph: # Page title (og:title) (optional) # You should leave this blank for most of the time title: # Page type (og:type) (optional) # You should leave this blank for most of the time type: blog # Page URL (og:url) (optional) # You should leave this blank for most of the time url: # Page cover (og:image) (optional) # You should leave this blank for most of the time image: # Site name (og:site_name) (optional) # You should leave this blank for most of the time site_name: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page description (og:description) (optional) # You should leave this blank for most of the time description: # Twitter card type (twitter:card) twitter_card: # Twitter ID (twitter:creator) twitter_id: # Twitter Site (twitter:site) twitter_site: # Google+ profile link (deprecated) google_plus: # Facebook admin ID fb_admins: # Facebook App ID fb_app_id: # Structured data of the page # https://developers.google.com/search/docs/guides/intro-structured-data structured_data: # Page title (optional) # You should leave this blank for most of the time title: # Page description (optional) # You should leave this blank for most of the time description: # Page URL (optional) # You should leave this blank for most of the time url: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page publisher (optional) # You should leave this blank for most of the time publisher: # Page publisher logo (optional) # You should leave this blank for most of the time publisher_logo: # Page images (optional) # You should leave this blank for most of the time image: # Additional HTML meta tags in an array meta: # Meta tag specified in &lt;attribute&gt;=&lt;value&gt; style # E.g., name=theme-color;content=#123456 =&gt; &lt;meta name=\"theme-color\" content=\"#123456\"&gt; - '' # URL or path to the website's RSS atom.xml rss: # Page top navigation bar configurationsnavbar: # Navigation menu items menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # Links to be shown on the right of the navigation bar # links: # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Page footer configurationsfooter: # Copyright text copyright: © 2023 # Links to be shown on the right of the footer section links: # Creative Commons: # icon: fab fa-creative-commons # url: https://creativecommons.org/ # Attribution 4.0 International: # icon: fab fa-creative-commons-by # url: https://creativecommons.org/licenses/by/4.0/ # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Article related configurationsarticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # Show copy code button clipboard: true # Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\" fold: unfolded # Whether to show estimated article reading time readtime: true # Whether to show updated time. For \"auto\", shows article update time only when page.updated is set and it is different from page.date update_time: true # Article licensing block licenses: Creative Commons: icon: fab fa-creative-commons url: https://creativecommons.org/ Attribution: icon: fab fa-creative-commons-by url: https://creativecommons.org/licenses/by/4.0/ Noncommercial: icon: fab fa-creative-commons-nc url: https://creativecommons.org/licenses/by-nc/4.0/# Search plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search/search: type: insight # Whether to include pages in the search results index_pages: true# Comment plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment/# comment:# type: disqus# # Disqus shortname# shortname: ''# Donate plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Donation/# donates:# # \"Afdian.net\" donate button configurations# -# type: afdian# # URL to the \"Afdian.net\" personal page# url: ''# # Alipay donate button configurations# -# type: alipay# # Alipay qrcode image URL# qrcode: ''# # \"Buy me a coffee\" donate button configurations# -# type: buymeacoffee# # URL to the \"Buy me a coffee\" page# url: ''# # Patreon donate button configurations# -# type: patreon# # URL to the Patreon page# url: ''# # Paypal donate button configurations# -# type: paypal# # Paypal business ID or email address# business: ''# # Currency code# currency_code: USD# # Wechat donate button configurations# -# type: wechat# # Wechat qrcode image URL# qrcode: ''# Share plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share/# share:# type: sharethis# # URL to the ShareThis share plugin script# install_url: ''# Sidebar configurations.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # Left sidebar configurations left: # Whether the sidebar sticks to the top when page scrolls sticky: true # Right sidebar configurations right: # Whether the sidebar sticks to the top when page scrolls sticky: true# Sidebar widget configurations# http://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: # Table of contents widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: toc # Whether to show the index of each heading index: false # Whether to collapse sub-headings when they are out-of-view collapsed: true # Maximum level of headings to show (1-6) depth: 3 # Profile widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: profile # Author name author: Rong晔 # Author title author_title: 坚持摸鱼的IC攻城狮 # Author's current location location: Shenzhen, China # URL or path to the avatar image avatar: /img/avatar.jpg # Whether show the rounded avatar image avatar_rounded: false # Email address for the Gravatar gravatar: # URL or path for the follow button follow_link: https://space.bilibili.com/3280670 # Links to be shown on the bottom of the profile widget social_links: Github: icon: fab fa-github url: https://github.com/RongyeL # Facebook: # icon: fab fa-facebook # url: https://facebook.com # Twitter: # icon: fab fa-twitter # url: https://twitter.com # Dribbble: # icon: fab fa-dribbble # url: https://dribbble.com RSS: icon: fas fa-rss url: /atom.xml # Recommendation links widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: links # Names and URLs of the sites links: Hexo: https://hexo.io Bulma: https://bulma.io # Categories widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: categories # Tags widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: tags # How to order tags. For example 'name' to order by name in ascending order, and '-length' to order by number of posts in each tags in descending order order_by: name # Amount of tags to show. Will show all if not set. amount: # Whether to show tags count, i.e. number of posts in the tag. show_count: true # Recent posts widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: recent_posts # Archives widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: archives # Google FeedBurner email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: subscribe_email # Hint text under the email input description: # Feedburner ID feedburner_id: '' # Google AdSense unit configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: adsense # AdSense client ID client_id: '' # AdSense AD unit ID slot_id: '' # Follow.it email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: followit # Hint text under the email input description: # Subscription form action URL action_url: '' # Feed claiming verification code verification_code: ''# Plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/plugins: # Enable page startup animations animejs: true # Show the \"back to top\" button back_to_top: true # Baidu Analytics plugin settings # https://tongji.baidu.com baidu_analytics: # Baidu Analytics tracking ID tracking_id: # Bing Webmaster Tools plugin settings # https://www.bing.com/toolbox/webmaster/ bing_webmaster: # Bing Webmaster Tools tracking ID in the &lt;meta&gt; tag tracking_id: # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: true # CNZZ statistics # https://www.umeng.com/web cnzz: # CNZZ tracker id id: # CNZZ website id web_id: # Alerting users about the use of cookies # https://www.osano.com/cookieconsent/ cookie_consent: # The compliance type. Can be \"info\", \"opt-in\", or \"opt-out\" type: info # Theme of the popup. Can be \"block\", \"edgeless\", or \"classic\" theme: edgeless # Whether the popup should stay static regardless of the page scrolls static: false # Where on the screen the consent popup should display position: bottom-left # URL to your site's cookie policy policyLink: https://www.cookiesandyou.com/ # Enable the lightGallery and Justified Gallery plugins gallery: true # Google Analytics plugin settings # https://analytics.google.com google_analytics: # Google Analytics tracking ID tracking_id: # Hotjar user feedback plugin # https://www.hotjar.com/ hotjar: # Hotjar site id site_id: # Enable the KaTeX math typesetting support # https://katex.org/ katex: false # Enable the MathJax math typesetting support # https://www.mathjax.org/ mathjax: false # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated_browser: false # Show a progress bar at top of the page on page loading progressbar: true # Statcounter statistics # https://statcounter.com/ statcounter: # Statcounter project id project: # Statcounter project security code security: # Twitter conversion tracking plugin settings # https://business.twitter.com/en/help/campaign-measurement-and-analytics/conversion-tracking-for-websites.html twitter_conversion_tracking: # Twitter Pixel ID pixel_id: # CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL template of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL template of the webfont CDN provider fontcdn: google # Name or URL of the fontawesome icon font CDN provider iconcdn: fontawesome","categories":[{"name":"工具套件","slug":"工具套件","permalink":"https://rongyel.github.io/categories/%E5%B7%A5%E5%85%B7%E5%A5%97%E4%BB%B6/"}],"tags":[{"name":"HEXO","slug":"HEXO","permalink":"https://rongyel.github.io/tags/HEXO/"}],"author":"Rongye"},{"title":"再次挑战calibre安装","slug":"IC攻城狮的摸鱼小屋/工具套件/再次挑战calibre安装","date":"2024-07-06T15:53:34.681Z","updated":"2024-07-07T14:17:03.495Z","comments":true,"path":"posts/84c884af.html","link":"","permalink":"https://rongyel.github.io/posts/84c884af.html","excerpt":"重新挑战在群晖安装Calibre","text":"重新挑战在群晖安装Calibre How to Install Calibre on Your Synology NAS – Marius Hosting 现在有软路由翻墙后，用命令pull的速度快了很多很多成功了，401 Authorization Required可以访问了……真的太不容易啦 突然意识到搞错了，这个不是web版本……这个是客户端版重新pull一版 《树莓派防吃灰》第十六期：安装Calibre Web建立公网可访问私人电子书库 - 少数派参考这个，然后calibre-web的目录要重新建 最终终于搞成功了……真的挺不容易唉docker这边直接把存储空间config搞到web的路径下，因为导入数据还是要靠非web的客户端实现的。这样做，导入以后就可以直接在web里面看到了。 然后，书的同步还是只能靠任务命令来完成。 这个命令试了很久，终于可以了。首先，一定要确保文件名里面没有空格，否则cp命令会因为空格而断掉。无法正常使用。 这个命令可以将telabook下的所有文件，复制到这个import目录下。不再包含子目录。这样calibre才能够自动import新增加的书。 然后自己呢，还是可以正常的在talebook的路径下按文件夹来整理自己的书资源。所以搞定啦。 不过自动导入，可能会存在重复导入的情况，需要看看自动导入工作的实际结果 当前试了一下，没能看到calibre自动完成导入……不知道怎么才能触发导入的动作 好像成功了，已经在开始往里传了，刚才直接卡死了。感觉真不错 话说，群晖感觉快不行了……越来月卡了感觉 自动抓取目录下所有文件类型，然后复制到calibre的import目录，就会自动导入啦。不过这个过程会经常出现重复文件，还没有什么办法。只能手动取消一下","categories":[{"name":"工具套件","slug":"工具套件","permalink":"https://rongyel.github.io/categories/%E5%B7%A5%E5%85%B7%E5%A5%97%E4%BB%B6/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://rongyel.github.io/tags/%E5%B7%A5%E5%85%B7/"}],"author":"Rongye"},{"title":"为什么要用Markdown做笔记","slug":"IC攻城狮的摸鱼小屋/工具套件/为什么要用Markdown做笔记","date":"2024-07-06T15:53:34.664Z","updated":"2024-07-07T14:16:59.918Z","comments":true,"path":"posts/c97fc71d.html","link":"","permalink":"https://rongyel.github.io/posts/c97fc71d.html","excerpt":"markdown有个说法，叫做让人可以专注于笔记内容上。","text":"markdown是一种，简单文本格式，它的内容格式其实是固定的。对比最明显的就是word文档这种富文本。 正文的字号，字体，每一级标题的字号字体，文本的颜色，序列形式，表格格式，一切都是设定好的。当然，具体展现形式还是可以通过主题配置进行修改，但本质是固定的。可以看一下这个测试用例，一切都是有定数的。Markdown 测试用例 - GShang2021 - 博客园 如果尝试用过word做笔记，就肯定会遇到一些比较烦的情况。比如，复制网页内容的时候，还需要特意调整格式，缩进乱跑等情况。还有表格，有时候自动变化的表格会让人很抓狂。 而在markdown里，由于文本的格式是固定的，所以你复制进入的是正文，它就会自动使用正文的格式，保持文章格式的一致性。这样可以很轻松的写出好看的文章，保持一致性，看的非常舒服。 另外，md作为一种代码，它的信息量小，存储成本极低。甚至可以用git进行版本管理，非常有趣。当然，我一般也不会去进行版本管理，因为文章的内容一般是新增的。我也没有回退版本的需求。不过能托管到git仓上，对于数据的备份也是有极大帮助的。 另外一点，markdown作为一种代码格式，他是有自己的语法的。当你想加粗，注释，引用，增加序列的时候，通过输入的方式就可以完成。在熟练使用后，可以提升编辑的流畅感。不需要动鼠标，不需要按快捷键，虽然这样也很方便。 当然也有不方便的地方，那就是图片。如果能够使用一些方式进行同步的话，其实还是能够接受的，但如果想将内容输出为博客，传到网络上的话，可能需要研究一下图床才行。","categories":[{"name":"工具套件","slug":"工具套件","permalink":"https://rongyel.github.io/categories/%E5%B7%A5%E5%85%B7%E5%A5%97%E4%BB%B6/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://rongyel.github.io/tags/Markdown/"}],"author":"Rongye"},{"title":"Readwise文献剪藏有用吗","slug":"IC攻城狮的摸鱼小屋/工具套件/Readwise文献剪藏有用吗","date":"2024-07-06T15:53:34.653Z","updated":"2024-07-07T14:17:15.636Z","comments":true,"path":"posts/22e0203a.html","link":"","permalink":"https://rongyel.github.io/posts/22e0203a.html","excerpt":"Readwise Reader，构建笔记系统的最后一环，稍后读+剪藏+RSS。","text":"相遇不容易终于找到了！！！！我笔记系统的最后一环，稍后读+剪藏+RSS。 我试了好几个RSS阅读器，还是那个问题，我觉得好，想收藏的时候会很尴尬，没法流畅的剪藏到obsidian里面，只能很尴尬的发个链接过来。 终于发现了这个readwise，而且居然能用国内网直连更新！！！我去，为什么readly还有inoread都必须翻墙才能刷新数据无语了，这个就可以直连。 而且这个工具可以直接同步笔记到obsidian上，太完美了我只能说，真正的剪藏操作。就是价格有点贵，如果原价的话，要700r一年………………然后神奇的是，说中国可以申请发展中国家优惠…………我试了一下，光速神奇成功…………………………好吧，现在4美元1个月，我直接开了一年。 使用体验这个东西用起来体验可以说是非常完美了。整个工作流程是畅通的。首先在feed栏看RSS链更新的文章，瞅一眼标题，如果感兴趣，就拖拽一下改成later待读状态。 全部清干净以后，有空的时候再去later里读一读。 读的时候，如果发现没有价值直接删掉，如果有意思的段落，可以双击高亮。 全文读完以后选择归档achieve。 最后在打开obsidian的时候，就会自动同步，同步以后就可以看到高亮的内容啦，甚至还有原文高亮链接，点开以后可以网页端继续看全文。只能说体验逻辑非常流畅完整。 获取RSS链接的方式不太容易，终于要还是靠RSSHub，另外我也可以直接在inoreader直接搜索，然后复制它的rss链接。各种转 RSS 服务2023 年我的 RSS 订阅方式💬 Social Media | RSSHub","categories":[{"name":"工具套件","slug":"工具套件","permalink":"https://rongyel.github.io/categories/%E5%B7%A5%E5%85%B7%E5%A5%97%E4%BB%B6/"}],"tags":[{"name":"方法论","slug":"方法论","permalink":"https://rongyel.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"},{"name":"工具","slug":"工具","permalink":"https://rongyel.github.io/tags/%E5%B7%A5%E5%85%B7/"}],"author":"Rongye"},{"title":"markdown笔记工具分析","slug":"IC攻城狮的摸鱼小屋/工具套件/markdown笔记工具分析","date":"2024-07-06T15:53:34.627Z","updated":"2024-07-07T14:17:11.497Z","comments":true,"path":"posts/c1f4e46a.html","link":"","permalink":"https://rongyel.github.io/posts/c1f4e46a.html","excerpt":"记录一下自己使用其他笔记工具的感受。","text":"兜兜转转选择了使用obsidian作为自己的markdown笔记工具。记录一下自己使用其他笔记工具的感受。 typora能很好的完成markdown的编写工作，但缺少文件管理能力。没有标签页。没有其他功能。 思源支持markdown编辑，但数据格式其实是sy这样的私有格式。每一段都有链接能力，粒度太小，其实我用不上。加载速度较慢。导出markdown还算方便，可以整个笔记本导出。 语雀建议不要使用它进行编辑。只作为发布平台。真的，绑架用户是最垃圾的行为。导出便捷性极差，不能整个知识库导出。文章只能一篇一篇导出。我清楚的记得，早期的语雀是可以整个知识库一起导出的，而且导出的格式有很多种，包括word，pdf，markdown等等。我才放心使用的，没想到后面更新后把这些都嘎掉了。现在知识库导出只能导出私有格式，文章导出除了私有格式只有markdown，真的，很，讨厌你们这样的行为。 迁移成本高，说到底就是绑架用户，网页端体验不佳，切换页面加载很不舒服。不能离线使用。 obsidian比较全面的工具。官方同步功能价格昂贵，还好有remote save这样的插件可以实现同步功能，我个人结合OneDrive使用十分方便，移动端和PC端同步数据方便。数据就是markdown，备份方便。 缺点：在公司不敢用。 VSCODE+office view扩展不得已的选择，不过比typora文件管理方便一些。","categories":[{"name":"工具套件","slug":"工具套件","permalink":"https://rongyel.github.io/categories/%E5%B7%A5%E5%85%B7%E5%A5%97%E4%BB%B6/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://rongyel.github.io/tags/Markdown/"}],"author":"Rongye"},{"title":"艾尔登法环DLC 一周体验","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/游戏/艾尔登法环DLC 一周体验","date":"2024-07-06T15:53:34.594Z","updated":"2024-07-13T12:25:13.837Z","comments":true,"path":"posts/7c35c268.html","link":"","permalink":"https://rongyel.github.io/posts/7c35c268.html","excerpt":"DLC一上来，给了所有人一个下马威。","text":"DLC一上来，给了所有人一个下马威。 DLC刚开始风评有点差，但实际上有些说法还是不太正确的。喷的不对。 我依旧觉得幽影树很好玩，神作 先说结论， 探图乐趣高：解密感很强，很有趣。 探图奖励极差：很多时候捡到的都是垃圾。 BOSS战，部分体验不错：有些BOSS练着很有乐趣，如双月骑士、贝勒爷，比较有体验。全程双反手剑对决。有些真的难受，点名舞狮，多动，疯狗。 好看：指风景、建筑、怪物设计。顶级游戏艺术品。 觉老师说的好：闹得最凶的，其实就是法环本体里那些，本来比较硬核的玩家，或者说，原本是骨灰玩家，后来慢慢练成硬核玩家的群体。他们经过长期游玩以后，觉得自己在本体里面已经是横着走了，已经很懂法环了。结果在DLC里被猛搞，好家伙受不了了，觉得是游戏设计有问题。 其实这么一周下来已经很明显了，DLC里面提供了幽影树庇护这个新的强化，对于不同周目的玩家来说是好事，平衡了数值。只要收集一段时间，数值就不存在虐杀的情况了，这点我感受很深。 然后DLC里面有好多强力的武器和Build，只要开发几天，新轮椅立马就出现了。所以DLC的强度与它的装备是对的上的。难度不能说太高。 所以说，还是不要人云亦云 ，不要太快下定论。让子弹再飞一会，情况就会大不相同。 所以说，还是不要人云亦云 ，不要太快下定论。 DLC我每天探索一会，真的很开心。魂的快乐，我知道。 一些boss评析 火焰柳条人火焰柳条人，体验差。完全就是重复劳动，跳跃躲踩火，修脚处决。需要处决两次。秒杀的抓取技能。杀了就杀了，不想再见到。 最后提一嘴，火锅人这个东西，绝对的败笔，排泄物中的排泄物，大三下跳一下很好玩？一遍被火球洗脸一边投篮很好玩是吧？评价为宫崎英高小时候吃火锅的时候被火锅站起来踢了一脚热汤撒满脸。 狂龙贝勒目前刚打完龙娘支线，鏖战一小时后战胜贝勒爷。感觉非常非常棒，贝勒爷是真的太帅了，我最后有点舍不得杀掉他。招式华丽，霸气，还很猛。但大部分都不会秒人。动作大开大合，但是没有阴招，熟练后均可翻滚躲避。最后一把基本无伤，完全就是会打了然后打过了，正反馈非常强烈，心满意足。 与之相对的就是贝勒爷前面那条古龙，真的垃圾。太垃圾了，删了吧。所有招式多段伤害均可秒人。AOE范围大，还有不好理解的雷电扩散。呵呵。卡这条古龙比贝勒爷久多了。最后小心翼翼招大哥骑马一刀一刀砍死的。一个失误就秒杀，真的没什么体验感。 融泥骑士有点意思，快慢刀，神经刀一个不少。不过练了一个小时后可以纯翻滚躲所有技能了。现在在挑战用大刀过这个boss。说实话，大刀这武器性能感觉不太行，动作模组有一个很生硬的起手，导致出刀不流畅，还慢。战技找不到好用了，有点难受。 梅瑟莫大舅哥你太猛了………………反手刀打了两个小时，目前还没过，不过基本能进二阶段了。动作其实太挺合理的，但终究是多动症，基本上没有什么空挡……","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"游戏","slug":"游戏","permalink":"https://rongyel.github.io/tags/%E6%B8%B8%E6%88%8F/"}],"author":"Rongye"},{"title":"我的2022年度最佳游戏","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/游戏/我的2022年度最佳游戏","date":"2024-07-06T15:53:34.562Z","updated":"2024-07-14T03:28:25.504Z","comments":true,"path":"posts/da50a4f8.html","link":"","permalink":"https://rongyel.github.io/posts/da50a4f8.html","excerpt":"不出所料。。","text":"不出所料。。 任天堂switch 年度报告 怪猎是我选择的年度最佳，虽然它只是在今年出了曙光的DLC，但就算只是个DLC，我也投入的打了很久，怪猎真的是非常非常好玩啊，总游戏时长应该超过我的塞尔达了三年以上的游戏，其实都很少打开了。大乱斗还有认真打一打，动森是真的吃灰…… 2022年啥来着，这个不记得了，游玩时间最长吗？这三个游戏都是非常不错的，没有白玩。神界原罪2，怪猎曙光，和三角战略。 喷射战士2其实也是非常不错的今年，只是说我可能还是把大部分时间投入到那种长线游戏上了。喷喷也给我带来了许多快乐~ Playstation 年度报告 上来直接总结，本年PS5总游戏时长280个小时，玩了17个游戏最佳游戏，艾尔登法环112个小时，毫无悬念。老头环真的神作。 玩的最多的第一位老头和，不多说了 第二位，居然是这个破晓传说……我真的要气死，这个游戏后期完全就是靠着巨长的地图和强制战斗逼我……只能说我还算有耐心，把这个游戏打通了…… 第三位黎之轨迹，这个才是好的日式RPG。这个不多说了，最近刚刚通关，很不错，等过一段时间缓一缓，再玩黎轨2不看不知道，原来仁王2我已经玩了27个小时了感觉快通过了，估计30个小时通关吧。这游戏不错，虽然早期有点像魂，但终究是研究出了自己的一套系统，玩起来还挺爽的，现在武器技能多了，属性高了，推图也不怎么受苦了。 第五个完全就是误会，这个鬼武者其实是老弟玩的，我就不多说了。这游戏我看着就头晕…… 本年通关游戏 NS 空洞骑士 三角战略 马车，拿了全奖杯也算通关吧 神界原罪2 怪猎曙光，至少主线通关了 喷喷没有通关的说法，但也玩到一定水平了 异度神剑3，也有点折磨其实，但还是坚持通关了 小骨，至少简单难度通关了很多很多遍哈哈。 我突然发现这里还是少了游戏的，[[十三机兵防卫圈]]就少了，这里根本没有展示出来。不过好像也就少了这个，那还好。补充一下吧，这个也是通关了的。 PS艾尔登法环黎之轨迹破晓传说仁王2 双人成形其实也快要通关了，算是吧PS5这边玩的主要都是大作吼，数量比较少，但都比较费时间。 总结 我今年还不错，作为研究生毕业到工作过渡的一年，也玩了不少游戏，通关的游戏有好几个。希望工作后，明年还能享受游戏带来的乐趣。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"游戏","slug":"游戏","permalink":"https://rongyel.github.io/tags/%E6%B8%B8%E6%88%8F/"},{"name":"年度","slug":"年度","permalink":"https://rongyel.github.io/tags/%E5%B9%B4%E5%BA%A6/"}]},{"title":"养成游戏和肉鸽游戏的思考","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/游戏/养成游戏和肉鸽游戏的思考","date":"2024-07-06T15:53:34.557Z","updated":"2024-07-13T17:03:42.523Z","comments":true,"path":"posts/a9343b74.html","link":"","permalink":"https://rongyel.github.io/posts/a9343b74.html","excerpt":"养成类游戏的快乐，永远是初期。肉鸽类游戏，爽的时候很爽，不爽的时候很不爽。","text":"参考文献[1] 从《哈迪斯》出发介绍肉鸽游戏及设计思路 机核 GCORES 最近Steamdeck连着玩了两个游戏。 第一个是星露谷物语，顶级种田养成游戏，发育时间长，玩了游戏时长约60个小时，游戏进度到了第二年的夏天。 第二个是杀戮尖塔，顶级肉鸽卡牌游戏，平均一把时长在30~50分钟。目前三个职业都通关过一次。 简单讲下自己的一定感受，不谈具体游戏，只说这两个类型。养成类游戏的快乐，永远是初期。在初期，什么资源都很缺，很弱小，世界大片未探索空间的时候，玩起来是最快乐的。有很强的成长、探索的快感来驱动我玩下去，前期很容易玩很长时间也不类，因为一直有正反馈。 【塞尔达、艾尔达法环】但到了游戏的中后期就不太一样了。首先是新鲜感没有了，绝大多数游戏的后期，都只是前期内容的重复。这类游戏玩到后期肯定是要花不少时间的，根据游戏的体量，通常都要40~60个小时以上。什么都见过了，后期只可能有些关键的设施或者BOSS是比较新的，但就很少，无法再激起人的探索欲。其次就是进步反馈没有了，游戏后期那基本上就发展起来了。星露谷这种农村游戏，发育起来以后每天啥也不干也能收获不少钱，赚多赚少其实不重要了够用就行。战斗类的游戏后期人物属性装备也是够用了，通关完全没问题的时候就没啥兴趣再去成长了。所以养成类的游戏在后期都会过的比较快，像我玩游戏，到了后期可能就直接停下来了。隔了很久才把它通关，我好几个游戏都是这样了，什么塞尔达、2077、圣兽之王、巫师三。前期连着玩了五六十个小时，然后再结局章节突然停下来了，去玩别的游戏了。隔了小半年，回来开简单难度把游戏通关。也不是不行……但反正就是这么个现象。 肉鸽类游戏，爽的时候很爽，不爽的时候很不爽。这两点都是驱动玩家玩下去的点。肉鸽游戏节奏都很快，一把接一把，不需要长期的积累。【讲优点】【小骨勇者，玩了很久。明日方舟的肉鸽模式也是】但是肉鸽最让我痛苦的，就是失败的时候。说实话，肉鸽失败的原因常见的有两条。一是非，随机性导致你的策略完全无法施展。你拿到的卡就不成套，不成体系，你遇到的boss行动和你抽到的卡就是对不上，要防御给你攻击，要攻击给你防御，玩毛？二是失误，肉鸽说节奏快，但是通常打到最后一关那都是要40~60分钟的。最后几关难度极高，可能点错一张卡就是凉凉。这个时候没有任何办法，失败了就失败了，没通关等于白打一小时，这个时候感觉非常非常的浪费时间，很挫败。这也是我最近打杀戮尖塔最大的感受。肉鸽游戏通常是没有什么数值积累的，最多初期解锁一些属性，但后期高难度下都没什么进步空间了，就是拼一点运气和操作。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"兴趣档案","slug":"兴趣档案","permalink":"https://rongyel.github.io/tags/%E5%85%B4%E8%B6%A3%E6%A1%A3%E6%A1%88/"}],"author":"Rongye"},{"title":"Steamdeck Oled入手2个月体验","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/游戏/Steamdeck Oled入手2个月体验","date":"2024-07-06T15:53:34.553Z","updated":"2024-07-13T17:07:55.387Z","comments":true,"path":"posts/8cb2095e.html","link":"","permalink":"https://rongyel.github.io/posts/8cb2095e.html","excerpt":"Steamdeck Oled入手2个月体验结论就是物有所值。","text":"上手难度 steamdeck的可玩性确实高，各种插件，各种安装命令。完全就是一个小系统。 就是有点费神，还有一些hosts文件带来的网络问题，都折腾了很久……我搞了几个小时一个游戏都还没玩呢…… 握持手感非常棒。整体很宽，虽然比较重，但是实际握持的时候手感很好。实际测试过，就我个人而言，坐地铁1小时，全程站立的情况下握持使用无问题。当然如果有座位坐着那还是更舒服的。各个按键都比较有质感，感觉oled版本的提升确实很大。 游戏体验星露谷物语导致我工作日中午不午睡的罪魁祸首。我大概有2个星期中午没午睡，跑去食堂玩星露谷。。。。。要了亲命。星露谷这样的游戏在STEAMDECK掌机玩真的是，最完美的选择。steamdeck比起switch还可以打mod，体验上升N个级别。 吸血鬼幸存者女神异闻录5皇家版结语","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"},{"name":"游戏","slug":"游戏","permalink":"https://rongyel.github.io/tags/%E6%B8%B8%E6%88%8F/"}],"author":"Rongye"},{"title":"富士X-T5，与生活","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/摄影/富士X-T5，与生活","date":"2024-07-06T15:53:34.497Z","updated":"2024-07-13T17:10:04.721Z","comments":true,"path":"posts/3184bfcd.html","link":"","permalink":"https://rongyel.github.io/posts/3184bfcd.html","excerpt":"富士xt5，在2022年11月首发购买，陪伴至今，记录我生活的所需所想。","text":"富士xt5，在2022年11月首发购买，陪伴至今，记录我生活的所需所想。 截止今日，我总共拥有过两台相机，一台是富士x100f，在2020年买的一台二手机。另一台就是富士xt5，在2022年11月首发购买，陪伴至今，记录我生活的所需所想。 富士是个很有趣的牌子。都说“底大一级压死人”，当其他品牌纷纷发力全画幅时，富士却只有中画幅和apsc两个产品线。要么特别大，要么比较小。apsc也是被笑称残幅，然而富士却以一种all in的气势，投入到apsc的产品开发中，至今已经推出了n款产品。 另外，富士的胶片色彩美学，也是比较为人称道的。富士作为曾经的胶片大场，积累了多年的色彩数据。根据历史积累，将胶片滤镜添加到了机身内部，可以直出获得后期才能拥有的色彩效果。这一点真的广受好评。虽然有很多专业人士肯定是不太在乎这个的，但对于大多数普通人来说，去研究照片调色根本是不可能的事情，能够直接拍出好看的照片，才有使用相机的意义。 我与x100f其实并没有那么长久的故事，毕竟我第一次真正拥有一台相机，还是在2022年，读研究生的时候。 在此之前，我都是用的手机拍照，mate20pro。在某次看了同学相机的照片，与自己手机照片进行对比后，明显感觉到相机拍出来的真的更好看，更真实。因此萌生了购置一台相机的想法。 于是，在某位学弟的蛊惑下，我买了一台二手x100f，旁轴相机。买下来的最大理由，可能就是好看吧。作为一名理工男，真的特别喜欢这种充满工业机械气息的数码产品。然后也看过许多富士的测评，胶片滤镜也是打动我的一点，因为我也没那么多时间投入在后期修照片上，这一点后续也证明了这个考量的正确性，并直接影响到下一台相机还是富士。 富士x100f是台不可更换镜头的35mm定焦相机，而且是一台老机子了，换代产品xf100v有不少提升。但价格当然是我第一考虑要素，更好的图像处理器，更好的屏幕，更好看的滤镜，这些都含泪放弃了 相机不可更换镜头，我也少花一笔钱，多好。当时我也是抱着试试水的心态，初步涉足摄影领域，希望它能带来一些不一样的乐趣。而它，也完全没有辜负我的期待。 x100f记录了我每一次出行，为给老婆拍了很多美美的照片，能让她满意，可以说是最大的肯定哈哈。 拍照也给我带来了快乐，将生活中见到的好看的，有趣的，值得纪念的东西记录下来，真的很有趣。 因此，我的第一台相机可以说是成功的。但在长时间使用后，还是会逐渐感受到它的不足。 有比较关键的几个问题，不可更换的定焦镜头，使得创作空间受到了一些限制。100f是35mm的镜头，这个焦段被称为最适合人文摄影的镜头，因为它是最接近人眼的焦段。我当时想的也是，主要给妹子拍拍照，用这个刚好。那问题也很清晰，就是如果不拍人文的话，就没那么方便了。没有长焦，就拍不远，就很难拍动物。猫狗鸟这样的动物，你只要稍微靠的近一点它就跑了，所以非常难拍。而且100f的分辨率也不大，远距离拍了再裁切，画面损失的非常明显。 没有短焦，就拍不近。想拍摄食物，模型之类的东西，很难对上焦，由于图像传感器的问题，还存在圣光之类的蜜汁问题。机身屏幕比较差，很多时候都会感觉屏幕里不好看，返到 所以，想要给相机更新一下的这个想法已经存在很久了。当时看了很多相机的评测，最后还是决定继续呆在富士这个舒适圈中，看中了那个xs10，是台性价比极高的相机。然而它的溢价实在是太高了，它的官方价是7000，我写这篇文章的时候看了一眼，现在居然溢价到10000了都，这太离谱了……而且买东西最好不要买第一代，所以我一直在等xs20，到时买个首发好了。没想到一等等到现在，xs10没出，xt5出了。 摄像旗舰x-t5xt5一直以来都是富士的旗舰产品线，之前我也看过很多xt4的视频，很心动，但真的舍不得花上万块钱。 现在工作以后，心动变成了一种咬咬牙就能够到的现实。要买就买最好，买完多用几年一直是我的购物哲学，所以虽然xt5真的很贵，但感觉它真的很好很适合我，而且，它真的很帅所以我直接抢首发预定了1680套机。 机身更大更扎实，可更换镜头，更丰富的胶片滤镜，更高分辨率的传感器，更好的相机屏幕。xt5全面弥补了之前X100F落后的地方，给我带来了更佳的拍摄体验。心满意足。 当然，东西虽然变好了，但摄影技术暂时没有特别大的提高。还是要多用用，提高自己的技术上限，才能挥发更多装备的能力。 隔了大半年，继续补充一下X-T5的使用体验吧。 首先，4000w像素的传感器确实非常不错，这给我的构图带来了很大很大的帮助。使用定焦镜头的时候，有时没法捕捉某个距离，但是只要稳定的拍一张，回家再裁切一下，还是能获得满意的构图。甚至是意外之喜。 其次，胶片滤镜还是非常方便，最常使用的就是CC滤镜。直出就可以非常的好看了。不过最近尝试了一下自己机身调色，在CC的基础上进一步调整白平衡，色彩偏移，拍出来的效果更好了。直接暴打原本的CC。今后还是要在现场，根据当时的摄影条件，做一下机内调整，这样直出得到的照片就已经很完美了，甚至后期用电脑调RAF格式还调不出那种感觉。。 最近换了一颗新的定焦镜头XT35F1.4是老镜头了，3500入的……镜头真的是好贵啊，还好使用起来效果很棒，还是打出了它的身价小巧、大光圈，用起来真舒服","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://rongyel.github.io/tags/%E6%91%84%E5%BD%B1/"}],"author":"Rongye"},{"title":"我家小鳄龟の生长日记","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/宠物/我家小鳄龟の生长日记","date":"2024-07-06T15:53:34.468Z","updated":"2024-07-13T15:40:23.856Z","comments":true,"path":"posts/fe1733b9.html","link":"","permalink":"https://rongyel.github.io/posts/fe1733b9.html","excerpt":"现在背甲已经长到10cm了，厉害。","text":"20240628舒适的龟想送它去读书。现在背甲已经长到10cm了，厉害。 20240515龟龟别墅到了……卧槽这也太大了。说实话，有点小后悔？我的小屋子不精致了。。。不过看龟龟在里面可以大幅度移动了，感觉它有点开心，我也就开心了缸的大小差距这么大。。。![[IMG_20240514_235208.jpg]]![[XHS_XHS_1715695634865_9e641fc0-2904-4b27-b9f1-96f2dbbc93d601715695744505.jpg]] 20240122看了下订单，买的是3-4cm，没有实际量过。 20240206很难受……第一次喂鸡胸肉干，泡了水以后很大一块。龟龟还是猛的吞了，感觉一下就哽住了。 然后明显感觉一整晚都没有精神。趴在哪里，虽然还能活动，但感觉还是不太舒服。 唉。好后悔。以后一定要掰成小块再喂，现在好担心它。难受 20240227一口气买了红霉素，碘伏。抓出来涂了个遍放在外面干养的时候顺便把缸水换了一下 这次不敢放太深的水了，之前为了除油膜加水太深了。水位到龟龟趴着也能伸头到水面呼吸才行。![[IMG_20240227_203807.jpg]] 20240305养了一个半月现在已经对我的手指完全没有反应了，随便撸撸都没事量了一下背甲6cm 20240331这次量了一下，背甲7cm长势不错，开心~拍了照片 20240414背甲已经8cm了……厉害啊长得真快 20240426今天发现龟龟没活力，没食欲。观察了一下，发现都轻微浮起来了，应该是消化不好。原因估计是昨天，新买的鸡胸肉，买成冷冻的了，这个不好。昨天切的时候就在想怎么这么油。气，重买冷鲜的才行，对不起鳄鳄 20240505回到家第一时间看龟龟还好，没有爬出来，没有死掉……下次准备要重复一点，加个网格封顶，这样透气。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"宠物","slug":"宠物","permalink":"https://rongyel.github.io/tags/%E5%AE%A0%E7%89%A9/"}],"author":"Rongye"},{"title":"香格里拉边境 为什么让我兴奋","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/动漫/香格里拉边境 为什么让我兴奋","date":"2024-07-06T15:53:34.428Z","updated":"2024-08-11T07:47:27.171Z","comments":true,"path":"posts/3b1a7464.html","permalink":"https://rongyel.github.io/posts/3b1a7464.html","excerpt":"香格里拉边界荣升我十月最期待新番，着实拿捏了我对于虚拟网游的幻想，就像当年的刀剑一样。","text":"游戏，是我生活的一个重要旋律。从小学一年级开始，我就在楼上大哥哥的指导下，玩上了冒险岛这个网游，至今我都偶尔会上线玩一玩。当然，国内游戏环境实在太差了……这就是另外的话题了暂且跳过。 总之，网游这个东西我玩了很多年了，特别是角色扮演游戏MMO，在网络中，扮演一个非现实的角色和其他玩家一起冒险，打怪，看NPC的故事，会给我带来极大的快乐~ 冒险岛、龙之谷、剑灵、最终幻想14、激战2、魔兽世界、艾尔之光、彩虹岛、黑色沙漠……人生二十来年，也是辗转过多个异世界了呢。 所以游戏类的网文，也一直都是我的心头好。经典的《网游之纵横天下》、《网游之贼行天下》、《全职高手》、《网游之近战法师》、《惊悚乐园》……一个游戏网络世界，可能就是最对我胃口的世界设定。这几本书我都重看了不知道多少遍了…… 那么在动漫里，相关的也不少了其实。尤其是在《刀剑神域》的带领下，虚拟现实游戏类的动漫漫画轻小说作品那是层出不穷，《OVERLORD》至今还是我最喜欢的动漫/轻小说之一。 就是要这种大型角色扮演！MMO的网游！丰富的世界观，精细的职业技能，精彩的剧情，广阔的探险空间~太对我胃口了。而《香格里拉边境》，就是我时隔多年看到的新的网游动漫。 香格里拉的冒险动漫全称：香格里拉边境～粪作猎人向神作游戏发起挑战～男主是一个「粪作猎人」，喜欢玩各种粪作游戏，挑战不合理还能得到极大的快感。在通关了某部粪作后，为了换换口味，男主这次向神作「香格里拉边境」发起了进攻，在游戏的过程中，遇见了许多奇特的冒险。 撰写本文的时候已经看到第四集了，真的一跃成为我最期待的2023年10月新番。 男主是那种操作类玩家，追求极致的输出，脆皮，刀尖添血的那种。动漫也很好的制作出了精彩的打斗，使用完美格挡和巨型boss鏖战的打戏可谓是前三集的巅峰剧情。剧情中出现的boss也很有魄力，其他玩家角色绘制的也很好看，最重要的是，那种游戏氛围塑造的特别好。角色加点的分析、装备的选择、独特剧情的展开，看的我是真的过瘾！还有这只兔兔，太可爱了~ 看游戏题材的动漫和小说，其实也就是想通过“玩”以外的方式，享受到游戏的乐趣，而《香格里拉边境》它做到了。 该动漫其实是有原作漫画的，在日本旅游的时候刚好看到过它的超大海报，可见其原作实力充足，我觉得动漫是真的可以好好期待下去，期待下周的播出。","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"动漫","slug":"动漫","permalink":"https://rongyel.github.io/tags/%E5%8A%A8%E6%BC%AB/"},{"name":"游戏","slug":"游戏","permalink":"https://rongyel.github.io/tags/%E6%B8%B8%E6%88%8F/"}],"author":"Rongye"},{"title":"至今为止我依旧认为，无职转生就是最好的异世界转生作品。","slug":"IC攻城狮的摸鱼小屋/兴趣杂谈/动漫/至今为止我依旧认为，无职转生就是最好的异世界转生作品。","date":"2024-07-06T15:53:34.399Z","updated":"2024-08-08T17:35:35.157Z","comments":true,"path":"posts/1da22451.html","link":"","permalink":"https://rongyel.github.io/posts/1da22451.html","excerpt":"鲁迪的人生旅程，就是无职的故事。","text":"鲁迪的人生旅程，就是无职的故事。 绝大多数的异世界动漫，不过是寻找了一个舞台，一个剑与魔法的西幻舞台，讲述一段快乐的故事。而无职转生才是真正的”现实太失败、太痛苦。幸运的是，身亡后意外穿越异世界，这一次我要好好重新过自己的人生。“的异世界转身题材作品。 认真的对待生死 父亲为了救自己，死了。母亲解救出来，但是痴呆了。普通的作品，哪里会去认真刻画这些，还刻画的那么动人，那么的撕心裂肺。画面中无声的沉寂，死寂，看的我心一抽一抽的。也很难受。鲁迪再次陷入了绝望，虽然鲁迪从某种意义上讲，不是他们真正的孩子。但毫无疑问，保罗和赛妮丝是鲁迪的父母。本集标题《双亲》，更是无声地点名了联系。很多异世界穿越的作品，对双亲的刻画几乎没有，可以说就是工具人。无职不仅有，还描述的很不错。 至第二季结束，父亲保罗的刻画毫无疑问，已经准确且完善了。接下来也不再有他的故事，已经化为一抔尘土。 而母亲赛妮丝，其实除了第一季开头一段外，描述的也不是那么丰富。但是看过小说的我知道，后面的剧情中，赛妮丝虽然痴呆了，但那种亲人间的情感一直存在，刻画的其实很生动，敬请期待后续剧情的发展。 认真的对待感情 第二季第24话，鲁迪背负着父亲的死、洛琪希的爱回到了自己的家，回来见自己的妻子、妹妹们。 他认真的传递了悲伤，认真的向着自己的爱人交代、恳求同意取洛琪希为妻。他是真的成长了，没有回避现实的残酷和尴尬，而是背负着这一切，面对他们，好好的向前生活着。 事情很顺利（这里我就忽略妹妹的情绪），希露菲第一时间就接受了洛琪希。虽然从现代人的眼光来看，这是开后宫，是一夫多妻，是应该被批判。后面还有爱丽丝呢，到时候就是三个老婆了，值得批判！但我一直认为在这种异世界、中世纪风的剑与魔法世界，完全没有必要把现代人的制度强加上去。我看这类作品，批不批判这个后宫，只看这段感情讲的怎么样。如果是那种龙傲天题材，收后宫那哪里有什么感情基础，只要男主有实力，自动会有一对妹子贴上来。而无职转生不一样，我认为鲁迪娶三个老婆，是因为他真的有三段真挚的爱情。且鲁迪为了她们都是付出了性命去珍惜的。 他值得这份爱，这是我的观点。 认真的，在这个世界活着 很多很多的异世界作品，我觉得看的很轻松的原因就是，他们根本就是来玩的。他们只是把异世界当作一个游戏去看待。当然，由于很多异世界作品就是看个爽，什么系统一大堆，这能不让人觉得是游戏才怪咧。 而无职，鲁迪，是真的来到了这个世界。但他真正在这个世界活着，其实是第二季最后一集了。在这一集中，他的第一个孩子，出生了。自己的血肉降生在世上的那一刻，他才真正与这个世界有了强烈的联系。他是切切实实的，是这个世界的人了。 另外就是，鲁迪在保罗墓前喝酒说的话，以及这一话的标题《继承》。鲁迪不再带着前世的记忆，用看陌生人的眼光，看待这个世界了。他真正的，会努力，在这个世界活得更好。珍惜一起他应该珍惜的失误 后面这段风吹动了鲁迪，仿佛保罗在身后拍了拍他的肩膀，说“那就都交给你了” 何时我才能看到转折点四 第三季也已经宣布制作，很开心~期待","categories":[{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"动漫","slug":"动漫","permalink":"https://rongyel.github.io/tags/%E5%8A%A8%E6%BC%AB/"}],"author":"Rongye"}],"categories":[{"name":"方法学论","slug":"方法学论","permalink":"https://rongyel.github.io/categories/%E6%96%B9%E6%B3%95%E5%AD%A6%E8%AE%BA/"},{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/categories/%E6%95%B0%E7%A0%81/"},{"name":"兴趣杂谈","slug":"兴趣杂谈","permalink":"https://rongyel.github.io/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"},{"name":"解决方案","slug":"解决方案","permalink":"https://rongyel.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"name":"摄影","slug":"摄影","permalink":"https://rongyel.github.io/categories/%E6%91%84%E5%BD%B1/"},{"name":"HISOC","slug":"HISOC","permalink":"https://rongyel.github.io/categories/HISOC/"},{"name":"技术笔记","slug":"技术笔记","permalink":"https://rongyel.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"},{"name":"工具套件","slug":"工具套件","permalink":"https://rongyel.github.io/categories/%E5%B7%A5%E5%85%B7%E5%A5%97%E4%BB%B6/"}],"tags":[{"name":"方法论","slug":"方法论","permalink":"https://rongyel.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"},{"name":"数码","slug":"数码","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E7%A0%81/"},{"name":"三星","slug":"三星","permalink":"https://rongyel.github.io/tags/%E4%B8%89%E6%98%9F/"},{"name":"手机","slug":"手机","permalink":"https://rongyel.github.io/tags/%E6%89%8B%E6%9C%BA/"},{"name":"动漫","slug":"动漫","permalink":"https://rongyel.github.io/tags/%E5%8A%A8%E6%BC%AB/"},{"name":"NAS","slug":"NAS","permalink":"https://rongyel.github.io/tags/NAS/"},{"name":"群晖","slug":"群晖","permalink":"https://rongyel.github.io/tags/%E7%BE%A4%E6%99%96/"},{"name":"游戏","slug":"游戏","permalink":"https://rongyel.github.io/tags/%E6%B8%B8%E6%88%8F/"},{"name":"数字IC","slug":"数字IC","permalink":"https://rongyel.github.io/tags/%E6%95%B0%E5%AD%97IC/"},{"name":"HISOC","slug":"HISOC","permalink":"https://rongyel.github.io/tags/HISOC/"},{"name":"宠物","slug":"宠物","permalink":"https://rongyel.github.io/tags/%E5%AE%A0%E7%89%A9/"},{"name":"HEXO","slug":"HEXO","permalink":"https://rongyel.github.io/tags/HEXO/"},{"name":"Python","slug":"Python","permalink":"https://rongyel.github.io/tags/Python/"},{"name":"Verilog","slug":"Verilog","permalink":"https://rongyel.github.io/tags/Verilog/"},{"name":"工具","slug":"工具","permalink":"https://rongyel.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"ARM","slug":"ARM","permalink":"https://rongyel.github.io/tags/ARM/"},{"name":"内存管理","slug":"内存管理","permalink":"https://rongyel.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"},{"name":"电影","slug":"电影","permalink":"https://rongyel.github.io/tags/%E7%94%B5%E5%BD%B1/"},{"name":"高达","slug":"高达","permalink":"https://rongyel.github.io/tags/%E9%AB%98%E8%BE%BE/"},{"name":"Obsidian","slug":"Obsidian","permalink":"https://rongyel.github.io/tags/Obsidian/"},{"name":"GVim","slug":"GVim","permalink":"https://rongyel.github.io/tags/GVim/"},{"name":"WINDOWS","slug":"WINDOWS","permalink":"https://rongyel.github.io/tags/WINDOWS/"},{"name":"手绘","slug":"手绘","permalink":"https://rongyel.github.io/tags/%E6%89%8B%E7%BB%98/"},{"name":"华为","slug":"华为","permalink":"https://rongyel.github.io/tags/%E5%8D%8E%E4%B8%BA/"},{"name":"摄影","slug":"摄影","permalink":"https://rongyel.github.io/tags/%E6%91%84%E5%BD%B1/"},{"name":"手工","slug":"手工","permalink":"https://rongyel.github.io/tags/%E6%89%8B%E5%B7%A5/"},{"name":"Linux","slug":"Linux","permalink":"https://rongyel.github.io/tags/Linux/"},{"name":"CHI","slug":"CHI","permalink":"https://rongyel.github.io/tags/CHI/"},{"name":"AMBA","slug":"AMBA","permalink":"https://rongyel.github.io/tags/AMBA/"},{"name":"AXI","slug":"AXI","permalink":"https://rongyel.github.io/tags/AXI/"},{"name":"页表","slug":"页表","permalink":"https://rongyel.github.io/tags/%E9%A1%B5%E8%A1%A8/"},{"name":"中断","slug":"中断","permalink":"https://rongyel.github.io/tags/%E4%B8%AD%E6%96%AD/"},{"name":"MMU","slug":"MMU","permalink":"https://rongyel.github.io/tags/MMU/"},{"name":"Markdown","slug":"Markdown","permalink":"https://rongyel.github.io/tags/Markdown/"},{"name":"年度","slug":"年度","permalink":"https://rongyel.github.io/tags/%E5%B9%B4%E5%BA%A6/"},{"name":"兴趣档案","slug":"兴趣档案","permalink":"https://rongyel.github.io/tags/%E5%85%B4%E8%B6%A3%E6%A1%A3%E6%A1%88/"}]}