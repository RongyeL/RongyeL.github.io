{"posts":[{"title":"EASY_AXI：一个简单的例程，掌握AXI基本事务流程","text":"相关文件 文件名 说明 easy_axi.v 顶层文件 easy_axi_tb.v 测试文件testbench m_axi.v axi master，事务发起者 s_axi.v axi slave，事务接收者 easy_axi.gtkw gtkwave波形配置 Makefile 执行脚本 GitHub - RongyeL/easy_axi: Learn the basics of AXI against the code and protocol 操作步骤 确保开发环境，安装iverilog和gtkwave。 终端下输入命令make 运行后会自动打开gtkwave file-&gt;read save file，选择.gtkw文件，加载已调整好的波形配置。 可以直接看到当前设计案例的波形结果 代码说明easy_axi_tb.v按顺序执行所配置的事务。当前无法在上一个事务结束前执行下一个事务，因此需要设置时间间隔。必须先进行写事务，否则读出来的结果为x，因此slave的存储空间未进行初始化。","link":"/posts/35eaf17c.html"},{"title":"AXI协议学习笔记","text":"ARM官方手册：AMBA AXI and ACE Protocol Specification 全景图 什么是AXI AXI（Advance eXtensible interface）是一种总线协议，该协议是ARM公司提出的AMBA(Advanced Micocontroller Bus Architecture)协议中重要部分，是一种面向高性能、高带宽、低延迟的片内总线。当前，SoC中绝大多数对性能有需求的模块都会使用到AXI。 为什么要选择AXI AXI的性能只是一个方面的原因，另外一个重要因素其实是市场环境。 所拥有的IPs总线协议 所涉及的处理器总线协议。 总线的应用率，市场占有率。 总线的性能。 兼容性。 AXI总线协议是当前市场上能满足上述因素的一个强大协议，所以身为IC工程师，对AXI的掌握可以说是必须的。 AXI和AHB的区别 参考文献：AMBA AHB协议和AXI协议有什么区别？ - 极术社区 - 连接开发者与智能计算生态 AXI的架构 传输通道AXI具有五个数据通道，各通道之间是并行的，相当于独立的五条总线。每条通道都具有固定的方向。 读操作包括AR读地址（命令）和R读数据通道，写操作包括AW写地址（命令）、W写数据、B写响应通道。 AR/AW不仅仅包含地址信息，还包含控制，所以应该视为命令通道。 读数据通道传输数据和读应答，读应答指示每拍数据的状况。写数据通道和写应答通道分离，写应答指示每burst数据的状况。 由于AXI各通道都是单向传输的，且各通道之间相位分离，没有复杂的时序握手关系。这种特性使得各通道可以随意插入任意级数寄存器（stage），即打拍，来保证时序收敛。 写响应通道独立的原因核心原因：写响应数据流向和写数据数据流向是相反的。 互联结构 AXI协议严格来讲是一个点对点的主从接口协议，当多个外设需要互联时，需要加入一个AXI Interconnect模块，也就是AXI互联矩阵，作用是提供一个或多个AXI主设备连接到一个或多个AXI从设备时得一种交换机制。 AXI端口信息 GLOBE全局信号 Signal Source Description ACLK 系统时钟 系统时钟信号，上升沿触发 ARESETn 系统复位 系统复位信号，低有效 AXI写/读地址通道（命令通道） Signal Source Description AxID Master 传输地址ID，用于标识；相同ID需进行保序 AxADDR Master 传输地址，该地址给出了突发事务中第一次传输的地址 AxLEN Master 突发传输长度；实际长度=AxLEN+1 AxSIZE Master 传输数据的size，单位为byte。 0-&gt;1bytes; 1-&gt;2byte; 2-&gt;4bytes; 3-&gt;8bytes; 4-&gt;16bytes; 5-&gt;32bytes;6-&gt;64bytes;7-&gt;128bytes AxBURST Master Burst传输的模式： FIXED固定模式（00）；INCR增量模式（01）；WRAP卷绕模式（10） AxLOCK Master AXI4不支持锁定传输，支持Exclusive独占传输 AxPROT Master 保护类型，指示传输事务为PROT[0]: 1特权，0 非特权 AXI写/读数据通道AXI写响应通道AXI低功耗信号略 基本读写事务 握手机制在握手机制中，通信双份分别扮演发送方和接收方，两者的操作并不相同。通常会设计AXI Master 和 SLV两种端口。 发送方置高VALID信号表示发送方已经将数据、地址或控制信息就绪，并保持于信息总线上。接收方置高READY信号表示接收方已经做好接收的准备。 READY可以早于或晚于VALID，也可以依赖VALID；VALID可以早于或晚于READY，但不可以依赖READY，防止死锁。 所谓双向流控机制，指的时发送方通过置起VALID信号控制发送的时机与速度，接收方也可以通过READY信号的置起与否控制接收的速度。发送方拥有传输的主动权，但接收方在不具备接收能力时，也能够置低信号停止传输，反压发送方。 协议规定，在这种情况下，VALID信号一旦置起就不能置低，直到完成握手，至少传输一周期数据。 置起VALID信号必须是完全主动与独立的过程，否则就可能出现死锁。 死锁待更新 规避死锁的方式待更新 事务握手间的依赖关系待更新 事务的结构 AXI是基于Burst传输的协议，传输的属性及首地址都通过地址通道发送。 Burst传输长度FIXEDWRAPINCR Burst传输大小待更新 Burst地址计算待更新 Burst不能跨4K边界待更新 AXI不支持提前终止Burst待更新 写有效机制待更新 窄带传输待更新 字节不变性待更新 地址非对齐待更新 读写应答机制待更新 保序机制 Outstanding超前传输超前传输（Outstanding transaction）特性是AXI总线能够实现高性能传输的原因之一。 AxID保序待更新 Interconnect ID扩展待更新 AXI4保序模型待更新 事务属性 属性域段AxCACHE 不可修改事务待更新 Read/Write allocated待更新 memory类型待更新 访问权限待更新 Atomic Accesses 原子访问 原子性待更新 Exclusive access排他性访问待更新 为什么AXI4取消了Lock待更新 AXI4新增信号 QoS待更新 Multiple region interface待更新 User-defined待更新","link":"/posts/fe51682c.html"},{"title":"MMU-TLB基础知识","text":"参考文献最好的学习资料就是协议书，本文基于 ARM 官方的文档开展 MMU 的基础知识学习。MMU 学习：learn_the_architecture_-_aarch64_memory_management_101811_0102_00_en.pdfArm® 架构参考手册：DDI0487H_a_a-profile_architecture_reference_manual.pdf ‍ 基本概念虚拟地址（VA，Virtual Address）：处理器上运行的操作系统、应用程序所能看到的地址空间。虚拟地址并不真实存在于计算机中。 物理地址（PA，Physical Address）：实际存储地址空间，如 DDR、Flash、SRAM 等实际存储数据的地方。 在处理器运行的过程中，需要将虚拟地址空间与物理地址空间进行转换，并对内存访问进行保护，即内存管理的主要工作。 虚拟地址通过映射转换为物理地址。虚拟地址和物理地址之间的映射存储在转换表（有时称为页表）。 使用虚拟地址的好处 使用虚拟地址的一个好处是，操作系统可以将零碎的物理地址空间拼接成连续的虚拟空间，供应用程序使用。连续的空间对于应用的运行而言当然是有好处的。 虚拟地址也有利于软件开发人员，他们在编写应用程序时不会也不需要知道系统的确切内存地址，由操作系统和硬件共同执行地址转换。 在实践中，每个应用程序都可以使用自己的一组虚拟地址，这些地址将映射到物理系统中的不同位置。当操作系统在不同的应用程序之间切换时，它会重新编程映射。 MMU 内存管理单元内存管理单元 Memory Management Unit (MMU) ， 负责将软件使用的虚拟地址转换为内存系统中使用的物理地址。 主要组成包含以下内容： table walk unit 单元，它包含从内存中读取转换表的逻辑。 Translation Lookaside Buffers (TLBs) ，用于缓存最近使用的转换内容。 软件发出的所有内存地址都是虚拟的。这些内存地址被传递到 MMU，MMU 会检查 TLB 中是否有最近使用的缓存转换。如果 MMU 找不到最近缓存的转换，则 table walk unit 将从内存中读取相应的 Table entry 表条目，如下所示： Table entry 表条目转换表的工作原理是将虚拟地址空间划分为大小相等的块，并在表中为每个块提供一个 Table entry 表条目。 表中的条目 entry 0 提供 page 0 的映射，entry 1 提供 page 1 的映射，依此类推。每个条目都包含相应物理内存块的地址以及访问物理地址时要使用的属性。 Table lookup 表查找进行转换时，将进行表查找。当转换发生时，软件发出的虚拟地址被一分为二，如下图所示： 该图所展示的是一个单级表查找示例。 下方软件的虚拟地址分为两截： upper-order bits 高位 bits 会告知，这是哪一个条目。基于该信息可以在 Translation Table 转换表中找到对应的 PA base 物理基地址以及内存属性。 lower-order bits 低位保有块偏移量信息，该信息并且不会因地址转换而发生任何改变。 最后将转换表中获得的物理基地址以及最开始就知晓的块偏移量相结合，得到最后的一个物理地址。 除了上述的单级查表之外，还有多级查表的形式（通常为 2 级）。第一个表（level 1 ）将虚拟地址空间划分为大块。此表中的每个条目都可以指向大小相等的物理内存块，也可以指向另一个将该块细分为更小块的表。我们将这种类型的表称为“多级表”。在这里，我们可以看到一个具有三个级别的多级表的示例： 在 Armv8-A 架构中，最大级别数为 4，级别编号为 0 到 3。这种多级方法允许描述较大的块和较小的块。大块和小块的特征如下： 与小块相比，大块需要转换的读取级别更少。此外，大块在 TLB 中缓存的效率更高。 小块使软件能够对内存分配进行精细控制。但是，小块在 TLB 中缓存的效率较低，因为小块需要多次读取关卡才能转换。 为了管理这种权衡，操作系统必须在使用大块映射的效率与使用小块映射的灵活性之间取得平衡，以获得最佳性能。 TLBTLB就是一个cache，俗称快表。 简单来讲，上面说了 MMU 会通过查表的方式将虚拟地址 VA 转化为物理地址 PA。但查表是要花时间的。一般来讲这个表是放在内存里，读内存是有比较大的代价的。 对于 CPU，通过给他添加 cache 来加快访问数据的速度。 Cache 存在的意义：根据局部性原理，对于当前访问的存储位置，接下来，它很可能会被多次访问（时间局部性），它的相邻位置也可能会被访问（空间局部性）。由于访问内存的速度远大于访问寄存器，所以在二者之间设置 cache，来暂存一部分指令或数据。 那么对于 MMU，TLB 就是它的 cache，用来加快查表的速度。 MMU 首先查询 TLB，发现有（hit），直接得到物理地址，在内存根据物理地址取数据。如果 TLB 没有这个虚拟地址（miss），那么就只能费力的通过页表来查找了。这个流程跟 cache 其实是一模一样的，当然，因为它本质就是一个 cache。 Address spaces 地址空间空间结构AArch64 中有几个独立的虚拟地址空间。下图显示了以下虚拟地址空间： 下图显示了三个虚拟地址空间： NS(Non-secure，不安全的) EL0 和 EL1。 NS.EL2。 EL3. EL，Exception levels 异常级别。 ELn 中，随着 n 的增加，软件的执行权限也相应的增加；EL0 被称为无特权执行；EL2 提供了对虚拟化的支持EL3 提供了安全状态切换功能（安全状态与非安装状态之间的切换） 由于存在多个虚拟地址空间，因此指定地址所在的地址空间非常重要。例如，NS。EL2：0x8000 是指非安全 EL2 虚拟地址空间中的地址 0x8000。 该图还显示，来自 NS.EL0 和 NS.EL1 的虚拟地址经过两组表（图中的 stage1 和 stage2）。这些表支持虚拟化，并允许 hypervisor 来管理虚拟机 （VM） 看到的物理地址空间。 在虚拟化中，我们将由操作系统控制的一组翻译称为第 1 阶段。阶段 1 表将虚拟地址转换为中间物理地址 （IPA）。在第 1 阶段，操作系统认为 IPA 是物理地址空间。但是，虚拟机管理程序控制第二组翻译，我们称之为阶段 2。第二组转换将 IPA 转换为物理地址。下图显示了两组翻译的工作原理： 官方文档这里的表述可能有点绕，补充一点个人理解： 之前我们讨论的是，操作系统或者应用程序的虚拟地址 VA 转换为物理地址 PA 对吧。 那么，如果此时还存在一个虚拟机（虚拟机可以理解为一种应用程序，该应用程序模拟了一台计算机），那么虚拟机这么一台计算机，是不是也会拥有一个“虚拟机的物理地址”，这就是中间物理地址 IPA。在虚拟机运行的应用程序，将“虚拟机的虚拟地址”转化为“虚拟机的物理地址”，这个“虚拟机的物理地址”，还需要再转化为“实体机的物理地址”，即 VA-&gt;IPA-&gt;PA 整个流程的意思。 空间大小 EL0/EL1 虚拟地址空间有两个区域：内核空间和应用程序空间。这两个区域显示在关系图的左侧，内核空间位于顶部，应用程序空间（标记为“用户空间”）位于地址空间的底部。内核空间和用户空间具有单独的转换表，这意味着它们的映射可以保持独立。 独立很重要，独立表明这两个东西不会相互影响。简单来说，当应用程序出现重大错误的时候，不会影响内核系统的运行，系统不会受到太大的影响。 空间标识符现代操作系统的应用程序似乎都从同一地址区域运行，这就是我们所描述的用户空间。在实践中，不同的应用程序需要不同的映射。这意味着，例如，VA 0x8000 的转换取决于当前正在运行的应用程序。 理想情况下，我们希望不同应用程序在TLB 中共存，在 Armv8-A 中，通过地址空间标识符 （ASID）来进行管理。 对于 EL0/EL1 虚拟地址空间，可以使用转换表条目的属性字段中的 nG 位将转换标记为全局 （G） 或非全局 （nG）。例如，内核映射是全局转换，而应用程序映射是非全局转换。全局翻译适用于当前正在运行的任何应用程序。非全局翻译仅适用于特定应用程序。 非全局映射在 TLB 中用 ASID 进行标记。在 TLB 查找中，会将 TLB 条目中的 ASID 与当前选定的 ASID 进行比较。如果它们不匹配，则不使用 TLB 条目。下图显示了内核空间中没有 ASID 标记的全局映射和用户空间中具有 ASID 标记的非全局映射： 小结本文仅仅是简要介绍了 MMU 和 TLB，对 MMU 的意义、组成有一定的了解就好。接下来再阅读 ARM 的架构书，补充一些 MMU 具体的内容。","link":"/posts/e0051e00.html"},{"title":"从零开始EDA环境搭建","text":"Ubuntu18.04 系统安装http://mirrors.aliyun.com/ubuntu-releases/18.04/ 阿里云镜像下载 VMware配置安装后，启动后为英文。 在更改语言前，先换源。 换源https://zhuanlan.zhihu.com/p/61228593 桌面右键打开terminal 首先备份源列表sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup 打开sources.list文件sudo gedit /etc/apt/sources.list 阿里源 deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse刷新列表sudo apt-get updatesudo apt-get upgradesudo apt-get install build-essential 换源以后就可以去下载语言了。 选择下载语言，找到Chinese 更改以后重启。 重启以后提示更改文件夹名称，最好不做修改保持英文。 系统不自带python2，补充安装 sudo apt install python 系统自带python3.6.9，应该够用，就不装先了。 下面开始准备gvim gvim基本安装系统自带的vi会出现乱码问题，先卸载 sudo apt-get remove vim-common 重新安装，直接装vim-gtk3 sudo apt install vim-gtk3 基本可以使用了，接下来开始搞插件。 安装git sudo apt install git 接着首先安装vundle插件管理器 参考https://www.cnblogs.com/feiyuhuo/p/10274236.html 1、先新建目录 mkdir ~/.vim/bundle/Vundle.vim 2、git 克隆 Vundle 工程到本地 git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim 出现这个无法访问的提示…… 那只能将https修改为git 已经准备好的.vimrc文件整个复制进去。【此时目录下应该没有，自己新建一个并命名为.vimrc，然后把下面的内容复制进去即可】 启动gvim，此时会报错无所谓，因为插件还没安装。 回车两下进入正常显示后，输入冒号:PluginInstall安装插件 暂时是只安装三个插件。其他先注释掉了，以后再装。 完成以后重启gvim现在已经是比较好看的了。 在~/.vim目录内，新建colors和syntax文件夹 语法文件和色彩方案搭配效果如下 看verilog代码才会有效果。 那么至此最基本的准备就完成了。 先拍摄一个快照保存一下 tinyriscv环境搭建那么目前是没有多余配置的， 接下来先把tinyriscv的环境准备好。 作者的gitee库 https://gitee.com/liangkangnan/tinyriscv/ 在Downloads文件夹下下载iverilog git clone https://github.com/steveicarus/iverilog.git cd iverilog 切换到v11分支(必须用V11或以上的版本) git checkout v11-branch 安装依赖 sudo apt-get install autoconf gperf flex bison build-essential 编译、安装iverilog和vvp sh autoconf.sh ./configure sudo make&amp;make install 然后准备python3软链接 先删除原来的软链接，这个是连到python2的 sudo rm /usr/bin/python 然后建立新的软链接 sudo ln -s /usr/bin/python3.6 /usr/bin/python 那么现在直接如数python会看到打开的是3.6.9了。exit（）退出，接着搞别的。 安装gtkwave sudo apt-get install gtkwave 下载gun工具链，百度网盘下载(链接：https://pan.baidu.com/s/10uLZYf_cgtH94kZI_N6JhQ 提取码：uk0w) 然后直接拖拽进去。 右键可以直接解压 接着克隆tinyriscv项目工程 在Downloads目录下克隆 git clone https://gitee.com/liangkangnan/tinyriscv.git 主目录下新建个Project文件夹，将刚克隆的复制过来，之前的作为原始备份。 之前下载的工具链复制到tinyriscv工程下的tools目录中 修改tinyriscv/tests/example目录下的common.mk文件 把名称修改过来，保持和工具链名称前缀一致。 :wq保存并退出 下面开始进行测试 sim目录下启用终端 1python .\\sim_new_nowave.py ..\\tests\\isa\\generated\\rv32ui-p-add.bin inst.data 指令执行会报错，说没有这个文件或目录。 把右下划线全部替换为左下划 1python ./sim_new_nowave.py ../tests/isa/generated/rv32ui-p-add.bin inst.data 顺利运行得到结果。 找到当前目录下的tinyriscv_soc_tb.vcd文件双击启动gtkwave查看 基本使用没有问题。 测试所有指令集 1python ./test_all_isa.py 测试新指令集 进入到sim/compliance_test目录，执行以下命令： cd compliance_test python ./compliance_test.py ../../tests/riscv-compliance/build_generated/rv32i/I-ADD-01.elf.bin inst.data 得到PASS表明通过。 接下来测试c文件编译 进入到tests\\example\\simple目录，执行以下命令编译： make 在该目录下回生成.bin文件 编译成功之后，进入到sim目录，执行以下命令开始测试： python ./sim_new_nowave.py ../tests/example/simple/simple.bin inst.data 通过，那么至此基本仿真已经没有问题了。 下面测试FPGA移植。 FPGA移植准备移植需要准备vivado集成开发环境和FPGA，CMSIS-DAP调试器。 我这里安装的是vivado2017.4和Digilent 的 ARTY A7 35T开发板 安装vivado需要准备安装包和许可文件，请自行准备。 此处不能拖拽进虚拟机，需要利用共享文件夹的方式。 在虚拟机设置中，将USB兼容性先修改为USB 3.1 切换到“选项” 启用共享文件夹，不需要关机。 之后在根目录/mnt/hgfs/就可以找到自己的共享文件夹了。 进入安装包文件夹， 赋予安装权限 chmod +x xsetup 执行命令 ./xsetup 启动安装引导 安装过程和windows下没有区别。 安装路径要在/home下，不然空间不足。此处建立了一个EDA_Tools目录供后续各种工具安装。 安装末尾载入许可文件。 在vivado/2017.4目录下找到settings64.sh配置文件。 编辑主目录配置文件 vim ~/.bashrc 在末尾添加路径 source /home/eda/EDA_Tools/Vivado/2017.4/settings64.sh 然后重新加载环境配置 source ~/.bashrc 至此应该就可以启动vivado了。 vivado &amp; 启动vivado 顺利启动以后先关闭，处理一些剩余内容。 先把xilinx的信息中心卸载掉。 找到这个软件，打开。 直接卸载就行。 接着补充安装驱动，否则后续可能无法烧写板子。 /home/eda/EDA_Tools/Vivado/2017.4/data/xicom/cable_drivers/lin64/install_script/install_drivers 在这个路径下，打开终端。 安装驱动。 sudo ./install_drivers 那么vivado也准备完毕以后，开始移植tinyriscv到FPGA上 FPGA移植工作新建工程 我的板子ARTY A7 35T 器件属性选择xc7a35ticsg324-1l 添加源文件 将tinyriscv下整个RTL添加复制进来 将tinyriscv下fpga/constrs下的.xdc约束文件添加进来。 打开约束文件，根据自己的开发板进行修改。此处为我自己的约束。 重点关注时钟，我是100M的时钟，等会还要用PLL分频。 GPIO0,1。我分配给了一个LED和一个SW拨码开关。 JTAG和UART使用调试器CMSIS-DAP的相应接口。 都根据自己开发板的原理图来。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125# 时钟约束50MHz(100MHz)set_property -dict { PACKAGE_PIN E3 IOSTANDARD LVCMOS33 } [get_ports {sys_clk}];create_clock -add -name sys_clk_pin -period 10.00 [get_ports {sys_clk}];# 时钟引脚 E3set_property IOSTANDARD LVCMOS33 [get_ports sys_clk]set_property PACKAGE_PIN E3 [get_ports sys_clk]# 复位引脚 CK_RST/ C2set_property IOSTANDARD LVCMOS33 [get_ports rst]set_property PACKAGE_PIN C2 [get_ports rst]# 程序执行完毕指示引脚 LED3/ T10set_property IOSTANDARD LVCMOS33 [get_ports over]set_property PACKAGE_PIN T10 [get_ports over]# 程序执行成功指示引脚 LED2/ T9set_property IOSTANDARD LVCMOS33 [get_ports succ]set_property PACKAGE_PIN T9 [get_ports succ]# CPU停住指示引脚 LED1/ J5set_property IOSTANDARD LVCMOS33 [get_ports halted_ind]set_property PACKAGE_PIN J5 [get_ports halted_ind]# 串口下载使能引脚 SW3/ A10set_property IOSTANDARD LVCMOS33 [get_ports uart_debug_pin]set_property PACKAGE_PIN A10 [get_ports uart_debug_pin]# 串口发送引脚 / D4set_property IOSTANDARD LVCMOS33 [get_ports uart_tx_pin]set_property PACKAGE_PIN D4 [get_ports uart_tx_pin]# 串口接收引脚 / D3set_property IOSTANDARD LVCMOS33 [get_ports uart_rx_pin]set_property PACKAGE_PIN D3 [get_ports uart_rx_pin]# GPIO0引脚 LED0/ H5set_property IOSTANDARD LVCMOS33 [get_ports {gpio[0]}]set_property PACKAGE_PIN H5 [get_ports {gpio[0]}]# GPIO1引脚 SW0/ A8set_property IOSTANDARD LVCMOS33 [get_ports {gpio[1]}]set_property PACKAGE_PIN A8 [get_ports {gpio[1]}]# JTAG TCK引脚 JD9/ H2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TCK]set_property PACKAGE_PIN H2 [get_ports jtag_TCK]#create_clock -name jtag_clk_pin -period 300 [get_ports {jtag_TCK}];#屏蔽 外部时钟输入分配到普通的IO口set_property CLOCK_DEDICATED_ROUTE FALSE [get_nets jtag_TCK]# JTAG TMS引脚 JD10/ G2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TMS]set_property PACKAGE_PIN G2 [get_ports jtag_TMS]# JTAG TDI引脚 JD7/ E2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TDI]set_property PACKAGE_PIN E2 [get_ports jtag_TDI]# JTAG TDO引脚 JD8/ D2set_property IOSTANDARD LVCMOS33 [get_ports jtag_TDO]set_property PACKAGE_PIN D2 [get_ports jtag_TDO]# SPI MISO引脚 CK_MISO/ G1set_property IOSTANDARD LVCMOS33 [get_ports spi_miso]set_property PACKAGE_PIN G1 [get_ports spi_miso]# SPI MOSI引脚 CK_MOSI/ H1set_property IOSTANDARD LVCMOS33 [get_ports spi_mosi]set_property PACKAGE_PIN H1 [get_ports spi_mosi]# SPI SS引脚 CK_SS/ C1set_property IOSTANDARD LVCMOS33 [get_ports spi_ss]set_property PACKAGE_PIN C1 [get_ports spi_ss]# SPI CLK引脚 CK_SCK/ F1set_property IOSTANDARD LVCMOS33 [get_ports spi_clk]set_property PACKAGE_PIN F1 [get_ports spi_clk]set_property BITSTREAM.CONFIG.SPI_BUSWIDTH 4 [current_design]set_property CONFIG_MODE SPIx4 [current_design]set_property BITSTREAM.CONFIG.CONFIGRATE 50 [current_design] 接下来添加锁相环PLL， 配置IP输出50M时钟 打开顶层文件，修改端口clk为sys_clk 往下，在第一个always块前例化PLL 记得补充声明clk， 至此完成所有FPGA工程配置，生成比特流文件 顺利生成比特流文件，连接开发板直接烧写。 烧写时可能需要重新定位一下，自己生成的bit文件。 板子上的LED亮起，说明顺利烧写进去了， 接下来进行JTAG调试。 FPGA运行调试调试需要使用到CMSIS-DAP，连好线，做好管脚约束才能使用。 同时还需要上位机，作者提供的只有exe也就是windows下的软件。 *注意，Linux下的openocd安装非常麻烦，我遇到了很多问题，虽然现在顺利安装并使用了。 不介意的话后续工作可以直接在windows上进行，把一些文件直接拖到windows下使用即可。 在Ubuntu下直接安装上位机openocd sudo apt install openocd 在tools/openocd目录下，我们需要使用到这个.cfg配置文件。 openocd -f tinyriscv.cfg 提示不行，这是因为默认安装的openocd不支持CMSIS-DAP， 所以我们还需要源码安装自己配置 sudo apt remove openocd先卸载掉原本安装的 进行源码安装，参考 https://blog.csdn.net/daoshengtianxia/article/details/115038674 在Downloads目录下克隆 git clone git://github.com/ntfreak/openocd cd openocd/ 安装依赖 然后执行 ./bootstrap 缺少了什么但又不清楚，补充安装了一大堆东西。 sudo apt install debhelper findutils autotools-dev autoconf automake libtool pkg-config libltdl-dev 重新执行 ./bootstrap 缺少libusb-1.x，补充安装 sudo apt install libusb-1.0 再次configure 这次应该是顺利配置了 再补充下面这个 ./configure –enable-cmsis-dap –enable-jlink –enable-stlink –enable-ti-icdi 提示需要hidapi， sudo apt-get install libhidapi-dev 其实是要补充安装这个libhidapi的库，然后再配置。注意一定要给权限。 sudo ./configure –enable-cmsis-dap 配置成功一定要看到这个地方是yes的 最后编译安装 sudo make&amp;make install 完成安装以后，回到tinyriscv/tools/openocd目录下 openocd -f tinyriscv.cfg 现在可以启用这个软件了，当然目前连接还是失败的，需要再做一些配置。 此外，首先需要对.cfg文件中的一些内容做修改。 根据上一张图，有提示说use”adapter speed”not’adapeter_khz’ 意思就是用前面那个不要用后面那个表述， 打开.cfg就可以看到对应的内容了，改过来就行。 然后还需要准备权限，参考https://www.bbsmax.com/A/A2dm9B87de/ 用lsusb 确认自己的调试器信息 Bus 003 Device 008: ID 0d28:0204 NXP LPC1768 需要增加一个rules文件，参考https://blog.csdn.net/zhengyangliu123/article/details/78232241 进入前面克隆的openocd/contrib 目录 使用指令将 60-openocd.rules 文件复制入 /etc/udev/rules.d/ 目录下 sudo cp 60-openocd.rules /etc/udev/rules.d/ 然后，对文件做一些修改【此处存疑，可能不改也能用】 sudo gvim /etc/udev/rules.d/60-openocd.rules 最下面的地方，改成跟我下图一样的。 注意idVendor和idProduct要保持和上面看到的0d28:0204设备信息一致。 保存以后重启电脑 回到之前的tinyriscv中的openocd文件夹，使用终端执行 openocd -f tinyriscv.cfg 终于看到这个了，不容易啊 *注意，这里存在未知问题。每次重启系统以后，最开始使用openocd会报错。需执行3次，才会识别并启用…… 原因不明，但每次都这样。只要启动成功，不关机就不会有这个问题。 新开一个终端，看作者后续的操作。windows和linux在路径上有些不同 然后打开另一个CMD窗口，执行以下命令来连接openocd，注意电脑要启用telnet host服务。 telnet localhost 4444 然后在这个CMD窗口下使用load_image命令将固件下载到FPGA，这里以freertos.bin文件为例，如下所示： load_image D:/gitee/open/tinyriscv/tests/example/FreeRTOS/Demo/tinyriscv_GCC/freertos.bin 0x0 bin 0x0 0x1000000 使用verify_image命令来校验是否下载成功，如下所示： verify_image D:/gitee/open/tinyriscv/tests/example/FreeRTOS/Demo/tinyriscv_GCC/freertos.bin 0x0 如果下载出错的话会有提示的，没有提示则说明下载成功。 最后执行以下命令让程序跑起来： resume 0 注意：每次下载程序前记得先执行halt命令停住CPU。； 这里使用gpio进行验证 在/home/eda/Project/tinyriscv/tests/example/gpio路径下使用make编译生成bin文件 在telnet窗口下使用下面命令烧写程序 load_image /home/eda/Project/tinyriscv/tests/example/gpio/gpio.bin 0x0 bin 0x0 0x1000000 verify_image /home/eda/Project/tinyriscv/tests/example/gpio/gpio.bin 0x0 bin 0x0 如果看到这个，说明程序烧写成功了 resume 0 此时开发板已经可以正常使用，LED灯会随对应的那个开关亮灭。 下面测试一下串口， 先去把串口发送uart_tx的程序编译一下 安装串口调试工具cutecom sudo apt-get install cutecom 直接打开工具 选这个ACM OPEN以后会看到，连接的就是这个CMSIS-DAP调试器 load_image /home/eda/Project/tinyriscv/tests/example/uart_tx/uart_tx.bin 0x0 bin 0x0 0x1000000 烧写进去并且resume以后，可以看到串口助手窗口打印了hello world。 至此，整个tinyriscv的linux开发环境搭建完成，可以运行整个项目的所有内容。 其他补充输入su命令获取root权限时， 出现了 authentication failure 的问题，即身份验证失败。 需要进行下面操作： $ sudo passwd root Enter new UNIX password: //此时输入你的密码 Retype new UNIX password: //再次输入，相同密码。 passwd: password updated successfully 此时再用su命令，就可以获取到root权限了。","link":"/posts/f07a99ab.html"},{"title":"折腾HEXO的快乐","text":"解决一些HEXO环境错误 为了文章封面，换一个icarus主题这个主题没法直接用，看这个error 提示了用npm install后面一堆东西rongyel.top/atom.xml 这种错误是说需要给一个字符内容，在这个position后面，不能只是空格这样就正确了 换了新主题以后，会发现发布以后不能正常显示，只有纯文字。此时需要shift+f5强制刷新浏览器缓存，就可以看到界面啦 abbrlink处理SEO优化：Hexo-abbrlink插件生成永久固定链接 - 知乎固化链接，不会随文章名称修改而发生变化。 图片名称不显示由于粘贴图片到obsidian的时候，会将图片名称自动的链接显示，这种描述方式会在部署到hexo的时候，在icarus主题下是会将名称显示出来的。因为不会特意去重命名每一个图片，有些只是截图而已，所以名称很难看。该问题没有很好的解决办法，只能手动删除相关图片链接名称。 网站背景图片参考Hexo-icarus主题黑夜模式以及背景 - 也无风雨也无晴 因为最上面有一道白色的menu，不修改的话，背景最好是浅色的，这样比较和谐。 原创和本地预览不一致本地看页面是正常的，上传以后不正常了。布局不正常。搭建hexo，为什么预览和发布的不一样？ - 知乎很奇怪，写为具体的文件名就可以了 HEXO和Obsidian的配合如果将hexo整个环境丢到ob笔记目录下，会导致文件过多，加载变慢。 而且hexo文件的层次也很不适合，所以只将ob需要发布的文件夹软连接到_post目录下就好了。 首先在E盘新建一个文件夹 example，并在example文件夹内新建一个txt文件example.txt。然后在Windows10搜索框中输入cmd，选择以管理员模式打开。在命令行中输入mklink /d D:\\link E:\\example即可在D盘下生成一个指向E盘文件夹example的软连接link文件夹。 此时在hexo环境下进行部署的时候，是可以正确读取到ob路径下的笔记并生成网页的。 OP置顶功能hexo实现文章置顶功能 - 简书将node_modules/hexo-generator-index/lib/generator.js修改如下 1234567891011121314151617181920212223242526272829303132333435'use strict';const pagination = require('hexo-pagination');module.exports = function(locals) { const config = this.config; const posts = locals.posts.sort(config.index_generator.order_by); // posts.data.sort((a, b) =&gt; (b.sticky || 0) - (a.sticky || 0)); posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排}); const paginationDir = config.pagination_dir || 'page'; const path = config.index_generator.path || ''; return pagination(path, posts, { perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: { __index: true } });}; HEXO icarus主题的其他调整Hexo博客icarus主题定制篇-CSDN博客调整页面宽度，并且将主页和文章页面的布局调整。这个post本来是没有的，复制icarus的再做修改，有效。 备份主题_config.icarus.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429# Version of the configuration fileversion: 5.1.0# Icarus theme variant, can be &quot;default&quot; or &quot;cyberpunk&quot;variant: default# Path or URL to the website's logologo: /img/favicon.png# Page metadata configurationshead: # URL or path to the website's icon favicon: /img/favicon1.png # Web application manifests configuration # https://developer.mozilla.org/en-US/docs/Web/Manifest manifest: # Name of the web application (default to the site title) name: # The displayed name of the web application # when there is not enough space to display full name short_name: # The start URL of the web application start_url: https://RongyeL.github.io # The default theme color for the application theme_color: # A placeholder background color for the application page to display # before its stylesheet is loaded background_color: # The preferred display mode for the website display: standalone # Image files that can serve as application icons for different contexts icons: - # The path to the image file src: '' # A string containing space-separated image dimensions sizes: '' # A hint as to the media type of the image type: # Open Graph metadata # https://hexo.io/docs/helpers.html#open-graph open_graph: # Page title (og:title) (optional) # You should leave this blank for most of the time title: # Page type (og:type) (optional) # You should leave this blank for most of the time type: blog # Page URL (og:url) (optional) # You should leave this blank for most of the time url: # Page cover (og:image) (optional) # You should leave this blank for most of the time image: # Site name (og:site_name) (optional) # You should leave this blank for most of the time site_name: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page description (og:description) (optional) # You should leave this blank for most of the time description: # Twitter card type (twitter:card) twitter_card: # Twitter ID (twitter:creator) twitter_id: # Twitter Site (twitter:site) twitter_site: # Google+ profile link (deprecated) google_plus: # Facebook admin ID fb_admins: # Facebook App ID fb_app_id: # Structured data of the page # https://developers.google.com/search/docs/guides/intro-structured-data structured_data: # Page title (optional) # You should leave this blank for most of the time title: # Page description (optional) # You should leave this blank for most of the time description: # Page URL (optional) # You should leave this blank for most of the time url: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page publisher (optional) # You should leave this blank for most of the time publisher: # Page publisher logo (optional) # You should leave this blank for most of the time publisher_logo: # Page images (optional) # You should leave this blank for most of the time image: # Additional HTML meta tags in an array meta: # Meta tag specified in &lt;attribute&gt;=&lt;value&gt; style # E.g., name=theme-color;content=#123456 =&gt; &lt;meta name=&quot;theme-color&quot; content=&quot;#123456&quot;&gt; - '' # URL or path to the website's RSS atom.xml rss: # Page top navigation bar configurationsnavbar: # Navigation menu items menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # Links to be shown on the right of the navigation bar # links: # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Page footer configurationsfooter: # Copyright text copyright: © 2023 # Links to be shown on the right of the footer section links: # Creative Commons: # icon: fab fa-creative-commons # url: https://creativecommons.org/ # Attribution 4.0 International: # icon: fab fa-creative-commons-by # url: https://creativecommons.org/licenses/by/4.0/ # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Article related configurationsarticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # Show copy code button clipboard: true # Default folding status of the code blocks. Can be &quot;&quot;, &quot;folded&quot;, &quot;unfolded&quot; fold: unfolded # Whether to show estimated article reading time readtime: true # Whether to show updated time. For &quot;auto&quot;, shows article update time only when page.updated is set and it is different from page.date update_time: true # Article licensing block licenses: Creative Commons: icon: fab fa-creative-commons url: https://creativecommons.org/ Attribution: icon: fab fa-creative-commons-by url: https://creativecommons.org/licenses/by/4.0/ Noncommercial: icon: fab fa-creative-commons-nc url: https://creativecommons.org/licenses/by-nc/4.0/# Search plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search/search: type: insight # Whether to include pages in the search results index_pages: true# Comment plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment/# comment:# type: disqus# # Disqus shortname# shortname: ''# Donate plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Donation/# donates:# # &quot;Afdian.net&quot; donate button configurations# -# type: afdian# # URL to the &quot;Afdian.net&quot; personal page# url: ''# # Alipay donate button configurations# -# type: alipay# # Alipay qrcode image URL# qrcode: ''# # &quot;Buy me a coffee&quot; donate button configurations# -# type: buymeacoffee# # URL to the &quot;Buy me a coffee&quot; page# url: ''# # Patreon donate button configurations# -# type: patreon# # URL to the Patreon page# url: ''# # Paypal donate button configurations# -# type: paypal# # Paypal business ID or email address# business: ''# # Currency code# currency_code: USD# # Wechat donate button configurations# -# type: wechat# # Wechat qrcode image URL# qrcode: ''# Share plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share/# share:# type: sharethis# # URL to the ShareThis share plugin script# install_url: ''# Sidebar configurations.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # Left sidebar configurations left: # Whether the sidebar sticks to the top when page scrolls sticky: true # Right sidebar configurations right: # Whether the sidebar sticks to the top when page scrolls sticky: true# Sidebar widget configurations# http://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: # Table of contents widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: toc # Whether to show the index of each heading index: false # Whether to collapse sub-headings when they are out-of-view collapsed: true # Maximum level of headings to show (1-6) depth: 3 # Profile widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: profile # Author name author: Rong晔 # Author title author_title: 坚持摸鱼的IC攻城狮 # Author's current location location: Shenzhen, China # URL or path to the avatar image avatar: /img/avatar.jpg # Whether show the rounded avatar image avatar_rounded: false # Email address for the Gravatar gravatar: # URL or path for the follow button follow_link: https://space.bilibili.com/3280670 # Links to be shown on the bottom of the profile widget social_links: Github: icon: fab fa-github url: https://github.com/RongyeL # Facebook: # icon: fab fa-facebook # url: https://facebook.com # Twitter: # icon: fab fa-twitter # url: https://twitter.com # Dribbble: # icon: fab fa-dribbble # url: https://dribbble.com RSS: icon: fas fa-rss url: /atom.xml # Recommendation links widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: links # Names and URLs of the sites links: Hexo: https://hexo.io Bulma: https://bulma.io # Categories widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: categories # Tags widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: tags # How to order tags. For example 'name' to order by name in ascending order, and '-length' to order by number of posts in each tags in descending order order_by: name # Amount of tags to show. Will show all if not set. amount: # Whether to show tags count, i.e. number of posts in the tag. show_count: true # Recent posts widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: recent_posts # Archives widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: right type: archives # Google FeedBurner email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: subscribe_email # Hint text under the email input description: # Feedburner ID feedburner_id: '' # Google AdSense unit configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: adsense # AdSense client ID client_id: '' # AdSense AD unit ID slot_id: '' # Follow.it email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: followit # Hint text under the email input description: # Subscription form action URL action_url: '' # Feed claiming verification code verification_code: ''# Plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/plugins: # Enable page startup animations animejs: true # Show the &quot;back to top&quot; button back_to_top: true # Baidu Analytics plugin settings # https://tongji.baidu.com baidu_analytics: # Baidu Analytics tracking ID tracking_id: # Bing Webmaster Tools plugin settings # https://www.bing.com/toolbox/webmaster/ bing_webmaster: # Bing Webmaster Tools tracking ID in the &lt;meta&gt; tag tracking_id: # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: true # CNZZ statistics # https://www.umeng.com/web cnzz: # CNZZ tracker id id: # CNZZ website id web_id: # Alerting users about the use of cookies # https://www.osano.com/cookieconsent/ cookie_consent: # The compliance type. Can be &quot;info&quot;, &quot;opt-in&quot;, or &quot;opt-out&quot; type: info # Theme of the popup. Can be &quot;block&quot;, &quot;edgeless&quot;, or &quot;classic&quot; theme: edgeless # Whether the popup should stay static regardless of the page scrolls static: false # Where on the screen the consent popup should display position: bottom-left # URL to your site's cookie policy policyLink: https://www.cookiesandyou.com/ # Enable the lightGallery and Justified Gallery plugins gallery: true # Google Analytics plugin settings # https://analytics.google.com google_analytics: # Google Analytics tracking ID tracking_id: # Hotjar user feedback plugin # https://www.hotjar.com/ hotjar: # Hotjar site id site_id: # Enable the KaTeX math typesetting support # https://katex.org/ katex: false # Enable the MathJax math typesetting support # https://www.mathjax.org/ mathjax: false # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated_browser: false # Show a progress bar at top of the page on page loading progressbar: true # Statcounter statistics # https://statcounter.com/ statcounter: # Statcounter project id project: # Statcounter project security code security: # Twitter conversion tracking plugin settings # https://business.twitter.com/en/help/campaign-measurement-and-analytics/conversion-tracking-for-websites.html twitter_conversion_tracking: # Twitter Pixel ID pixel_id: # CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL template of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL template of the webfont CDN provider fontcdn: google # Name or URL of the fontawesome icon font CDN provider iconcdn: fontawesome 备份主题_config.post.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426# Version of the configuration fileversion: 5.1.0# Icarus theme variant, can be &quot;default&quot; or &quot;cyberpunk&quot;variant: default# Path or URL to the website's logologo: /img/favicon.png# Page metadata configurationshead: # URL or path to the website's icon favicon: /img/favicon1.png # Web application manifests configuration # https://developer.mozilla.org/en-US/docs/Web/Manifest manifest: # Name of the web application (default to the site title) name: # The displayed name of the web application # when there is not enough space to display full name short_name: # The start URL of the web application start_url: https://RongyeL.github.io # The default theme color for the application theme_color: # A placeholder background color for the application page to display # before its stylesheet is loaded background_color: # The preferred display mode for the website display: standalone # Image files that can serve as application icons for different contexts icons: - # The path to the image file src: '' # A string containing space-separated image dimensions sizes: '' # A hint as to the media type of the image type: # Open Graph metadata # https://hexo.io/docs/helpers.html#open-graph open_graph: # Page title (og:title) (optional) # You should leave this blank for most of the time title: # Page type (og:type) (optional) # You should leave this blank for most of the time type: blog # Page URL (og:url) (optional) # You should leave this blank for most of the time url: # Page cover (og:image) (optional) # You should leave this blank for most of the time image: # Site name (og:site_name) (optional) # You should leave this blank for most of the time site_name: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page description (og:description) (optional) # You should leave this blank for most of the time description: # Twitter card type (twitter:card) twitter_card: # Twitter ID (twitter:creator) twitter_id: # Twitter Site (twitter:site) twitter_site: # Google+ profile link (deprecated) google_plus: # Facebook admin ID fb_admins: # Facebook App ID fb_app_id: # Structured data of the page # https://developers.google.com/search/docs/guides/intro-structured-data structured_data: # Page title (optional) # You should leave this blank for most of the time title: # Page description (optional) # You should leave this blank for most of the time description: # Page URL (optional) # You should leave this blank for most of the time url: # Page author (article:author) (optional) # You should leave this blank for most of the time author: # Page publisher (optional) # You should leave this blank for most of the time publisher: # Page publisher logo (optional) # You should leave this blank for most of the time publisher_logo: # Page images (optional) # You should leave this blank for most of the time image: # Additional HTML meta tags in an array meta: # Meta tag specified in &lt;attribute&gt;=&lt;value&gt; style # E.g., name=theme-color;content=#123456 =&gt; &lt;meta name=&quot;theme-color&quot; content=&quot;#123456&quot;&gt; - '' # URL or path to the website's RSS atom.xml rss: # Page top navigation bar configurationsnavbar: # Navigation menu items menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # Links to be shown on the right of the navigation bar # links: # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Page footer configurationsfooter: # Copyright text copyright: © 2023 # Links to be shown on the right of the footer section links: # Creative Commons: # icon: fab fa-creative-commons # url: https://creativecommons.org/ # Attribution 4.0 International: # icon: fab fa-creative-commons-by # url: https://creativecommons.org/licenses/by/4.0/ # Download on GitHub: # icon: fab fa-github # url: https://github.com/RongyeL# Article related configurationsarticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-light # Show copy code button clipboard: true # Default folding status of the code blocks. Can be &quot;&quot;, &quot;folded&quot;, &quot;unfolded&quot; fold: unfolded # Whether to show estimated article reading time readtime: true # Whether to show updated time. For &quot;auto&quot;, shows article update time only when page.updated is set and it is different from page.date update_time: true # Article licensing block licenses: Creative Commons: icon: fab fa-creative-commons url: https://creativecommons.org/ Attribution: icon: fab fa-creative-commons-by url: https://creativecommons.org/licenses/by/4.0/ Noncommercial: icon: fab fa-creative-commons-nc url: https://creativecommons.org/licenses/by-nc/4.0/# Search plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search/search: type: insight # Whether to include pages in the search results index_pages: true# Comment plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment/# comment:# type: disqus# # Disqus shortname# shortname: ''# Donate plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Donation/# donates:# # &quot;Afdian.net&quot; donate button configurations# -# type: afdian# # URL to the &quot;Afdian.net&quot; personal page# url: ''# # Alipay donate button configurations# -# type: alipay# # Alipay qrcode image URL# qrcode: ''# # &quot;Buy me a coffee&quot; donate button configurations# -# type: buymeacoffee# # URL to the &quot;Buy me a coffee&quot; page# url: ''# # Patreon donate button configurations# -# type: patreon# # URL to the Patreon page# url: ''# # Paypal donate button configurations# -# type: paypal# # Paypal business ID or email address# business: ''# # Currency code# currency_code: USD# # Wechat donate button configurations# -# type: wechat# # Wechat qrcode image URL# qrcode: ''# Share plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share/# share:# type: sharethis# # URL to the ShareThis share plugin script# install_url: ''# Sidebar configurations.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # Left sidebar configurations left: # Whether the sidebar sticks to the top when page scrolls sticky: true # Right sidebar configurations right: # Whether the sidebar sticks to the top when page scrolls sticky: true# Sidebar widget configurations# http://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: # Table of contents widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: toc # Whether to show the index of each heading index: false # Whether to collapse sub-headings when they are out-of-view collapsed: true # Maximum level of headings to show (1-6) depth: 3 # Profile widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: profile # Author name author: Rong晔 # Author title author_title: 坚持摸鱼的IC攻城狮 # Author's current location location: Shenzhen, China # URL or path to the avatar image avatar: /img/avatar.jpg # Whether show the rounded avatar image avatar_rounded: false # Email address for the Gravatar gravatar: # URL or path for the follow button follow_link: https://space.bilibili.com/3280670 # Links to be shown on the bottom of the profile widget social_links: Github: icon: fab fa-github url: https://github.com/RongyeL # Facebook: # icon: fab fa-facebook # url: https://facebook.com # Twitter: # icon: fab fa-twitter # url: https://twitter.com # Dribbble: # icon: fab fa-dribbble # url: https://dribbble.com RSS: icon: fas fa-rss url: /atom.xml # Recommendation links widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: links # Names and URLs of the sites links: Hexo: https://hexo.io Bulma: https://bulma.io # Categories widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: categories # Tags widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: tags # How to order tags. For example 'name' to order by name in ascending order, and '-length' to order by number of posts in each tags in descending order order_by: name # Amount of tags to show. Will show all if not set. amount: # Whether to show tags count, i.e. number of posts in the tag. show_count: true # Recent posts widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: left type: recent_posts # Archives widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: archives # Google FeedBurner email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: subscribe_email # Hint text under the email input description: # Feedburner ID feedburner_id: '' # Google AdSense unit configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: adsense # AdSense client ID client_id: '' # AdSense AD unit ID slot_id: '' # Follow.it email subscription widget configurations - # Where should the widget be placed, left sidebar or right sidebar position: '' type: followit # Hint text under the email input description: # Subscription form action URL action_url: '' # Feed claiming verification code verification_code: ''# Plugin configurations# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/plugins: # Enable page startup animations animejs: true # Show the &quot;back to top&quot; button back_to_top: true # Baidu Analytics plugin settings # https://tongji.baidu.com baidu_analytics: # Baidu Analytics tracking ID tracking_id: # Bing Webmaster Tools plugin settings # https://www.bing.com/toolbox/webmaster/ bing_webmaster: # Bing Webmaster Tools tracking ID in the &lt;meta&gt; tag tracking_id: # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: true # CNZZ statistics # https://www.umeng.com/web cnzz: # CNZZ tracker id id: # CNZZ website id web_id: # Alerting users about the use of cookies # https://www.osano.com/cookieconsent/ cookie_consent: # The compliance type. Can be &quot;info&quot;, &quot;opt-in&quot;, or &quot;opt-out&quot; type: info # Theme of the popup. Can be &quot;block&quot;, &quot;edgeless&quot;, or &quot;classic&quot; theme: edgeless # Whether the popup should stay static regardless of the page scrolls static: false # Where on the screen the consent popup should display position: bottom-left # URL to your site's cookie policy policyLink: https://www.cookiesandyou.com/ # Enable the lightGallery and Justified Gallery plugins gallery: true # Google Analytics plugin settings # https://analytics.google.com google_analytics: # Google Analytics tracking ID tracking_id: # Hotjar user feedback plugin # https://www.hotjar.com/ hotjar: # Hotjar site id site_id: # Enable the KaTeX math typesetting support # https://katex.org/ katex: false # Enable the MathJax math typesetting support # https://www.mathjax.org/ mathjax: false # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated_browser: false # Show a progress bar at top of the page on page loading progressbar: true # Statcounter statistics # https://statcounter.com/ statcounter: # Statcounter project id project: # Statcounter project security code security: # Twitter conversion tracking plugin settings # https://business.twitter.com/en/help/campaign-measurement-and-analytics/conversion-tracking-for-websites.html twitter_conversion_tracking: # Twitter Pixel ID pixel_id: # CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL template of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL template of the webfont CDN provider fontcdn: google # Name or URL of the fontawesome icon font CDN provider iconcdn: fontawesome","link":"/posts/92a0ec66.html"},{"title":"markdown笔记工具分析","text":"兜兜转转选择了使用obsidian作为自己的markdown笔记工具。记录一下自己使用其他笔记工具的感受。 typora能很好的完成markdown的编写工作，但缺少文件管理能力。没有标签页。没有其他功能。 思源支持markdown编辑，但数据格式其实是sy这样的私有格式。每一段都有链接能力，粒度太小，其实我用不上。加载速度较慢。导出markdown还算方便，可以整个笔记本导出。 语雀建议不要使用它进行编辑。只作为发布平台。真的，绑架用户是最垃圾的行为。导出便捷性极差，不能整个知识库导出。文章只能一篇一篇导出。我清楚的记得，早期的语雀是可以整个知识库一起导出的，而且导出的格式有很多种，包括word，pdf，markdown等等。我才放心使用的，没想到后面更新后把这些都嘎掉了。现在知识库导出只能导出私有格式，文章导出除了私有格式只有markdown，真的，很，讨厌你们这样的行为。 迁移成本高，说到底就是绑架用户，网页端体验不佳，切换页面加载很不舒服。不能离线使用。 obsidian比较全面的工具。官方同步功能价格昂贵，还好有remote save这样的插件可以实现同步功能，我个人结合OneDrive使用十分方便，移动端和PC端同步数据方便。数据就是markdown，备份方便。 缺点：在公司不敢用。 VSCODE+office view扩展不得已的选择，不过比typora文件管理方便一些。","link":"/posts/c1f4e46a.html"},{"title":"数字IC设计开发Gvim配置","text":"插件傻瓜包安装说明推荐使用git clone获取：GitHub - RongyeL/ryGvim: my gvim config and plugin将ryGvim目录下的.vim文件夹和.vimrc文件，移到用户根目录下，即可使用。 如果不会使用git，也可以直接在GitHub先下载zip，然后再拖到虚拟机中使用。windows也是可以用的，但是配置文件不一样，好像是_vimrc这样的文件，所以需要做一些调整。 仅支持Gvim 8.0以上版本，基于VIM 8 pack特性进行插件管理。不再需要gvim支持python环境。 以下插件，ale需要补充安装iverilog才能进行语法检查。ctags也需要另外安装如果是Ubuntu，跟我一样的版本。使用同样的阿里源。应该可以直接使用sudo apt install ctags 完成安装。 名称 功能 git clone链接 nerdtree 文件目录树 https://github.com/preservim/nerdtree.git nerdcommenter 快速注释 https://github.com/preservim/nerdcommenter.git vim-airline 状态栏美化 https://github.com/vim-airline/vim-airline.git vim-snippets 代码片段库 https://github.com/honza/vim-snippets.git vim-snipmate 代码片段展开 https://github.com/garbas/vim-snipmate.git vim-addon-mw-utils vim-snipmate依赖插件 https://github.com/MarcWeber/vim-addon-mw-utils.git tlib_vim vim-snipmate依赖插件 https://github.com/tomtom/tlib_vim.git vim-easy-align 代码对齐 https://github.com/junegunn/vim-easy-align.git neocomplcache 代码补全 https://github.com/Shougo/neocomplcache.vim.git auto-pairs 自动配对括号 https://github.com/jiangmiao/auto-pairs.git ale 语法检查 https://github.com/dense-analysis/ale.git gruvbox 色彩空间 https://github.com/morhetz/gruvbox.git indentLine 缩进标识 https://github.com/Yggdroot/indentLine.git vlog_inst_gen Verilog自动例化 https://github.com/vim-scripts/vlog_inst_gen.git ctags ctags模块标签 使用sudo apt install ctags 命令直接安装 官网：Exuberant Ctags 各插件使用说明nerdtree文件目录树配置信息 常用命令按F5展开/关闭目录树光标移动到需打开的文件，o：打开到当前窗口t：打开并新建标签页到当前窗口， nerdcommenter快速注释配置信息 常用命令,cc：注释,cu：取消注释,c&lt;空格&gt;：最常使用的操作，可以自动判断是注释还是取消注释,cA：注意是大写A，也就是shift+a，在行末添加注释 vim-airline状态栏美化就是下面的状态栏美化，没有做任何调整。 vim-snippets代码片段库在该路径下找到verilog的代码片段仓库，添加自己的代码块。如图，这里简单加了一个shixu的snippet。 vim-snipmate代码片段展开相关配置 常用命令如上，在vim-snippets代码片段库中添加了一个shixu的代码在输入shixu后，按tab即可展开该代码片段。 vim-easy-align代码对齐相关配置 常用命令比较简单的对齐插件，一般依据“空格”、“逗号，”“等号=”来完成代码对齐选中对齐的代码后，输入ga+“对齐依据”建议不要全选代码对齐，效果不好。小范围对齐即可。如下，先根据“=”进行对齐，再根据“，”进行对齐。自己再手动调整一下就好。 neocomplcache代码补全相关配置 常用命令此处的代码补全和上面的代码片段不是一个含义。这里的补全，会根据缓存信息，判断你需要输入的内容是什么。除了代码外，路径之类的也是可以补全的。输入部分内容，会自动展开补全列表，ctrl+n下移，回车确定补全。 auto-pairs自动配对括号输入括号时自动成对出现。 ale语法检查相关配置注意，需要补充安装iverilog才能使用Ubuntu下可以直接用命令安装，centos可能需要下载源文件安装。除了iverilog，还有其他语法工具可以使用，详见插件github。 gruvbox色彩空间自己调整过的色彩方案，如果想自己搞可以看看我之前的视频。没啥用的小技巧 - Gvim自定义色彩方案_哔哩哔哩_bilibili建议不要花太多时间，看的顺眼就行。 indentLine缩进标识比较容易判断缩进情况，以4个空格为一个缩进单位。 vlog_inst_genVerilog自动例化相关配置 常用命令,ig，生成当前文件的例化文件，会自动存储到剪贴板中。按esc退出冒出的信息，在需要例化的地方粘贴代码 ctags模块标签相关配置该功能其实不是一个插件，需自行安装ctags，Ubuntu下可以命令直接安装sudo apt install ctags 常用命令gi：进入光标所在未知的模块端口go：退出到上一级模块 .vimrc配置文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189&quot;-----------------------------------------------------------------------------&quot; basic configuration &quot;-----------------------------------------------------------------------------syntax on &quot; syntax highlightfiletype plugin indent on &quot; plugins and indentation based on file type set hlsearch &quot; search highlightset ignorecase &quot; ignore search caseset cuc &quot; current column highlightset cul &quot; current line highlightset nu &quot; show line numberset fileencoding=utf-8 &quot;prevent garbled charactersset fenc=utf-8set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936,big－5 set enc=utf-8source $VIMRUNTIME/delmenu.vimsource $VIMRUNTIME/menu.vimlet &amp;termencoding=&amp;encodingset guifont=Monospace\\ 12 &quot; set font set tabstop=4 &quot; set tab to 4 spacesset expandtabset shiftwidth=4 &quot;set auto-indent to 4 spacesset softtabstop=4 &quot; set the back key to delete 4 spacesset ruler &quot; set show rulerset smartindent &quot; set smart auto-indentset showcmd &quot; show commandset autochdir &quot; auto-swith working directorywinpos 235 235 &quot; set windows position set lines=40 columns=108 &quot; set windows size set nocompatible &quot; remove vi consistency&quot;-----------------------------------------------------------------------------&quot; customize shortcut keys &quot;-----------------------------------------------------------------------------imap ii &lt;ESC&gt;nmap ww :w&lt;CR&gt;nmap qq :q&lt;CR&gt; nmap fd * let mapleader = &quot;,&quot;&quot;-----------------------------------------------------------------------------&quot; plugin: NERDTree&quot;-----------------------------------------------------------------------------map &lt;leader&gt;ne :NERDTreeToggle&lt;CR&gt;let g:NERDTreeWinSize = 25 &quot; set nerdtree sizelet NERDTreeIgnore=['\\.pyc','\\~$','\\.swp'] &quot; ignore the display of the following fileslet NERDTreeShowHidden=1 &quot; show hidden fileslet g:NERDTreeDirArrowExpandable = '▸' &quot; modify the default arrow symbollet g:NERDTreeDirArrowCollapsible = '▾'autocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp; b:NERDTree.isTabTree()) | q | endif&quot; nerdtree hot key mappingmap &lt;F5&gt; :NERDTreeMirror&lt;CR&gt;map &lt;F5&gt; :NERDTreeToggle&lt;CR&gt;map &lt;leader&gt;f :NERDTreeFind&lt;CR&gt;&quot;-----------------------------------------------------------------------------&quot; plugin: airline&quot;-----------------------------------------------------------------------------let g:airline_theme='base16_gruvbox_dark_hard'&quot;-----------------------------------------------------------------------------&quot; plugin: indentline&quot;-----------------------------------------------------------------------------let g:indentLine_enable = 1let g:autopep8_disable_show_diff=1let g:indentLine_char_list = ['|', '¦', '┆', '┊']&quot;-----------------------------------------------------------------------------&quot; plugin: easyalign&quot;-----------------------------------------------------------------------------&quot; Start interactive EasyAlign in visual mode (e.g. vipga)xmap ga &lt;Plug&gt;(EasyAlign)&quot; Start interactive EasyAlign for a motion/text object (e.g. gaip)nmap ga &lt;Plug&gt;(EasyAlign)&quot;-----------------------------------------------------------------------------&quot; plugin: neocomplcache&quot;-----------------------------------------------------------------------------let g:neocomplcache_enable_at_startup = 1 &quot; auto start neocomplcache let g:neocomplcache_enable_auto_select = 1 &quot; auto select the first item in the listlet g:neocomplcache_min_syntax_length = 2 &quot; Set minimum syntax keyword length.let g:neocomplcache_lock_buffer_name_pattern = '\\*ku\\*'&quot; inoremap &lt;expr&gt;&lt;CR&gt; neocomplcache#smart_close_popup() . &quot;\\&lt;CR&gt;&quot;inoremap &lt;expr&gt;&lt;C-Y&gt; neocomplcache#close_popup()inoremap &lt;expr&gt;&lt;space&gt; neocomplcache#undo_completion()inoremap &lt;expr&gt;&lt;Enter&gt; pumvisible() ? &quot;\\&lt;C-Y&gt;&quot; : &quot;\\&lt;Enter&gt;&quot; &quot;-----------------------------------------------------------------------------&quot; plugin: gruvbox&quot;-----------------------------------------------------------------------------set bg=darkcolorscheme gruvbox&quot;-----------------------------------------------------------------------------&quot; plugin: nerdcommender&quot;-----------------------------------------------------------------------------&quot; my key: ,cl /,cc /,cu /,c&lt;space&gt;let g:NERDSpaceDelims = 1 &quot; add space after comment&quot;-----------------------------------------------------------------------------&quot; plugin: ale&quot;-----------------------------------------------------------------------------&quot;keep the sign gutter openlet g:ale_sign_column_always = 1let g:ale_sign_error = '&gt;&gt;'let g:ale_sign_warning = '--'&quot; show errors or warnings in my statuslinelet g:airline#extensions#ale#enabled = 1 &quot; use quickfix list instead of the loclistlet g:ale_set_loclist = 0let g:ale_set_quickfix = 1&quot; only enable these linterslet g:ale_linters = {\\ 'verilog': ['iverilog']\\}nmap &lt;silent&gt; &lt;C-k&gt; &lt;Plug&gt;(ale_previous_wrap)nmap &lt;silent&gt; &lt;C-J&gt; &lt;Plug&gt;(ale_next_wrap)&quot;-----------------------------------------------------------------------------&quot; plugin: ctags&quot;-----------------------------------------------------------------------------nmap gi &lt;C-]&gt; &quot; go into instance module or output port nmap go &lt;C-o&gt; &quot; go out to upper stage &quot;-----------------------------------------------------------------------------&quot; plugin: vlogInst&quot;-----------------------------------------------------------------------------so ~/.vim/pack/default/start/vlog_inst_gen/vlog_inst_gen.vim &quot; set path&quot; key: (,ig)&quot;-----------------------------------------------------------------------------&quot; plugin: snipmate&quot;-----------------------------------------------------------------------------imap &lt;tab&gt; &lt;Plug&gt;snipMateTrigger &quot; tab expand code snippetsimap &lt;tab&gt; &lt;Plug&gt;snipMateNextOrTriggerimap &lt;C-tab&gt; &lt;Plug&gt;snipMateShow &quot; tab expand code snippets list&quot;-----------------------------------------------------------------------------&quot; auto add file header when create new file&quot;-----------------------------------------------------------------------------autocmd BufNewFile *.v,*.sv,*.cpp,*.c,*.h exec &quot;:call AddHeader()&quot;autocmd BufWrite *.v call UpdateLastModifyTime()function s:GetUserName() let user_name = &quot;Rongye&quot; return user_nameendfunction function AddHeader() let line = getline(1) let filename = expand(&quot;%&quot;) call append(0, &quot;// +FHDR----------------------------------------------------------------------------&quot;) call append(1, &quot;// Copyright (c) &quot;.strftime(&quot;%Y &quot;) ) call append(2, &quot;// ALL RIGHTS RESERVED&quot;) call append(3, &quot;// ---------------------------------------------------------------------------------&quot;) call append(4, &quot;// Filename : &quot;.filename) call append(5, &quot;// Author : &quot;.s:GetUserName()) call append(6, &quot;// Created On : &quot;.strftime(&quot;%Y-%m-%d %H:%M&quot;)) call append(7, &quot;// Last Modified : &quot;) call append(8, &quot;// ---------------------------------------------------------------------------------&quot;) call append(9, &quot;// Description : &quot;) call append(10, &quot;//&quot;) call append(11, &quot;//&quot;) call append(12, &quot;// -FHDR----------------------------------------------------------------------------&quot;)endfunction &quot;-----------------------------------------------------------------------------&quot; auto update file header modifyTime if write&quot;-----------------------------------------------------------------------------function UpdateLastModifyTime() let line = getline(8) if line =~ '// Last Modified' call setline(8,&quot;// Last Modified : &quot; . strftime(&quot;%Y-%m-%d %H:%M&quot;)) endifendfunction ‍","link":"/posts/f60848c2.html"},{"title":"定位错误是学习的最快方式","text":"工作的好伙伴，verdi，这个东西看代码和波形实在是太diao了，就是界面灰灰的，看的不是很好看。 今天看了一天的波形，给验证定位错误……累是真的累，疲惫是真的疲惫，但学习速度是真的快。 说实话，之前我也把CHI协议看了个遍了，对协议中涵盖的绝大多数内容也有了一定的概念，但这种概念，终究是停留在纸面上的，只有真正的看了波形，看了代码，才能将协议转化为实践。 而且，如果是通过定位错误，debug的方式来看波形，效果比正向代码要更好。因此正确的结果千篇一律，错误的原因千奇百怪，通过分析定位错误出现在哪里，为什么会产生，怎么解决，是内部模块逻辑问题还是外部激励问题，理解了这些要点，对于知识的理解将会大幅提升。 所以，定位错误就是学习的最快方式，各位学习东西的时候一定要把代码跑起来，跑出波形来，这样看起来才更直观更有效。 错误嘛，说实话肯定是避免不了的，预期之外的错误才是有效错误，希望各位都能遇到更多错误（笑，见的问题多了，就成了大佬了（大概","link":"/posts/b5c1014c.html"},{"title":"为什么要用Markdown做笔记","text":"markdown是一种，简单文本格式，它的内容格式其实是固定的。对比最明显的就是word文档这种富文本。 正文的字号，字体，每一级标题的字号字体，文本的颜色，序列形式，表格格式，一切都是设定好的。当然，具体展现形式还是可以通过主题配置进行修改，但本质是固定的。可以看一下这个测试用例，一切都是有定数的。Markdown 测试用例 - GShang2021 - 博客园 如果尝试用过word做笔记，就肯定会遇到一些比较烦的情况。比如，复制网页内容的时候，还需要特意调整格式，缩进乱跑等情况。还有表格，有时候自动变化的表格会让人很抓狂。 而在markdown里，由于文本的格式是固定的，所以你复制进入的是正文，它就会自动使用正文的格式，保持文章格式的一致性。这样可以很轻松的写出好看的文章，保持一致性，看的非常舒服。 另外，md作为一种代码，它的信息量小，存储成本极低。甚至可以用git进行版本管理，非常有趣。当然，我一般也不会去进行版本管理，因为文章的内容一般是新增的。我也没有回退版本的需求。不过能托管到git仓上，对于数据的备份也是有极大帮助的。 另外一点，markdown作为一种代码格式，他是有自己的语法的。当你想加粗，注释，引用，增加序列的时候，通过输入的方式就可以完成。在熟练使用后，可以提升编辑的流畅感。不需要动鼠标，不需要按快捷键，虽然这样也很方便。 当然也有不方便的地方，那就是图片。如果能够使用一些方式进行同步的话，其实还是能够接受的，但如果想将内容输出为博客，传到网络上的话，可能需要研究一下图床才行。","link":"/posts/c97fc71d.html"},{"title":"报IC设计培训课程有用吗","text":"由于前两年的IC热，导致IC培训班也是大量出现， 各种打着数字IC设计工程师必学课程名号的培训课程一个接一个的冒出来。说实话，现在IC设计培训市场是混乱的。据我当前观察下来，在数字设计这一个领域，其实根本没有一个比较成熟比较完整的培训资源，值得人们去学习和购买。课程内容水平参差不齐，课程时间较短。 只能说，IC热潮引得一些人投入到培训市场来赚快钱了。 我个人在工作后，认为在学生阶段可以尝试提前学习的一些工作知识和能力如下： gvim ARM V8架构 AXI总线 基本电路编写 Verilog synopsy工具：vcs、verdi等 但在实际工作后，你不一定会使用到这些。 因为数字芯片设计，这个岗位，它只能视为一种“工具”，工具怎么用，是看你所在领域决定的。 你如果做处理芯片，图像芯片，算法芯片等等，这些都是不太一样的，领域内的知识才是真正的工作生产力。 学生阶段学这些，我只能说是培养一下基本办公能力。像AXI这种，可能用的比较多，可以提前学一下。 回到这个IC培训的问题上来，我觉得，课是可以不买的，课表可以看看，然后自己对着课表学就好了。 做IC的话，最好不要想着速成，比如学习AXI，老想着有什么东西可以让你快速学会，不如多看看原版的协议手册。","link":"/posts/8ba797de.html"},{"title":"《香格里拉边境》为什么让我兴奋","text":"游戏，是我生活的一个重要旋律。从小学一年级开始，我就在楼上大哥哥的指导下，玩上了冒险岛这个网游，至今我都偶尔会上线玩一玩。当然，国内游戏环境实在太差了……这就是另外的话题了暂且跳过。 总之，网游这个东西我玩了很多年了，特别是角色扮演游戏MMO，在网络中，扮演一个非现实的角色和其他玩家一起冒险，打怪，看NPC的故事，会给我带来极大的快乐~ 冒险岛、龙之谷、剑灵、最终幻想14、激战2、魔兽世界、艾尔之光、彩虹岛、黑色沙漠……人生二十来年，也是辗转过多个异世界了呢。 所以游戏类的网文，也一直都是我的心头好。经典的《网游之纵横天下》、《网游之贼行天下》、《全职高手》、《网游之近战法师》、《惊悚乐园》……一个游戏网络世界，可能就是最对我胃口的世界设定。这几本书我都重看了不知道多少遍了…… 那么在动漫里，相关的也不少了其实。尤其是在《刀剑神域》的带领下，虚拟现实游戏类的动漫漫画轻小说作品那是层出不穷，《OVERLORD》至今还是我最喜欢的动漫/轻小说之一。 就是要这种大型角色扮演！MMO的网游！丰富的世界观，精细的职业技能，精彩的剧情，广阔的探险空间~太对我胃口了。而《香格里拉边境》，就是我时隔多年看到的新的网游动漫。 香格里拉的冒险动漫全称：香格里拉边境～粪作猎人向神作游戏发起挑战～男主是一个「粪作猎人」，喜欢玩各种粪作游戏，挑战不合理还能得到极大的快感。在通关了某部粪作后，为了换换口味，男主这次向神作「香格里拉边境」发起了进攻，在游戏的过程中，遇见了许多奇特的冒险。 撰写本文的时候已经看到第四集了，真的一跃成为我最期待的2023年10月新番。 男主是那种操作类玩家，追求极致的输出，脆皮，刀尖添血的那种。动漫也很好的制作出了精彩的打斗，使用完美格挡和巨型boss鏖战的打戏可谓是前三集的巅峰剧情。剧情中出现的boss也很有魄力，其他玩家角色绘制的也很好看，最重要的是，那种游戏氛围塑造的特别好。角色加点的分析、装备的选择、独特剧情的展开，看的我是真的过瘾！还有这只兔兔，太可爱了~ 看游戏题材的动漫和小说，其实也就是想通过“玩”以外的方式，享受到游戏的乐趣，而《香格里拉边境》它做到了。 该动漫其实是有原作漫画的，在日本旅游的时候刚好看到过它的超大海报，可见其原作实力充足，我觉得动漫是真的可以好好期待下去，期待下周的播出。","link":"/posts/3b1a7464.html"},{"title":"对Stage1页表属性attrindex理解","text":"在看ARM VMSAv8的时候，注意到一个有意思的地方。最后获取到page或者block的时候，属性域段中，stage1的页表最低位属性用的是AttrIndex，而在stage2的页表属性用的是MemAttr 这两者主要是什么区别呢，也不是很难理解，像下面这个，4bit的MenAttr直接就表示memory类型，高2bit用来区分Device和normal memory的类型。低2bit用来具体细分是什么device或normal memory类型。 这里就不展开讲了。 重点是上面的stage1 页表，attrindex的使用，它并不是单独就能表示属性的这个index索引，指的是对MAIR（Memory Attribute Indirection Register）这个寄存器内部进行索引。MAIR根据不同异常级别有好几个，但其实内部都是一样的，从图上就可以看出，一个64bit的MAIR寄存器中有8个Attr，每8bit为一个Attr。至于这8bit是如何进一步表示属性的，这里也不展开说了，具体可以看架构手册D13.2.97 通过stage1 page中的attrindex属性域段，加上MAIR寄存器中配置的Attr，才能够表示一个地址空间的属性。这样可以理解，但重点在于为什么要这样做。 减少无效化操作，就是这种设计的核心意义。 如果想要改变属性，就需要改页表的话，修改页表后必须发出无效化命令到各个tlb中进行无效化，而进行无效化的代价其实是很大的。那为了减少无效化操作，就尽可能不要修改页表， 这里使用attrindex，索引寄存器中配置的属性信息，这意味着如果想要修改属性，仅仅需要修改寄存器值就好了，软件修改寄存器的代价那就比较小了。 至于为什么只有stage1 的页表是这样设计的，还没想太明白。可能终究这样也是需要付出寄存器的代价的，而stage2翻译（虚拟化，IPA-&gt;PA）的需求比较小，所以就直接把MemAttr放到页表的属性域段中吧。","link":"/posts/d429f5fd.html"},{"title":"ARM memory属性的理解","text":"参考文献ARM各种Memory类型理解 - 知乎Cache知识整理-Read-Allocate/Write-Allocate_IC小牛牛的博客-CSDN博客_write allocateWrite-back，Write-through及write allocate_wenxiaohua_supper的博客-CSDN博客CHI到底是干嘛的 保证cache一致性 2.3 snoop_数字芯片设计与验证－－关易寿的博客-CSDN博客_cache一致性的 chi协议 CHI中对属性的描述memattr和snpattr，在CHI的协议层通道域段中，是有单独表述的。 MemAttr根据链接，可以看到memattr(memory attributes)，涵盖的是EWA(early write acknowledgement)，Device，cacheable和allocate这几个属性的信息。 EWA EWA主要是针对写事务响应的来源进行了指示，这部分内容主要与保序机制相关。 写事务完成与否，是需要给出反馈的，这里的early，涵盖的意思就是写完成响应能不能提前返回。什么叫提前返回呢，这里涉及到CHI总线的结构，当某个请求节点发出写事务，会经过中间节点，然后再发给实际进行写的节点，比如一个ddr memory。 那么，如果写完成响应，是在写数据实实在在的到达了ddr memory以后才发出，这就属于标准的完成响应。如果，在写事务从中间节点发出了， 不管有没有真的写到ddr memory，都算写事务完成了，然后中间节点直接返回了一个写完成响应，那么这就叫做提前返回。 EWA指示的就是，本次事务能不能提前返回写完成响应。 Device device属性是和normal memory相对应的概念。 Device，就是设备。表面这段memory空间是一个设备在使用的。这里简单理解就是，它不是一个单纯的存数据的memory空间。很多Device memory空间，里面放的是对这个设备进行控制的信息，比如是否使能这个设备。所以对于这种Device属性，会有很多特殊的要求，比如保序要求会更高。 normal memory就是我们普通概念的内存，如DDR。 Cacheable 顾名思义，就是可缓存性。 如果一个事务访问的memory空间是可缓存的，这代表该段内存的数据在cache中也有，本次事务可以先去看看cache里面数据是否有效，如果能直接从cache中把数据读走，那就最好了。因此访问cache的速度是远快于访问内存的。 Allocate关于allocate，需要展开说说Read-Allocate/Write-Allocate它指示的是在访问cache以后发生的行为。 假定现在进行读事务，访问cache miss了，如果是Read through，即直接从内存中读取数据；如果是Read allocate，则需要先把数据读取到Cache中，再从Cache中读数据。 如果是写事务，则不太一样，需要分为hit和miss的情况，hit的时候看的是Write through还是Write back。miss的时候看是否Write allocate。 假定现在进行写事务，访问cache hit了，如果是Write through，就把数据同时写到Cache和内存中；如果是Write back，则先只把数据写到Cache中，等到释放这个cache的时候，才把修改后的内容刷新到内存中。 写事务访问cache miss了，如果是Write allocate，就先把要写的数据载入到Cache中，等到释放这个cache的时候，才把修改后的内容刷新到内存中。 一般，Write Allocate与Write Back一起使用，No Write Allocate与Write Through一起使用。 SnpAttr这个属性域段就比较简单，与snoop行为相关这个东西倒是在CHI中才有，CHI协议全称是Coherent Hub Interface。重点就在这个coherent一致性上，该协议用来确保Cache的一致性。而Snoop就是CHI实现一致性维护的机制，这里就不展开说明了。 这个域段就是用来描述本次事务是否会进行snoop。 汇总这个表中还讲了下order，这里的保序是CHI中使用的，就不进一步展开了。看这个表，前面的多种属性描述，最终会汇总为一个Memory type属性。 AXI相关属性描述AxCACHE在AXI总线协议中，主要是在AxCACHE这个域段中对事务的memory属性进行了定义。这边会简单一点，因为没有一致性维护的工作。保序机制也不是通过这个属性域段实现的。可以看到，这边最后也是汇总描述为memory type，可以对比看一下上面那个表，它是非常接近的， 所以说，ARM整个架构中，对于memory属性的描述是有一套非常丰富的机制的，如果要将各种协议融汇贯通使用起来，对memory 属性的深入理解应该是必不可少的。 ARM架构手册相关描述关于memory属性最全面的描述，那当然还是在ARM架构手册中在B2.7这一个章节中，对所有的memory 属性表述都进行了说明内容实在是太多了，本文讲不完，以后再针对性的进行学习。","link":"/posts/2957f6bf.html"},{"title":"CHI flitpend是干嘛的","text":"参考文献ARM官方手册：AMBA 5 CHI Architecture Specification CHI协议链路层 - 知乎 FLITPEND协议描述CHI协议链路层的一个信号 之前看协议的时候有点忽略了这个东西 这个PEND信号是什么含义，可能字面上不太好理解。 它其实就是个时钟门控信号 FLITPEND信号预测接下来会有一笔有效的flit传输。 可以用来开启时钟 正常来讲，FLITPEND需要比FLITV快一个时钟， 也就是在FLITPEND有效的下一拍发来数据， 所以该信号就是一笔预测信号，帮助SLV开启时钟的。 问题记录这次定位问题就是在这个地方， 使用了pend，但是发过来的pend不准。 本来FLITPEND需要比FLITV早一拍到， 但可能由于multicycle的原因，导致慢了一点点， FLITPEND没有在早一拍的时钟上升沿到达， FLITPEND和FLITV同拍了， 这会导致时钟门控打开的晚了， 从时序图可以看到， FLITV和FLIT才是应该同拍的信号， 时钟门控打开的晚了， 导致在某个模块中，同拍输入FLITV和FLIT， 在下一个时钟变成了错拍的情况： FLITV过了一拍，FLIT过了一拍才输出。 FLITV和FLIT错拍了， 后续所有采集都会采错，就，导致系统挂死了。","link":"/posts/b6eda8db.html"},{"title":"我的知识笔记流水思维殿堂","text":"关于折腾笔记系统的意义首先是好玩。花费一些时间，去折腾一些软件、技术、工具啥的，对我来说是一种能够感受到乐趣的事情。 就跟玩游戏一样，去研究这些工具，使用的时候把各种插件配置好，去搞一些小手段，最终实现自己的笔记系统。这种乐趣，如果你也能够体会的话，可能就会像我一样经常折腾到半夜一两点=。=嗯，就跟玩游戏一样，真的很有趣。 再来的话，确实是有很多个人诉求吧。以前曾经使用过，语雀、notion啥的来作为自己的知识系统，但很遗憾，这些东西都有一个非常大的问题让我很讨厌。就是数据不在本地。 这个真的非常令人讨厌，比如notion。。国内的网络环境想要直连notion，其实是很麻烦的。但是notion这玩意居然不联网就完全不给使用。有时候网络环境比较差的时候，我自己的内容我都看不到。这让我真的很烦。同时notion这种all in one的东西，虽然最开始折腾的时候会有新鲜感感觉很牛逼很有用。但实际工作和生活过程中我就会发现，其实笔记才是我唯一的诉求。而一本无法随时随地查阅的笔记，对我来说毫无意义，因此notion是第一个被我放弃掉的。 相比起notion，语雀这种国内软件就没有太多连接的问题。但是，他们更恶劣我只能说。非常的，恶劣。他们干了一件事情，那就是极度限制你的离开。你写在上面的文章，笔记，照片。在你想要离开的时候，层层加码。不仅不能正常导出成markdown格式，导出效果还非常的差。图片在语雀自己的图床上，笔记一旦离开了语雀甚至无法显示。我的数据，被绑架了。这就是国内很多笔记软件干的事情。比如语雀、印象笔记、思源笔记等。希望你们好自为之。 明确诉求后的选择经过一些折腾后，我是更加明确自己的诉求，那就是笔记。知识、档案、随手记、文献摘要。只要能满足我这几个需求就可以了。 这些数据一定要是在我的本地，能够轻松备份，多端浏览。markdown这种最适合做笔记的语言格式自然是我的首选，上手难度很低，基本的功能语法会写就可以了。 markdown的笔记工具其实有很多，我重点使用过的就是typora和obsidian。 typora很可惜，被我放弃掉了。因为它更多的只能算作一种markdown的撰写工具，不能作为知识沉淀的空间。因为它太简单了，太纯粹了。纯粹到我无法舒适的去管理我的笔记，它的文件管理页表可以说是，一塌糊涂，毫无层次。而且不支持多页签，即便有各种大佬搞了多页签的效果，但实际体验真的可以说是比较糟糕。 obsidian就有未来一点，毕竟有丰富的插件库。当然我还是使用的比较克制的。对于obsidian，我不会忘记，就是要做一个笔记系统。我并不需要一个all in one的玩意，这个在notion的时候就很清晰了。插件的安装也比较简单，就是稍微美化一下界面、图床上传、dataview支持等等。在不改变markdown的本质的同时，丰富一点点功能就行。文章的结构和数据不能超过markdown本身支持的范畴，文章要能直接同步到博客。大概实现这些就可以了。obisidan 在经过一番整理以后也比较好看，界面简洁内容集中。能够兼顾内容的开发和一些待办的提醒。目前使用起来是比较流程了。 Readwise，信息摄入Obsidian，数据沉积闪念胶囊我认为闪念胶囊没有必要有任何格式，随便写入就好。当进行归档的时候，无价值的直接删除，有意义的当场扩充，可以转化为日记，游记，浅见，档案等。 当前笔记分类还是过于繁杂了，今天精简一下。 整理笔记数据流 Hexo，知识呈献","link":"/posts/56a2756d.html"},{"title":"什么叫RAS中断","text":"参考文献RAS简介 - 知乎4.11. Reliability, Availability, and Serviceability (RAS) Extensions — Trusted Firmware-A documentation RAS全称为 Reliability, Availability，Serviceability。 Reliability（可靠性）指的是系统必须尽可能的可靠，不会意外的崩溃，重启甚至导致系统物理损坏，这意味着一个具有可靠性的系统必须能够对于某些小的错误能够做到自修复，对于无法自修复的错误也尽可能进行隔离，保障系统其余部分正常运转。 Availability（可用性）指的是系统必须能够确保尽可能长时间工作而不下线，即使系统出现一些小的问题也不会影响整个系统的正常运行，在某些情况下甚至可以进行 Hot Plug 的操作，替换有问题的组件，从而严格的确保系统的宕机时间在一定范围内。 Serviceability （可服务性）指的是系统能够提供便利的诊断功能，如系统日志，动态检测等手段方便管理人员进行系统诊断和维护操作，从而及早的发现错误并且修复错误。 RAS中断搜不到太多相关的资料，不过基于上述基本内容可以大致理解。ras中断就是，让系统比较可靠，的中断信号。常见的ras中断有： 这些中断是保证系统稳定运行的必要中断，保证系统不会出现重大错误的中断，大致就这么理解吧。 具体，应该由实现方案决定。","link":"/posts/4b0c4420.html"},{"title":"CHI l-credit的使用关注点","text":"握手差异CHI和AXI的一个很大不同，就在于握手机制。 AXI协议中使用的是valid-ready握手的方式， CHI协议中则设计了一套credit机制进行握手。 credit握手credit由rx发出，tx接收。tx每拥有一个credit，就可以向rx发送一笔数据，即一次flitv。rx每收到一个flitv，就再发出一个credit给tx。每个通道（REQ/SNP/RSP/DATA）都有独立的credit。 credit和valid-ready的一个最大区别，就在于：valid-ready握手是必须握完一个事务才能握下一个，credit握手则是，我可以一次性给你发很多个credit，你慢慢发事务。 给credit的含义就是，你可以发，而我必须接收，所以rx内的buffer深度必须大于等于credit数量，不然就会丢包。 接口流水两个节点之间，假定路径上有4拍延迟，那么需要4个credit，就可以保证流水。 如果flitv或者credit因为走线加拍，那么credit数量就需要对应增加。 当然，在4拍路径下，给6个credit，有2个credit的裕量，这肯定也是可以的，不会有功能问题，但存在面积代价。 由于多了2个credit，RX的buffer或者FIFO就必须对应增加2深。当数据位宽较大时，FIFO深度多了2深就算是比较明显的浪费了。","link":"/posts/418ca596.html"},{"title":"对ARM access flag和dirty state机制理解","text":"参考文献官方ARM 架构手册：Arm Architecture Reference Manual for A-profile architectureH.a版本从D5.4.7小结开始 The Access flagARM的access flag和dirty state机制用于进行页表的维护，其中的Access flag其实挺好理解的，就是最后的Page中有个AF域段，如果是0，在被访问以后就更新为1。但dirty state我一直理解都不太好，Page中只有一个DBM（Dirty Bit Modifier）域段，这个域段的是怎样用的，一直没看明白。 经过一段时间的思考，现在总算是理清楚了。Access flag指示内存页是否被访问过。AF域段被设置为0后，首次被访问时会被修改为1。 The dirty statedirty state指示是否修改了内存页或内存段。dirty state可以由硬件管理，如 D5-4863 页HTTU所述dirty state信息使用访问权限位 AP[2] 和 S2AP[1] 以及 DBM 位进行编码。 Page的域段这里补充一下AF、AP、S2AP、DBM这几个域段的概念。在page的属性域段中， AF就是access flag AP是访问权限 S2AP和AP是一样的只是S2AP是stage2翻译的时候获得页的域段。stage2翻译就是IPA-&gt;PA的翻译阶段，这里不过多展开描述。 DBM Dirty修改位这个东西看起来很抽象，后面再展开表述它的使用 软件管理Access flagArmv8.0 要求软件管理访问标志。这意味着，每当尝试将访问标志的值为 0 的转换表描述符条目读入 TLB 时，都会生成访问标志错误。访问标志机制期望，当发生访问标志错误时，软件会在导致故障的转换表条目中将访问标志重置为 1。这可以防止下次访问内存位置时发生故障。访问标志设置为 0 的条目永远不会保留在 TLB 中，这意味着软件在设置标志后不必从 TLB 刷新条目。 这里稍微表述了一下，ARM V8.0是只支持通过软件来管理access flag的。当访问到AF为0的页时，就会产生一个fault错误告诉软件，软件去修改Page的AF为1，然后再次访问就正常了。显然，这里上报fault，软件再去改写AF，其实是要耗费软件的精力的。这就很麻烦。 硬件管理Access flag 和Dirty state从ARM V8.1开始，支持硬件管理了，也就是HTTU(Hardware Translation Table Update)。 简单来说，就是硬件可以直接去修改AF域段，这里的硬件指的应该是MMU/SMMU，在PTW获取最后一级Page的时候，如果发现AF是0，那就直接自己完成读写原子操作，将page的AF改为1，而无需上报Fault给软件。 而Dirty state的维护就体现的比较拐弯抹角了。它是同时使用DBM、AP/S2AP这一组域段来表示是否为Dirty的。 首先，软件会把页的访问权限设置为“不可写”。这里的“不可写”其实区分为“真的不可写”和“为了判断dirty state，暂时不可写”两种情况。这两种情况体现在DBM这个域段上：如果为0，那就是“真的不可写”如果为1，那就是“为了判断dirty state，暂时不可写” 如果DBM为0，那硬件在想要修改AF的时候，会发生权限错误，然后上报fault给软件。如果DBM为1，那硬件就知道，其实这个是可以写的，直接就将权限AP/S2AP修改为可写的状态。而权限从不可写变为可写这件事情，就表明该页是Dirty的了。","link":"/posts/a6a87a63.html"},{"title":"当前ARM只有64KB粒度页表支持52bit","text":"ARMv8.2架构支持到52bit了，但仅有64KB粒度的页表才支持ARMv9架构则4k和16k翻译粒度也支持52bit，这里简单理解一下。 参考文献技术|理解 ARM64 内核中对 52 位虚拟地址的支持Linux内存管理：虚拟地址空间 - 知乎ARM-translation table walk_赵不胖的博客-CSDN博客为什么64位机指针只用48个位？ - 知乎 为什么64位的架构，并没有支持64位的地址空间？实现如此巨大的地址宽度只会增加系统的复杂度和地址转换的成本，带不来任何好处。AMD因此决定，在对这一架构的首次实现中，只有虚拟地址的最低48位才会在地址转换（页表查询）时被使用。 一个表示虚拟内存地址的64位指针只有低48位有效并带符号扩展到64位——换句话说，其高16位必须是全1或全0，而且必须与低48位的最高位（第47位）一致，否则通过该地址访问内存会产生#GP异常（general-protection exception） 不考虑大页的情况下，每一级4K大小的页表可以保存512项（每项8字节，64位，4096/8=512），对于一个48位地址来说，低4K地址（12位）是页内偏移，之后每多一级页表，地址范围增加9位，所以可以得到下面的规律：一级页表：9+12=21位地址，最大地址2MB二级页表：9+9+12=30位地址，最大地址1GB三级页表：9+9+9+12=39位地址，最大地址512GB四级页表：9+9+9+9+12=48位地址，最大地址256TB五级页表：9+9+9+9+9+12=57位地址，最大地址128PB六级页表：9+9+9+9+9+9+12=66位地址，超过64位，最大地址128EB 为啥是 9 bit 一级？4KB/8B = 0.5K = 9 bit ARMv8.2 架构的 LVA 和 LPA 拓展ARMv8.2 架构提供两种重要的拓展：大虚拟寻址（LVA）和大物理寻址（LPA）。 当使用 64 KB 转换粒度时，ARMv8.2-LVA 为每个翻译表基地址寄存器提供了一个更大的 52 位虚拟地址空间。 当使用 64 KB 转换粒度时，中间物理地址（IPA）和物理地址空间拓展为 52 位。 如果使用 64 KB 转换粒度来实现对 52 位物理地址的支持，那么一级块将会覆盖 4TB 的地址空间。 需要注意的是这些特性仅在 AArch64 架构中支持。 伴随着 ARMv8.2 拓展增加了对 LVA 地址的支持（仅当以页大小为 64 KB 运行时可用），在第一级转换中，描述符的数量会增加。 ARMv9 架构的 LVA2 和 LPA2 拓展这里需要看最新的ARM架构手册，可以看到，现在进一步增加对4K和16K翻译粒度的52bit地址空间支持。","link":"/posts/115c5add.html"}],"tags":[{"name":"AXI","slug":"AXI","link":"/tags/AXI/"},{"name":"ARM","slug":"ARM","link":"/tags/ARM/"},{"name":"MMU","slug":"MMU","link":"/tags/MMU/"},{"name":"内存管理","slug":"内存管理","link":"/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"},{"name":"页表","slug":"页表","link":"/tags/%E9%A1%B5%E8%A1%A8/"},{"name":"数字IC","slug":"数字IC","link":"/tags/%E6%95%B0%E5%AD%97IC/"},{"name":"HEXO","slug":"HEXO","link":"/tags/HEXO/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"GVim","slug":"GVim","link":"/tags/GVim/"},{"name":"工作心得","slug":"工作心得","link":"/tags/%E5%B7%A5%E4%BD%9C%E5%BF%83%E5%BE%97/"},{"name":"动漫","slug":"动漫","link":"/tags/%E5%8A%A8%E6%BC%AB/"},{"name":"网游","slug":"网游","link":"/tags/%E7%BD%91%E6%B8%B8/"},{"name":"CHI","slug":"CHI","link":"/tags/CHI/"},{"name":"AMBA","slug":"AMBA","link":"/tags/AMBA/"},{"name":"折腾","slug":"折腾","link":"/tags/%E6%8A%98%E8%85%BE/"},{"name":"中断","slug":"中断","link":"/tags/%E4%B8%AD%E6%96%AD/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","link":"/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"知识碎片","slug":"知识碎片","link":"/categories/%E7%9F%A5%E8%AF%86%E7%A2%8E%E7%89%87/"},{"name":"心得随写","slug":"心得随写","link":"/categories/%E5%BF%83%E5%BE%97%E9%9A%8F%E5%86%99/"},{"name":"兴趣杂谈","slug":"兴趣杂谈","link":"/categories/%E5%85%B4%E8%B6%A3%E6%9D%82%E8%B0%88/"}],"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}]}